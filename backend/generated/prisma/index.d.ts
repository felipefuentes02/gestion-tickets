
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Departamento
 * 
 */
export type Departamento = $Result.DefaultSelection<Prisma.$DepartamentoPayload>
/**
 * Model Rol
 * 
 */
export type Rol = $Result.DefaultSelection<Prisma.$RolPayload>
/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model EstadoTicket
 * 
 */
export type EstadoTicket = $Result.DefaultSelection<Prisma.$EstadoTicketPayload>
/**
 * Model Prioridad
 * 
 */
export type Prioridad = $Result.DefaultSelection<Prisma.$PrioridadPayload>
/**
 * Model SlaPrioridad
 * 
 */
export type SlaPrioridad = $Result.DefaultSelection<Prisma.$SlaPrioridadPayload>
/**
 * Model Ticket
 * 
 */
export type Ticket = $Result.DefaultSelection<Prisma.$TicketPayload>
/**
 * Model HistorialTicket
 * 
 */
export type HistorialTicket = $Result.DefaultSelection<Prisma.$HistorialTicketPayload>
/**
 * Model ComentarioTicket
 * 
 */
export type ComentarioTicket = $Result.DefaultSelection<Prisma.$ComentarioTicketPayload>
/**
 * Model ArchivoAdjunto
 * 
 */
export type ArchivoAdjunto = $Result.DefaultSelection<Prisma.$ArchivoAdjuntoPayload>
/**
 * Model DerivacionTicket
 * 
 */
export type DerivacionTicket = $Result.DefaultSelection<Prisma.$DerivacionTicketPayload>
/**
 * Model Encuesta
 * 
 */
export type Encuesta = $Result.DefaultSelection<Prisma.$EncuestaPayload>
/**
 * Model Notificacion
 * 
 */
export type Notificacion = $Result.DefaultSelection<Prisma.$NotificacionPayload>
/**
 * Model UsuarioEnCopia
 * 
 */
export type UsuarioEnCopia = $Result.DefaultSelection<Prisma.$UsuarioEnCopiaPayload>
/**
 * Model ConfiguracionSistema
 * 
 */
export type ConfiguracionSistema = $Result.DefaultSelection<Prisma.$ConfiguracionSistemaPayload>
/**
 * Model PasswordResetToken
 * 
 */
export type PasswordResetToken = $Result.DefaultSelection<Prisma.$PasswordResetTokenPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Departamentos
 * const departamentos = await prisma.departamento.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Departamentos
   * const departamentos = await prisma.departamento.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.departamento`: Exposes CRUD operations for the **Departamento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Departamentos
    * const departamentos = await prisma.departamento.findMany()
    * ```
    */
  get departamento(): Prisma.DepartamentoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rol`: Exposes CRUD operations for the **Rol** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rols
    * const rols = await prisma.rol.findMany()
    * ```
    */
  get rol(): Prisma.RolDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estadoTicket`: Exposes CRUD operations for the **EstadoTicket** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EstadoTickets
    * const estadoTickets = await prisma.estadoTicket.findMany()
    * ```
    */
  get estadoTicket(): Prisma.EstadoTicketDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.prioridad`: Exposes CRUD operations for the **Prioridad** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Prioridads
    * const prioridads = await prisma.prioridad.findMany()
    * ```
    */
  get prioridad(): Prisma.PrioridadDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.slaPrioridad`: Exposes CRUD operations for the **SlaPrioridad** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SlaPrioridads
    * const slaPrioridads = await prisma.slaPrioridad.findMany()
    * ```
    */
  get slaPrioridad(): Prisma.SlaPrioridadDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ticket`: Exposes CRUD operations for the **Ticket** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tickets
    * const tickets = await prisma.ticket.findMany()
    * ```
    */
  get ticket(): Prisma.TicketDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.historialTicket`: Exposes CRUD operations for the **HistorialTicket** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistorialTickets
    * const historialTickets = await prisma.historialTicket.findMany()
    * ```
    */
  get historialTicket(): Prisma.HistorialTicketDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comentarioTicket`: Exposes CRUD operations for the **ComentarioTicket** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ComentarioTickets
    * const comentarioTickets = await prisma.comentarioTicket.findMany()
    * ```
    */
  get comentarioTicket(): Prisma.ComentarioTicketDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.archivoAdjunto`: Exposes CRUD operations for the **ArchivoAdjunto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ArchivoAdjuntos
    * const archivoAdjuntos = await prisma.archivoAdjunto.findMany()
    * ```
    */
  get archivoAdjunto(): Prisma.ArchivoAdjuntoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.derivacionTicket`: Exposes CRUD operations for the **DerivacionTicket** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DerivacionTickets
    * const derivacionTickets = await prisma.derivacionTicket.findMany()
    * ```
    */
  get derivacionTicket(): Prisma.DerivacionTicketDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.encuesta`: Exposes CRUD operations for the **Encuesta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Encuestas
    * const encuestas = await prisma.encuesta.findMany()
    * ```
    */
  get encuesta(): Prisma.EncuestaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notificacion`: Exposes CRUD operations for the **Notificacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notificacions
    * const notificacions = await prisma.notificacion.findMany()
    * ```
    */
  get notificacion(): Prisma.NotificacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuarioEnCopia`: Exposes CRUD operations for the **UsuarioEnCopia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UsuarioEnCopias
    * const usuarioEnCopias = await prisma.usuarioEnCopia.findMany()
    * ```
    */
  get usuarioEnCopia(): Prisma.UsuarioEnCopiaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.configuracionSistema`: Exposes CRUD operations for the **ConfiguracionSistema** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ConfiguracionSistemas
    * const configuracionSistemas = await prisma.configuracionSistema.findMany()
    * ```
    */
  get configuracionSistema(): Prisma.ConfiguracionSistemaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.passwordResetToken`: Exposes CRUD operations for the **PasswordResetToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PasswordResetTokens
    * const passwordResetTokens = await prisma.passwordResetToken.findMany()
    * ```
    */
  get passwordResetToken(): Prisma.PasswordResetTokenDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.10.1
   * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Departamento: 'Departamento',
    Rol: 'Rol',
    Usuario: 'Usuario',
    EstadoTicket: 'EstadoTicket',
    Prioridad: 'Prioridad',
    SlaPrioridad: 'SlaPrioridad',
    Ticket: 'Ticket',
    HistorialTicket: 'HistorialTicket',
    ComentarioTicket: 'ComentarioTicket',
    ArchivoAdjunto: 'ArchivoAdjunto',
    DerivacionTicket: 'DerivacionTicket',
    Encuesta: 'Encuesta',
    Notificacion: 'Notificacion',
    UsuarioEnCopia: 'UsuarioEnCopia',
    ConfiguracionSistema: 'ConfiguracionSistema',
    PasswordResetToken: 'PasswordResetToken'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "departamento" | "rol" | "usuario" | "estadoTicket" | "prioridad" | "slaPrioridad" | "ticket" | "historialTicket" | "comentarioTicket" | "archivoAdjunto" | "derivacionTicket" | "encuesta" | "notificacion" | "usuarioEnCopia" | "configuracionSistema" | "passwordResetToken"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Departamento: {
        payload: Prisma.$DepartamentoPayload<ExtArgs>
        fields: Prisma.DepartamentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DepartamentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DepartamentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          findFirst: {
            args: Prisma.DepartamentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DepartamentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          findMany: {
            args: Prisma.DepartamentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>[]
          }
          create: {
            args: Prisma.DepartamentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          createMany: {
            args: Prisma.DepartamentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DepartamentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>[]
          }
          delete: {
            args: Prisma.DepartamentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          update: {
            args: Prisma.DepartamentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          deleteMany: {
            args: Prisma.DepartamentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DepartamentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DepartamentoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>[]
          }
          upsert: {
            args: Prisma.DepartamentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          aggregate: {
            args: Prisma.DepartamentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDepartamento>
          }
          groupBy: {
            args: Prisma.DepartamentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<DepartamentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.DepartamentoCountArgs<ExtArgs>
            result: $Utils.Optional<DepartamentoCountAggregateOutputType> | number
          }
        }
      }
      Rol: {
        payload: Prisma.$RolPayload<ExtArgs>
        fields: Prisma.RolFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RolFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RolFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          findFirst: {
            args: Prisma.RolFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RolFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          findMany: {
            args: Prisma.RolFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>[]
          }
          create: {
            args: Prisma.RolCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          createMany: {
            args: Prisma.RolCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RolCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>[]
          }
          delete: {
            args: Prisma.RolDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          update: {
            args: Prisma.RolUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          deleteMany: {
            args: Prisma.RolDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RolUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RolUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>[]
          }
          upsert: {
            args: Prisma.RolUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          aggregate: {
            args: Prisma.RolAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRol>
          }
          groupBy: {
            args: Prisma.RolGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolGroupByOutputType>[]
          }
          count: {
            args: Prisma.RolCountArgs<ExtArgs>
            result: $Utils.Optional<RolCountAggregateOutputType> | number
          }
        }
      }
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      EstadoTicket: {
        payload: Prisma.$EstadoTicketPayload<ExtArgs>
        fields: Prisma.EstadoTicketFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstadoTicketFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoTicketPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstadoTicketFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoTicketPayload>
          }
          findFirst: {
            args: Prisma.EstadoTicketFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoTicketPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstadoTicketFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoTicketPayload>
          }
          findMany: {
            args: Prisma.EstadoTicketFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoTicketPayload>[]
          }
          create: {
            args: Prisma.EstadoTicketCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoTicketPayload>
          }
          createMany: {
            args: Prisma.EstadoTicketCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstadoTicketCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoTicketPayload>[]
          }
          delete: {
            args: Prisma.EstadoTicketDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoTicketPayload>
          }
          update: {
            args: Prisma.EstadoTicketUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoTicketPayload>
          }
          deleteMany: {
            args: Prisma.EstadoTicketDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstadoTicketUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstadoTicketUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoTicketPayload>[]
          }
          upsert: {
            args: Prisma.EstadoTicketUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoTicketPayload>
          }
          aggregate: {
            args: Prisma.EstadoTicketAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstadoTicket>
          }
          groupBy: {
            args: Prisma.EstadoTicketGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstadoTicketGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstadoTicketCountArgs<ExtArgs>
            result: $Utils.Optional<EstadoTicketCountAggregateOutputType> | number
          }
        }
      }
      Prioridad: {
        payload: Prisma.$PrioridadPayload<ExtArgs>
        fields: Prisma.PrioridadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PrioridadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrioridadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PrioridadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrioridadPayload>
          }
          findFirst: {
            args: Prisma.PrioridadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrioridadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PrioridadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrioridadPayload>
          }
          findMany: {
            args: Prisma.PrioridadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrioridadPayload>[]
          }
          create: {
            args: Prisma.PrioridadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrioridadPayload>
          }
          createMany: {
            args: Prisma.PrioridadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PrioridadCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrioridadPayload>[]
          }
          delete: {
            args: Prisma.PrioridadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrioridadPayload>
          }
          update: {
            args: Prisma.PrioridadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrioridadPayload>
          }
          deleteMany: {
            args: Prisma.PrioridadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PrioridadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PrioridadUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrioridadPayload>[]
          }
          upsert: {
            args: Prisma.PrioridadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrioridadPayload>
          }
          aggregate: {
            args: Prisma.PrioridadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrioridad>
          }
          groupBy: {
            args: Prisma.PrioridadGroupByArgs<ExtArgs>
            result: $Utils.Optional<PrioridadGroupByOutputType>[]
          }
          count: {
            args: Prisma.PrioridadCountArgs<ExtArgs>
            result: $Utils.Optional<PrioridadCountAggregateOutputType> | number
          }
        }
      }
      SlaPrioridad: {
        payload: Prisma.$SlaPrioridadPayload<ExtArgs>
        fields: Prisma.SlaPrioridadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SlaPrioridadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlaPrioridadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SlaPrioridadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlaPrioridadPayload>
          }
          findFirst: {
            args: Prisma.SlaPrioridadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlaPrioridadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SlaPrioridadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlaPrioridadPayload>
          }
          findMany: {
            args: Prisma.SlaPrioridadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlaPrioridadPayload>[]
          }
          create: {
            args: Prisma.SlaPrioridadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlaPrioridadPayload>
          }
          createMany: {
            args: Prisma.SlaPrioridadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SlaPrioridadCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlaPrioridadPayload>[]
          }
          delete: {
            args: Prisma.SlaPrioridadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlaPrioridadPayload>
          }
          update: {
            args: Prisma.SlaPrioridadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlaPrioridadPayload>
          }
          deleteMany: {
            args: Prisma.SlaPrioridadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SlaPrioridadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SlaPrioridadUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlaPrioridadPayload>[]
          }
          upsert: {
            args: Prisma.SlaPrioridadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlaPrioridadPayload>
          }
          aggregate: {
            args: Prisma.SlaPrioridadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSlaPrioridad>
          }
          groupBy: {
            args: Prisma.SlaPrioridadGroupByArgs<ExtArgs>
            result: $Utils.Optional<SlaPrioridadGroupByOutputType>[]
          }
          count: {
            args: Prisma.SlaPrioridadCountArgs<ExtArgs>
            result: $Utils.Optional<SlaPrioridadCountAggregateOutputType> | number
          }
        }
      }
      Ticket: {
        payload: Prisma.$TicketPayload<ExtArgs>
        fields: Prisma.TicketFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TicketFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TicketFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>
          }
          findFirst: {
            args: Prisma.TicketFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TicketFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>
          }
          findMany: {
            args: Prisma.TicketFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>[]
          }
          create: {
            args: Prisma.TicketCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>
          }
          createMany: {
            args: Prisma.TicketCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TicketCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>[]
          }
          delete: {
            args: Prisma.TicketDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>
          }
          update: {
            args: Prisma.TicketUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>
          }
          deleteMany: {
            args: Prisma.TicketDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TicketUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TicketUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>[]
          }
          upsert: {
            args: Prisma.TicketUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>
          }
          aggregate: {
            args: Prisma.TicketAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTicket>
          }
          groupBy: {
            args: Prisma.TicketGroupByArgs<ExtArgs>
            result: $Utils.Optional<TicketGroupByOutputType>[]
          }
          count: {
            args: Prisma.TicketCountArgs<ExtArgs>
            result: $Utils.Optional<TicketCountAggregateOutputType> | number
          }
        }
      }
      HistorialTicket: {
        payload: Prisma.$HistorialTicketPayload<ExtArgs>
        fields: Prisma.HistorialTicketFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HistorialTicketFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialTicketPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HistorialTicketFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialTicketPayload>
          }
          findFirst: {
            args: Prisma.HistorialTicketFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialTicketPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HistorialTicketFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialTicketPayload>
          }
          findMany: {
            args: Prisma.HistorialTicketFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialTicketPayload>[]
          }
          create: {
            args: Prisma.HistorialTicketCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialTicketPayload>
          }
          createMany: {
            args: Prisma.HistorialTicketCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HistorialTicketCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialTicketPayload>[]
          }
          delete: {
            args: Prisma.HistorialTicketDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialTicketPayload>
          }
          update: {
            args: Prisma.HistorialTicketUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialTicketPayload>
          }
          deleteMany: {
            args: Prisma.HistorialTicketDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HistorialTicketUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HistorialTicketUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialTicketPayload>[]
          }
          upsert: {
            args: Prisma.HistorialTicketUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialTicketPayload>
          }
          aggregate: {
            args: Prisma.HistorialTicketAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistorialTicket>
          }
          groupBy: {
            args: Prisma.HistorialTicketGroupByArgs<ExtArgs>
            result: $Utils.Optional<HistorialTicketGroupByOutputType>[]
          }
          count: {
            args: Prisma.HistorialTicketCountArgs<ExtArgs>
            result: $Utils.Optional<HistorialTicketCountAggregateOutputType> | number
          }
        }
      }
      ComentarioTicket: {
        payload: Prisma.$ComentarioTicketPayload<ExtArgs>
        fields: Prisma.ComentarioTicketFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ComentarioTicketFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioTicketPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ComentarioTicketFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioTicketPayload>
          }
          findFirst: {
            args: Prisma.ComentarioTicketFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioTicketPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ComentarioTicketFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioTicketPayload>
          }
          findMany: {
            args: Prisma.ComentarioTicketFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioTicketPayload>[]
          }
          create: {
            args: Prisma.ComentarioTicketCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioTicketPayload>
          }
          createMany: {
            args: Prisma.ComentarioTicketCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ComentarioTicketCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioTicketPayload>[]
          }
          delete: {
            args: Prisma.ComentarioTicketDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioTicketPayload>
          }
          update: {
            args: Prisma.ComentarioTicketUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioTicketPayload>
          }
          deleteMany: {
            args: Prisma.ComentarioTicketDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ComentarioTicketUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ComentarioTicketUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioTicketPayload>[]
          }
          upsert: {
            args: Prisma.ComentarioTicketUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioTicketPayload>
          }
          aggregate: {
            args: Prisma.ComentarioTicketAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComentarioTicket>
          }
          groupBy: {
            args: Prisma.ComentarioTicketGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComentarioTicketGroupByOutputType>[]
          }
          count: {
            args: Prisma.ComentarioTicketCountArgs<ExtArgs>
            result: $Utils.Optional<ComentarioTicketCountAggregateOutputType> | number
          }
        }
      }
      ArchivoAdjunto: {
        payload: Prisma.$ArchivoAdjuntoPayload<ExtArgs>
        fields: Prisma.ArchivoAdjuntoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ArchivoAdjuntoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoAdjuntoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ArchivoAdjuntoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoAdjuntoPayload>
          }
          findFirst: {
            args: Prisma.ArchivoAdjuntoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoAdjuntoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ArchivoAdjuntoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoAdjuntoPayload>
          }
          findMany: {
            args: Prisma.ArchivoAdjuntoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoAdjuntoPayload>[]
          }
          create: {
            args: Prisma.ArchivoAdjuntoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoAdjuntoPayload>
          }
          createMany: {
            args: Prisma.ArchivoAdjuntoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ArchivoAdjuntoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoAdjuntoPayload>[]
          }
          delete: {
            args: Prisma.ArchivoAdjuntoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoAdjuntoPayload>
          }
          update: {
            args: Prisma.ArchivoAdjuntoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoAdjuntoPayload>
          }
          deleteMany: {
            args: Prisma.ArchivoAdjuntoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ArchivoAdjuntoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ArchivoAdjuntoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoAdjuntoPayload>[]
          }
          upsert: {
            args: Prisma.ArchivoAdjuntoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoAdjuntoPayload>
          }
          aggregate: {
            args: Prisma.ArchivoAdjuntoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArchivoAdjunto>
          }
          groupBy: {
            args: Prisma.ArchivoAdjuntoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ArchivoAdjuntoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ArchivoAdjuntoCountArgs<ExtArgs>
            result: $Utils.Optional<ArchivoAdjuntoCountAggregateOutputType> | number
          }
        }
      }
      DerivacionTicket: {
        payload: Prisma.$DerivacionTicketPayload<ExtArgs>
        fields: Prisma.DerivacionTicketFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DerivacionTicketFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DerivacionTicketPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DerivacionTicketFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DerivacionTicketPayload>
          }
          findFirst: {
            args: Prisma.DerivacionTicketFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DerivacionTicketPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DerivacionTicketFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DerivacionTicketPayload>
          }
          findMany: {
            args: Prisma.DerivacionTicketFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DerivacionTicketPayload>[]
          }
          create: {
            args: Prisma.DerivacionTicketCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DerivacionTicketPayload>
          }
          createMany: {
            args: Prisma.DerivacionTicketCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DerivacionTicketCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DerivacionTicketPayload>[]
          }
          delete: {
            args: Prisma.DerivacionTicketDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DerivacionTicketPayload>
          }
          update: {
            args: Prisma.DerivacionTicketUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DerivacionTicketPayload>
          }
          deleteMany: {
            args: Prisma.DerivacionTicketDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DerivacionTicketUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DerivacionTicketUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DerivacionTicketPayload>[]
          }
          upsert: {
            args: Prisma.DerivacionTicketUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DerivacionTicketPayload>
          }
          aggregate: {
            args: Prisma.DerivacionTicketAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDerivacionTicket>
          }
          groupBy: {
            args: Prisma.DerivacionTicketGroupByArgs<ExtArgs>
            result: $Utils.Optional<DerivacionTicketGroupByOutputType>[]
          }
          count: {
            args: Prisma.DerivacionTicketCountArgs<ExtArgs>
            result: $Utils.Optional<DerivacionTicketCountAggregateOutputType> | number
          }
        }
      }
      Encuesta: {
        payload: Prisma.$EncuestaPayload<ExtArgs>
        fields: Prisma.EncuestaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EncuestaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EncuestaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EncuestaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EncuestaPayload>
          }
          findFirst: {
            args: Prisma.EncuestaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EncuestaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EncuestaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EncuestaPayload>
          }
          findMany: {
            args: Prisma.EncuestaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EncuestaPayload>[]
          }
          create: {
            args: Prisma.EncuestaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EncuestaPayload>
          }
          createMany: {
            args: Prisma.EncuestaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EncuestaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EncuestaPayload>[]
          }
          delete: {
            args: Prisma.EncuestaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EncuestaPayload>
          }
          update: {
            args: Prisma.EncuestaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EncuestaPayload>
          }
          deleteMany: {
            args: Prisma.EncuestaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EncuestaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EncuestaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EncuestaPayload>[]
          }
          upsert: {
            args: Prisma.EncuestaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EncuestaPayload>
          }
          aggregate: {
            args: Prisma.EncuestaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEncuesta>
          }
          groupBy: {
            args: Prisma.EncuestaGroupByArgs<ExtArgs>
            result: $Utils.Optional<EncuestaGroupByOutputType>[]
          }
          count: {
            args: Prisma.EncuestaCountArgs<ExtArgs>
            result: $Utils.Optional<EncuestaCountAggregateOutputType> | number
          }
        }
      }
      Notificacion: {
        payload: Prisma.$NotificacionPayload<ExtArgs>
        fields: Prisma.NotificacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>
          }
          findFirst: {
            args: Prisma.NotificacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>
          }
          findMany: {
            args: Prisma.NotificacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>[]
          }
          create: {
            args: Prisma.NotificacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>
          }
          createMany: {
            args: Prisma.NotificacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>[]
          }
          delete: {
            args: Prisma.NotificacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>
          }
          update: {
            args: Prisma.NotificacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>
          }
          deleteMany: {
            args: Prisma.NotificacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NotificacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>[]
          }
          upsert: {
            args: Prisma.NotificacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>
          }
          aggregate: {
            args: Prisma.NotificacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotificacion>
          }
          groupBy: {
            args: Prisma.NotificacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificacionCountArgs<ExtArgs>
            result: $Utils.Optional<NotificacionCountAggregateOutputType> | number
          }
        }
      }
      UsuarioEnCopia: {
        payload: Prisma.$UsuarioEnCopiaPayload<ExtArgs>
        fields: Prisma.UsuarioEnCopiaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioEnCopiaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEnCopiaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioEnCopiaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEnCopiaPayload>
          }
          findFirst: {
            args: Prisma.UsuarioEnCopiaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEnCopiaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioEnCopiaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEnCopiaPayload>
          }
          findMany: {
            args: Prisma.UsuarioEnCopiaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEnCopiaPayload>[]
          }
          create: {
            args: Prisma.UsuarioEnCopiaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEnCopiaPayload>
          }
          createMany: {
            args: Prisma.UsuarioEnCopiaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioEnCopiaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEnCopiaPayload>[]
          }
          delete: {
            args: Prisma.UsuarioEnCopiaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEnCopiaPayload>
          }
          update: {
            args: Prisma.UsuarioEnCopiaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEnCopiaPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioEnCopiaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioEnCopiaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioEnCopiaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEnCopiaPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioEnCopiaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEnCopiaPayload>
          }
          aggregate: {
            args: Prisma.UsuarioEnCopiaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarioEnCopia>
          }
          groupBy: {
            args: Prisma.UsuarioEnCopiaGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioEnCopiaGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioEnCopiaCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioEnCopiaCountAggregateOutputType> | number
          }
        }
      }
      ConfiguracionSistema: {
        payload: Prisma.$ConfiguracionSistemaPayload<ExtArgs>
        fields: Prisma.ConfiguracionSistemaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConfiguracionSistemaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConfiguracionSistemaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>
          }
          findFirst: {
            args: Prisma.ConfiguracionSistemaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConfiguracionSistemaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>
          }
          findMany: {
            args: Prisma.ConfiguracionSistemaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>[]
          }
          create: {
            args: Prisma.ConfiguracionSistemaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>
          }
          createMany: {
            args: Prisma.ConfiguracionSistemaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConfiguracionSistemaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>[]
          }
          delete: {
            args: Prisma.ConfiguracionSistemaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>
          }
          update: {
            args: Prisma.ConfiguracionSistemaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>
          }
          deleteMany: {
            args: Prisma.ConfiguracionSistemaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConfiguracionSistemaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ConfiguracionSistemaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>[]
          }
          upsert: {
            args: Prisma.ConfiguracionSistemaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>
          }
          aggregate: {
            args: Prisma.ConfiguracionSistemaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfiguracionSistema>
          }
          groupBy: {
            args: Prisma.ConfiguracionSistemaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracionSistemaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConfiguracionSistemaCountArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracionSistemaCountAggregateOutputType> | number
          }
        }
      }
      PasswordResetToken: {
        payload: Prisma.$PasswordResetTokenPayload<ExtArgs>
        fields: Prisma.PasswordResetTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PasswordResetTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PasswordResetTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          findFirst: {
            args: Prisma.PasswordResetTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PasswordResetTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          findMany: {
            args: Prisma.PasswordResetTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>[]
          }
          create: {
            args: Prisma.PasswordResetTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          createMany: {
            args: Prisma.PasswordResetTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PasswordResetTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>[]
          }
          delete: {
            args: Prisma.PasswordResetTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          update: {
            args: Prisma.PasswordResetTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          deleteMany: {
            args: Prisma.PasswordResetTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PasswordResetTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PasswordResetTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>[]
          }
          upsert: {
            args: Prisma.PasswordResetTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          aggregate: {
            args: Prisma.PasswordResetTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePasswordResetToken>
          }
          groupBy: {
            args: Prisma.PasswordResetTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<PasswordResetTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.PasswordResetTokenCountArgs<ExtArgs>
            result: $Utils.Optional<PasswordResetTokenCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    departamento?: DepartamentoOmit
    rol?: RolOmit
    usuario?: UsuarioOmit
    estadoTicket?: EstadoTicketOmit
    prioridad?: PrioridadOmit
    slaPrioridad?: SlaPrioridadOmit
    ticket?: TicketOmit
    historialTicket?: HistorialTicketOmit
    comentarioTicket?: ComentarioTicketOmit
    archivoAdjunto?: ArchivoAdjuntoOmit
    derivacionTicket?: DerivacionTicketOmit
    encuesta?: EncuestaOmit
    notificacion?: NotificacionOmit
    usuarioEnCopia?: UsuarioEnCopiaOmit
    configuracionSistema?: ConfiguracionSistemaOmit
    passwordResetToken?: PasswordResetTokenOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type DepartamentoCountOutputType
   */

  export type DepartamentoCountOutputType = {
    usuarios: number
    tickets: number
    derivacionesOrigen: number
    derivacionesDestino: number
    slaPrioridades: number
  }

  export type DepartamentoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | DepartamentoCountOutputTypeCountUsuariosArgs
    tickets?: boolean | DepartamentoCountOutputTypeCountTicketsArgs
    derivacionesOrigen?: boolean | DepartamentoCountOutputTypeCountDerivacionesOrigenArgs
    derivacionesDestino?: boolean | DepartamentoCountOutputTypeCountDerivacionesDestinoArgs
    slaPrioridades?: boolean | DepartamentoCountOutputTypeCountSlaPrioridadesArgs
  }

  // Custom InputTypes
  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepartamentoCountOutputType
     */
    select?: DepartamentoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }

  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeCountTicketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketWhereInput
  }

  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeCountDerivacionesOrigenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DerivacionTicketWhereInput
  }

  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeCountDerivacionesDestinoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DerivacionTicketWhereInput
  }

  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeCountSlaPrioridadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SlaPrioridadWhereInput
  }


  /**
   * Count Type RolCountOutputType
   */

  export type RolCountOutputType = {
    usuarios: number
  }

  export type RolCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | RolCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolCountOutputType
     */
    select?: RolCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    ticketsCreados: number
    ticketsAsignados: number
    comentarios: number
    historial: number
    archivosSubidos: number
    derivaciones: number
    encuestas: number
    notificaciones: number
    usuariosEnCopia: number
    configuraciones: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticketsCreados?: boolean | UsuarioCountOutputTypeCountTicketsCreadosArgs
    ticketsAsignados?: boolean | UsuarioCountOutputTypeCountTicketsAsignadosArgs
    comentarios?: boolean | UsuarioCountOutputTypeCountComentariosArgs
    historial?: boolean | UsuarioCountOutputTypeCountHistorialArgs
    archivosSubidos?: boolean | UsuarioCountOutputTypeCountArchivosSubidosArgs
    derivaciones?: boolean | UsuarioCountOutputTypeCountDerivacionesArgs
    encuestas?: boolean | UsuarioCountOutputTypeCountEncuestasArgs
    notificaciones?: boolean | UsuarioCountOutputTypeCountNotificacionesArgs
    usuariosEnCopia?: boolean | UsuarioCountOutputTypeCountUsuariosEnCopiaArgs
    configuraciones?: boolean | UsuarioCountOutputTypeCountConfiguracionesArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountTicketsCreadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountTicketsAsignadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountComentariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComentarioTicketWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountHistorialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialTicketWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountArchivosSubidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArchivoAdjuntoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountDerivacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DerivacionTicketWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountEncuestasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EncuestaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountNotificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacionWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountUsuariosEnCopiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioEnCopiaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountConfiguracionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfiguracionSistemaWhereInput
  }


  /**
   * Count Type EstadoTicketCountOutputType
   */

  export type EstadoTicketCountOutputType = {
    tickets: number
  }

  export type EstadoTicketCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tickets?: boolean | EstadoTicketCountOutputTypeCountTicketsArgs
  }

  // Custom InputTypes
  /**
   * EstadoTicketCountOutputType without action
   */
  export type EstadoTicketCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoTicketCountOutputType
     */
    select?: EstadoTicketCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstadoTicketCountOutputType without action
   */
  export type EstadoTicketCountOutputTypeCountTicketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketWhereInput
  }


  /**
   * Count Type PrioridadCountOutputType
   */

  export type PrioridadCountOutputType = {
    tickets: number
    slas: number
  }

  export type PrioridadCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tickets?: boolean | PrioridadCountOutputTypeCountTicketsArgs
    slas?: boolean | PrioridadCountOutputTypeCountSlasArgs
  }

  // Custom InputTypes
  /**
   * PrioridadCountOutputType without action
   */
  export type PrioridadCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrioridadCountOutputType
     */
    select?: PrioridadCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PrioridadCountOutputType without action
   */
  export type PrioridadCountOutputTypeCountTicketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketWhereInput
  }

  /**
   * PrioridadCountOutputType without action
   */
  export type PrioridadCountOutputTypeCountSlasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SlaPrioridadWhereInput
  }


  /**
   * Count Type TicketCountOutputType
   */

  export type TicketCountOutputType = {
    comentarios: number
    historial: number
    archivos: number
    derivaciones: number
    notificaciones: number
    usuariosEnCopia: number
  }

  export type TicketCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comentarios?: boolean | TicketCountOutputTypeCountComentariosArgs
    historial?: boolean | TicketCountOutputTypeCountHistorialArgs
    archivos?: boolean | TicketCountOutputTypeCountArchivosArgs
    derivaciones?: boolean | TicketCountOutputTypeCountDerivacionesArgs
    notificaciones?: boolean | TicketCountOutputTypeCountNotificacionesArgs
    usuariosEnCopia?: boolean | TicketCountOutputTypeCountUsuariosEnCopiaArgs
  }

  // Custom InputTypes
  /**
   * TicketCountOutputType without action
   */
  export type TicketCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketCountOutputType
     */
    select?: TicketCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TicketCountOutputType without action
   */
  export type TicketCountOutputTypeCountComentariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComentarioTicketWhereInput
  }

  /**
   * TicketCountOutputType without action
   */
  export type TicketCountOutputTypeCountHistorialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialTicketWhereInput
  }

  /**
   * TicketCountOutputType without action
   */
  export type TicketCountOutputTypeCountArchivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArchivoAdjuntoWhereInput
  }

  /**
   * TicketCountOutputType without action
   */
  export type TicketCountOutputTypeCountDerivacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DerivacionTicketWhereInput
  }

  /**
   * TicketCountOutputType without action
   */
  export type TicketCountOutputTypeCountNotificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacionWhereInput
  }

  /**
   * TicketCountOutputType without action
   */
  export type TicketCountOutputTypeCountUsuariosEnCopiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioEnCopiaWhereInput
  }


  /**
   * Count Type ComentarioTicketCountOutputType
   */

  export type ComentarioTicketCountOutputType = {
    archivos: number
  }

  export type ComentarioTicketCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    archivos?: boolean | ComentarioTicketCountOutputTypeCountArchivosArgs
  }

  // Custom InputTypes
  /**
   * ComentarioTicketCountOutputType without action
   */
  export type ComentarioTicketCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicketCountOutputType
     */
    select?: ComentarioTicketCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ComentarioTicketCountOutputType without action
   */
  export type ComentarioTicketCountOutputTypeCountArchivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArchivoAdjuntoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Departamento
   */

  export type AggregateDepartamento = {
    _count: DepartamentoCountAggregateOutputType | null
    _avg: DepartamentoAvgAggregateOutputType | null
    _sum: DepartamentoSumAggregateOutputType | null
    _min: DepartamentoMinAggregateOutputType | null
    _max: DepartamentoMaxAggregateOutputType | null
  }

  export type DepartamentoAvgAggregateOutputType = {
    id: number | null
  }

  export type DepartamentoSumAggregateOutputType = {
    id: number | null
  }

  export type DepartamentoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    createdAt: Date | null
  }

  export type DepartamentoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    createdAt: Date | null
  }

  export type DepartamentoCountAggregateOutputType = {
    id: number
    nombre: number
    createdAt: number
    _all: number
  }


  export type DepartamentoAvgAggregateInputType = {
    id?: true
  }

  export type DepartamentoSumAggregateInputType = {
    id?: true
  }

  export type DepartamentoMinAggregateInputType = {
    id?: true
    nombre?: true
    createdAt?: true
  }

  export type DepartamentoMaxAggregateInputType = {
    id?: true
    nombre?: true
    createdAt?: true
  }

  export type DepartamentoCountAggregateInputType = {
    id?: true
    nombre?: true
    createdAt?: true
    _all?: true
  }

  export type DepartamentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Departamento to aggregate.
     */
    where?: DepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departamentos to fetch.
     */
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Departamentos
    **/
    _count?: true | DepartamentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DepartamentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DepartamentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepartamentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepartamentoMaxAggregateInputType
  }

  export type GetDepartamentoAggregateType<T extends DepartamentoAggregateArgs> = {
        [P in keyof T & keyof AggregateDepartamento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDepartamento[P]>
      : GetScalarType<T[P], AggregateDepartamento[P]>
  }




  export type DepartamentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepartamentoWhereInput
    orderBy?: DepartamentoOrderByWithAggregationInput | DepartamentoOrderByWithAggregationInput[]
    by: DepartamentoScalarFieldEnum[] | DepartamentoScalarFieldEnum
    having?: DepartamentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepartamentoCountAggregateInputType | true
    _avg?: DepartamentoAvgAggregateInputType
    _sum?: DepartamentoSumAggregateInputType
    _min?: DepartamentoMinAggregateInputType
    _max?: DepartamentoMaxAggregateInputType
  }

  export type DepartamentoGroupByOutputType = {
    id: number
    nombre: string
    createdAt: Date
    _count: DepartamentoCountAggregateOutputType | null
    _avg: DepartamentoAvgAggregateOutputType | null
    _sum: DepartamentoSumAggregateOutputType | null
    _min: DepartamentoMinAggregateOutputType | null
    _max: DepartamentoMaxAggregateOutputType | null
  }

  type GetDepartamentoGroupByPayload<T extends DepartamentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepartamentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepartamentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepartamentoGroupByOutputType[P]>
            : GetScalarType<T[P], DepartamentoGroupByOutputType[P]>
        }
      >
    >


  export type DepartamentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    createdAt?: boolean
    usuarios?: boolean | Departamento$usuariosArgs<ExtArgs>
    tickets?: boolean | Departamento$ticketsArgs<ExtArgs>
    derivacionesOrigen?: boolean | Departamento$derivacionesOrigenArgs<ExtArgs>
    derivacionesDestino?: boolean | Departamento$derivacionesDestinoArgs<ExtArgs>
    slaPrioridades?: boolean | Departamento$slaPrioridadesArgs<ExtArgs>
    _count?: boolean | DepartamentoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["departamento"]>

  export type DepartamentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["departamento"]>

  export type DepartamentoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["departamento"]>

  export type DepartamentoSelectScalar = {
    id?: boolean
    nombre?: boolean
    createdAt?: boolean
  }

  export type DepartamentoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "createdAt", ExtArgs["result"]["departamento"]>
  export type DepartamentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Departamento$usuariosArgs<ExtArgs>
    tickets?: boolean | Departamento$ticketsArgs<ExtArgs>
    derivacionesOrigen?: boolean | Departamento$derivacionesOrigenArgs<ExtArgs>
    derivacionesDestino?: boolean | Departamento$derivacionesDestinoArgs<ExtArgs>
    slaPrioridades?: boolean | Departamento$slaPrioridadesArgs<ExtArgs>
    _count?: boolean | DepartamentoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DepartamentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type DepartamentoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DepartamentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Departamento"
    objects: {
      usuarios: Prisma.$UsuarioPayload<ExtArgs>[]
      tickets: Prisma.$TicketPayload<ExtArgs>[]
      derivacionesOrigen: Prisma.$DerivacionTicketPayload<ExtArgs>[]
      derivacionesDestino: Prisma.$DerivacionTicketPayload<ExtArgs>[]
      slaPrioridades: Prisma.$SlaPrioridadPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      createdAt: Date
    }, ExtArgs["result"]["departamento"]>
    composites: {}
  }

  type DepartamentoGetPayload<S extends boolean | null | undefined | DepartamentoDefaultArgs> = $Result.GetResult<Prisma.$DepartamentoPayload, S>

  type DepartamentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DepartamentoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DepartamentoCountAggregateInputType | true
    }

  export interface DepartamentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Departamento'], meta: { name: 'Departamento' } }
    /**
     * Find zero or one Departamento that matches the filter.
     * @param {DepartamentoFindUniqueArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DepartamentoFindUniqueArgs>(args: SelectSubset<T, DepartamentoFindUniqueArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Departamento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DepartamentoFindUniqueOrThrowArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DepartamentoFindUniqueOrThrowArgs>(args: SelectSubset<T, DepartamentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Departamento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoFindFirstArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DepartamentoFindFirstArgs>(args?: SelectSubset<T, DepartamentoFindFirstArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Departamento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoFindFirstOrThrowArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DepartamentoFindFirstOrThrowArgs>(args?: SelectSubset<T, DepartamentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Departamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Departamentos
     * const departamentos = await prisma.departamento.findMany()
     * 
     * // Get first 10 Departamentos
     * const departamentos = await prisma.departamento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const departamentoWithIdOnly = await prisma.departamento.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DepartamentoFindManyArgs>(args?: SelectSubset<T, DepartamentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Departamento.
     * @param {DepartamentoCreateArgs} args - Arguments to create a Departamento.
     * @example
     * // Create one Departamento
     * const Departamento = await prisma.departamento.create({
     *   data: {
     *     // ... data to create a Departamento
     *   }
     * })
     * 
     */
    create<T extends DepartamentoCreateArgs>(args: SelectSubset<T, DepartamentoCreateArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Departamentos.
     * @param {DepartamentoCreateManyArgs} args - Arguments to create many Departamentos.
     * @example
     * // Create many Departamentos
     * const departamento = await prisma.departamento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DepartamentoCreateManyArgs>(args?: SelectSubset<T, DepartamentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Departamentos and returns the data saved in the database.
     * @param {DepartamentoCreateManyAndReturnArgs} args - Arguments to create many Departamentos.
     * @example
     * // Create many Departamentos
     * const departamento = await prisma.departamento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Departamentos and only return the `id`
     * const departamentoWithIdOnly = await prisma.departamento.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DepartamentoCreateManyAndReturnArgs>(args?: SelectSubset<T, DepartamentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Departamento.
     * @param {DepartamentoDeleteArgs} args - Arguments to delete one Departamento.
     * @example
     * // Delete one Departamento
     * const Departamento = await prisma.departamento.delete({
     *   where: {
     *     // ... filter to delete one Departamento
     *   }
     * })
     * 
     */
    delete<T extends DepartamentoDeleteArgs>(args: SelectSubset<T, DepartamentoDeleteArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Departamento.
     * @param {DepartamentoUpdateArgs} args - Arguments to update one Departamento.
     * @example
     * // Update one Departamento
     * const departamento = await prisma.departamento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DepartamentoUpdateArgs>(args: SelectSubset<T, DepartamentoUpdateArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Departamentos.
     * @param {DepartamentoDeleteManyArgs} args - Arguments to filter Departamentos to delete.
     * @example
     * // Delete a few Departamentos
     * const { count } = await prisma.departamento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DepartamentoDeleteManyArgs>(args?: SelectSubset<T, DepartamentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Departamentos
     * const departamento = await prisma.departamento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DepartamentoUpdateManyArgs>(args: SelectSubset<T, DepartamentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departamentos and returns the data updated in the database.
     * @param {DepartamentoUpdateManyAndReturnArgs} args - Arguments to update many Departamentos.
     * @example
     * // Update many Departamentos
     * const departamento = await prisma.departamento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Departamentos and only return the `id`
     * const departamentoWithIdOnly = await prisma.departamento.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DepartamentoUpdateManyAndReturnArgs>(args: SelectSubset<T, DepartamentoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Departamento.
     * @param {DepartamentoUpsertArgs} args - Arguments to update or create a Departamento.
     * @example
     * // Update or create a Departamento
     * const departamento = await prisma.departamento.upsert({
     *   create: {
     *     // ... data to create a Departamento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Departamento we want to update
     *   }
     * })
     */
    upsert<T extends DepartamentoUpsertArgs>(args: SelectSubset<T, DepartamentoUpsertArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Departamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoCountArgs} args - Arguments to filter Departamentos to count.
     * @example
     * // Count the number of Departamentos
     * const count = await prisma.departamento.count({
     *   where: {
     *     // ... the filter for the Departamentos we want to count
     *   }
     * })
    **/
    count<T extends DepartamentoCountArgs>(
      args?: Subset<T, DepartamentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepartamentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Departamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepartamentoAggregateArgs>(args: Subset<T, DepartamentoAggregateArgs>): Prisma.PrismaPromise<GetDepartamentoAggregateType<T>>

    /**
     * Group by Departamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DepartamentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DepartamentoGroupByArgs['orderBy'] }
        : { orderBy?: DepartamentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DepartamentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepartamentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Departamento model
   */
  readonly fields: DepartamentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Departamento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DepartamentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends Departamento$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Departamento$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tickets<T extends Departamento$ticketsArgs<ExtArgs> = {}>(args?: Subset<T, Departamento$ticketsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    derivacionesOrigen<T extends Departamento$derivacionesOrigenArgs<ExtArgs> = {}>(args?: Subset<T, Departamento$derivacionesOrigenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    derivacionesDestino<T extends Departamento$derivacionesDestinoArgs<ExtArgs> = {}>(args?: Subset<T, Departamento$derivacionesDestinoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    slaPrioridades<T extends Departamento$slaPrioridadesArgs<ExtArgs> = {}>(args?: Subset<T, Departamento$slaPrioridadesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SlaPrioridadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Departamento model
   */
  interface DepartamentoFieldRefs {
    readonly id: FieldRef<"Departamento", 'Int'>
    readonly nombre: FieldRef<"Departamento", 'String'>
    readonly createdAt: FieldRef<"Departamento", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Departamento findUnique
   */
  export type DepartamentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Departamento
     */
    omit?: DepartamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamento to fetch.
     */
    where: DepartamentoWhereUniqueInput
  }

  /**
   * Departamento findUniqueOrThrow
   */
  export type DepartamentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Departamento
     */
    omit?: DepartamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamento to fetch.
     */
    where: DepartamentoWhereUniqueInput
  }

  /**
   * Departamento findFirst
   */
  export type DepartamentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Departamento
     */
    omit?: DepartamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamento to fetch.
     */
    where?: DepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departamentos to fetch.
     */
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Departamentos.
     */
    cursor?: DepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Departamentos.
     */
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * Departamento findFirstOrThrow
   */
  export type DepartamentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Departamento
     */
    omit?: DepartamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamento to fetch.
     */
    where?: DepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departamentos to fetch.
     */
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Departamentos.
     */
    cursor?: DepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Departamentos.
     */
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * Departamento findMany
   */
  export type DepartamentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Departamento
     */
    omit?: DepartamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamentos to fetch.
     */
    where?: DepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departamentos to fetch.
     */
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Departamentos.
     */
    cursor?: DepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departamentos.
     */
    skip?: number
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * Departamento create
   */
  export type DepartamentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Departamento
     */
    omit?: DepartamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * The data needed to create a Departamento.
     */
    data: XOR<DepartamentoCreateInput, DepartamentoUncheckedCreateInput>
  }

  /**
   * Departamento createMany
   */
  export type DepartamentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Departamentos.
     */
    data: DepartamentoCreateManyInput | DepartamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Departamento createManyAndReturn
   */
  export type DepartamentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Departamento
     */
    omit?: DepartamentoOmit<ExtArgs> | null
    /**
     * The data used to create many Departamentos.
     */
    data: DepartamentoCreateManyInput | DepartamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Departamento update
   */
  export type DepartamentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Departamento
     */
    omit?: DepartamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * The data needed to update a Departamento.
     */
    data: XOR<DepartamentoUpdateInput, DepartamentoUncheckedUpdateInput>
    /**
     * Choose, which Departamento to update.
     */
    where: DepartamentoWhereUniqueInput
  }

  /**
   * Departamento updateMany
   */
  export type DepartamentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Departamentos.
     */
    data: XOR<DepartamentoUpdateManyMutationInput, DepartamentoUncheckedUpdateManyInput>
    /**
     * Filter which Departamentos to update
     */
    where?: DepartamentoWhereInput
    /**
     * Limit how many Departamentos to update.
     */
    limit?: number
  }

  /**
   * Departamento updateManyAndReturn
   */
  export type DepartamentoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Departamento
     */
    omit?: DepartamentoOmit<ExtArgs> | null
    /**
     * The data used to update Departamentos.
     */
    data: XOR<DepartamentoUpdateManyMutationInput, DepartamentoUncheckedUpdateManyInput>
    /**
     * Filter which Departamentos to update
     */
    where?: DepartamentoWhereInput
    /**
     * Limit how many Departamentos to update.
     */
    limit?: number
  }

  /**
   * Departamento upsert
   */
  export type DepartamentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Departamento
     */
    omit?: DepartamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * The filter to search for the Departamento to update in case it exists.
     */
    where: DepartamentoWhereUniqueInput
    /**
     * In case the Departamento found by the `where` argument doesn't exist, create a new Departamento with this data.
     */
    create: XOR<DepartamentoCreateInput, DepartamentoUncheckedCreateInput>
    /**
     * In case the Departamento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DepartamentoUpdateInput, DepartamentoUncheckedUpdateInput>
  }

  /**
   * Departamento delete
   */
  export type DepartamentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Departamento
     */
    omit?: DepartamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter which Departamento to delete.
     */
    where: DepartamentoWhereUniqueInput
  }

  /**
   * Departamento deleteMany
   */
  export type DepartamentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Departamentos to delete
     */
    where?: DepartamentoWhereInput
    /**
     * Limit how many Departamentos to delete.
     */
    limit?: number
  }

  /**
   * Departamento.usuarios
   */
  export type Departamento$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Departamento.tickets
   */
  export type Departamento$ticketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    where?: TicketWhereInput
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    cursor?: TicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * Departamento.derivacionesOrigen
   */
  export type Departamento$derivacionesOrigenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
    where?: DerivacionTicketWhereInput
    orderBy?: DerivacionTicketOrderByWithRelationInput | DerivacionTicketOrderByWithRelationInput[]
    cursor?: DerivacionTicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DerivacionTicketScalarFieldEnum | DerivacionTicketScalarFieldEnum[]
  }

  /**
   * Departamento.derivacionesDestino
   */
  export type Departamento$derivacionesDestinoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
    where?: DerivacionTicketWhereInput
    orderBy?: DerivacionTicketOrderByWithRelationInput | DerivacionTicketOrderByWithRelationInput[]
    cursor?: DerivacionTicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DerivacionTicketScalarFieldEnum | DerivacionTicketScalarFieldEnum[]
  }

  /**
   * Departamento.slaPrioridades
   */
  export type Departamento$slaPrioridadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadInclude<ExtArgs> | null
    where?: SlaPrioridadWhereInput
    orderBy?: SlaPrioridadOrderByWithRelationInput | SlaPrioridadOrderByWithRelationInput[]
    cursor?: SlaPrioridadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SlaPrioridadScalarFieldEnum | SlaPrioridadScalarFieldEnum[]
  }

  /**
   * Departamento without action
   */
  export type DepartamentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Departamento
     */
    omit?: DepartamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
  }


  /**
   * Model Rol
   */

  export type AggregateRol = {
    _count: RolCountAggregateOutputType | null
    _avg: RolAvgAggregateOutputType | null
    _sum: RolSumAggregateOutputType | null
    _min: RolMinAggregateOutputType | null
    _max: RolMaxAggregateOutputType | null
  }

  export type RolAvgAggregateOutputType = {
    id: number | null
  }

  export type RolSumAggregateOutputType = {
    id: number | null
  }

  export type RolMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    createdAt: Date | null
  }

  export type RolMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    createdAt: Date | null
  }

  export type RolCountAggregateOutputType = {
    id: number
    nombre: number
    permisos: number
    createdAt: number
    _all: number
  }


  export type RolAvgAggregateInputType = {
    id?: true
  }

  export type RolSumAggregateInputType = {
    id?: true
  }

  export type RolMinAggregateInputType = {
    id?: true
    nombre?: true
    createdAt?: true
  }

  export type RolMaxAggregateInputType = {
    id?: true
    nombre?: true
    createdAt?: true
  }

  export type RolCountAggregateInputType = {
    id?: true
    nombre?: true
    permisos?: true
    createdAt?: true
    _all?: true
  }

  export type RolAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rol to aggregate.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Rols
    **/
    _count?: true | RolCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolMaxAggregateInputType
  }

  export type GetRolAggregateType<T extends RolAggregateArgs> = {
        [P in keyof T & keyof AggregateRol]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRol[P]>
      : GetScalarType<T[P], AggregateRol[P]>
  }




  export type RolGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolWhereInput
    orderBy?: RolOrderByWithAggregationInput | RolOrderByWithAggregationInput[]
    by: RolScalarFieldEnum[] | RolScalarFieldEnum
    having?: RolScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolCountAggregateInputType | true
    _avg?: RolAvgAggregateInputType
    _sum?: RolSumAggregateInputType
    _min?: RolMinAggregateInputType
    _max?: RolMaxAggregateInputType
  }

  export type RolGroupByOutputType = {
    id: number
    nombre: string
    permisos: JsonValue | null
    createdAt: Date
    _count: RolCountAggregateOutputType | null
    _avg: RolAvgAggregateOutputType | null
    _sum: RolSumAggregateOutputType | null
    _min: RolMinAggregateOutputType | null
    _max: RolMaxAggregateOutputType | null
  }

  type GetRolGroupByPayload<T extends RolGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolGroupByOutputType[P]>
            : GetScalarType<T[P], RolGroupByOutputType[P]>
        }
      >
    >


  export type RolSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    permisos?: boolean
    createdAt?: boolean
    usuarios?: boolean | Rol$usuariosArgs<ExtArgs>
    _count?: boolean | RolCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rol"]>

  export type RolSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    permisos?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["rol"]>

  export type RolSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    permisos?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["rol"]>

  export type RolSelectScalar = {
    id?: boolean
    nombre?: boolean
    permisos?: boolean
    createdAt?: boolean
  }

  export type RolOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "permisos" | "createdAt", ExtArgs["result"]["rol"]>
  export type RolInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Rol$usuariosArgs<ExtArgs>
    _count?: boolean | RolCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RolIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RolIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Rol"
    objects: {
      usuarios: Prisma.$UsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      permisos: Prisma.JsonValue | null
      createdAt: Date
    }, ExtArgs["result"]["rol"]>
    composites: {}
  }

  type RolGetPayload<S extends boolean | null | undefined | RolDefaultArgs> = $Result.GetResult<Prisma.$RolPayload, S>

  type RolCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RolFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolCountAggregateInputType | true
    }

  export interface RolDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Rol'], meta: { name: 'Rol' } }
    /**
     * Find zero or one Rol that matches the filter.
     * @param {RolFindUniqueArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RolFindUniqueArgs>(args: SelectSubset<T, RolFindUniqueArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Rol that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RolFindUniqueOrThrowArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RolFindUniqueOrThrowArgs>(args: SelectSubset<T, RolFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rol that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolFindFirstArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RolFindFirstArgs>(args?: SelectSubset<T, RolFindFirstArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rol that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolFindFirstOrThrowArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RolFindFirstOrThrowArgs>(args?: SelectSubset<T, RolFindFirstOrThrowArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Rols that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rols
     * const rols = await prisma.rol.findMany()
     * 
     * // Get first 10 Rols
     * const rols = await prisma.rol.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolWithIdOnly = await prisma.rol.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RolFindManyArgs>(args?: SelectSubset<T, RolFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Rol.
     * @param {RolCreateArgs} args - Arguments to create a Rol.
     * @example
     * // Create one Rol
     * const Rol = await prisma.rol.create({
     *   data: {
     *     // ... data to create a Rol
     *   }
     * })
     * 
     */
    create<T extends RolCreateArgs>(args: SelectSubset<T, RolCreateArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Rols.
     * @param {RolCreateManyArgs} args - Arguments to create many Rols.
     * @example
     * // Create many Rols
     * const rol = await prisma.rol.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RolCreateManyArgs>(args?: SelectSubset<T, RolCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Rols and returns the data saved in the database.
     * @param {RolCreateManyAndReturnArgs} args - Arguments to create many Rols.
     * @example
     * // Create many Rols
     * const rol = await prisma.rol.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Rols and only return the `id`
     * const rolWithIdOnly = await prisma.rol.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RolCreateManyAndReturnArgs>(args?: SelectSubset<T, RolCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Rol.
     * @param {RolDeleteArgs} args - Arguments to delete one Rol.
     * @example
     * // Delete one Rol
     * const Rol = await prisma.rol.delete({
     *   where: {
     *     // ... filter to delete one Rol
     *   }
     * })
     * 
     */
    delete<T extends RolDeleteArgs>(args: SelectSubset<T, RolDeleteArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Rol.
     * @param {RolUpdateArgs} args - Arguments to update one Rol.
     * @example
     * // Update one Rol
     * const rol = await prisma.rol.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RolUpdateArgs>(args: SelectSubset<T, RolUpdateArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Rols.
     * @param {RolDeleteManyArgs} args - Arguments to filter Rols to delete.
     * @example
     * // Delete a few Rols
     * const { count } = await prisma.rol.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RolDeleteManyArgs>(args?: SelectSubset<T, RolDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rols
     * const rol = await prisma.rol.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RolUpdateManyArgs>(args: SelectSubset<T, RolUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rols and returns the data updated in the database.
     * @param {RolUpdateManyAndReturnArgs} args - Arguments to update many Rols.
     * @example
     * // Update many Rols
     * const rol = await prisma.rol.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Rols and only return the `id`
     * const rolWithIdOnly = await prisma.rol.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RolUpdateManyAndReturnArgs>(args: SelectSubset<T, RolUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Rol.
     * @param {RolUpsertArgs} args - Arguments to update or create a Rol.
     * @example
     * // Update or create a Rol
     * const rol = await prisma.rol.upsert({
     *   create: {
     *     // ... data to create a Rol
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Rol we want to update
     *   }
     * })
     */
    upsert<T extends RolUpsertArgs>(args: SelectSubset<T, RolUpsertArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Rols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolCountArgs} args - Arguments to filter Rols to count.
     * @example
     * // Count the number of Rols
     * const count = await prisma.rol.count({
     *   where: {
     *     // ... the filter for the Rols we want to count
     *   }
     * })
    **/
    count<T extends RolCountArgs>(
      args?: Subset<T, RolCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Rol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolAggregateArgs>(args: Subset<T, RolAggregateArgs>): Prisma.PrismaPromise<GetRolAggregateType<T>>

    /**
     * Group by Rol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RolGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RolGroupByArgs['orderBy'] }
        : { orderBy?: RolGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RolGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Rol model
   */
  readonly fields: RolFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Rol.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RolClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends Rol$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Rol$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Rol model
   */
  interface RolFieldRefs {
    readonly id: FieldRef<"Rol", 'Int'>
    readonly nombre: FieldRef<"Rol", 'String'>
    readonly permisos: FieldRef<"Rol", 'Json'>
    readonly createdAt: FieldRef<"Rol", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Rol findUnique
   */
  export type RolFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol findUniqueOrThrow
   */
  export type RolFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol findFirst
   */
  export type RolFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rols.
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rols.
     */
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * Rol findFirstOrThrow
   */
  export type RolFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rols.
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rols.
     */
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * Rol findMany
   */
  export type RolFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rols to fetch.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Rols.
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * Rol create
   */
  export type RolCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * The data needed to create a Rol.
     */
    data: XOR<RolCreateInput, RolUncheckedCreateInput>
  }

  /**
   * Rol createMany
   */
  export type RolCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Rols.
     */
    data: RolCreateManyInput | RolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Rol createManyAndReturn
   */
  export type RolCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * The data used to create many Rols.
     */
    data: RolCreateManyInput | RolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Rol update
   */
  export type RolUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * The data needed to update a Rol.
     */
    data: XOR<RolUpdateInput, RolUncheckedUpdateInput>
    /**
     * Choose, which Rol to update.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol updateMany
   */
  export type RolUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Rols.
     */
    data: XOR<RolUpdateManyMutationInput, RolUncheckedUpdateManyInput>
    /**
     * Filter which Rols to update
     */
    where?: RolWhereInput
    /**
     * Limit how many Rols to update.
     */
    limit?: number
  }

  /**
   * Rol updateManyAndReturn
   */
  export type RolUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * The data used to update Rols.
     */
    data: XOR<RolUpdateManyMutationInput, RolUncheckedUpdateManyInput>
    /**
     * Filter which Rols to update
     */
    where?: RolWhereInput
    /**
     * Limit how many Rols to update.
     */
    limit?: number
  }

  /**
   * Rol upsert
   */
  export type RolUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * The filter to search for the Rol to update in case it exists.
     */
    where: RolWhereUniqueInput
    /**
     * In case the Rol found by the `where` argument doesn't exist, create a new Rol with this data.
     */
    create: XOR<RolCreateInput, RolUncheckedCreateInput>
    /**
     * In case the Rol was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RolUpdateInput, RolUncheckedUpdateInput>
  }

  /**
   * Rol delete
   */
  export type RolDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter which Rol to delete.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol deleteMany
   */
  export type RolDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rols to delete
     */
    where?: RolWhereInput
    /**
     * Limit how many Rols to delete.
     */
    limit?: number
  }

  /**
   * Rol.usuarios
   */
  export type Rol$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Rol without action
   */
  export type RolDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
  }


  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id: number | null
    rolId: number | null
    departamentoId: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id: number | null
    rolId: number | null
    departamentoId: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: number | null
    primerNombre: string | null
    segundoNombre: string | null
    primerApellido: string | null
    segundoApellido: string | null
    correo: string | null
    hashContrasena: string | null
    rolId: number | null
    departamentoId: number | null
    esInterno: boolean | null
    ultimoAcceso: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: number | null
    primerNombre: string | null
    segundoNombre: string | null
    primerApellido: string | null
    segundoApellido: string | null
    correo: string | null
    hashContrasena: string | null
    rolId: number | null
    departamentoId: number | null
    esInterno: boolean | null
    ultimoAcceso: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    primerNombre: number
    segundoNombre: number
    primerApellido: number
    segundoApellido: number
    correo: number
    hashContrasena: number
    rolId: number
    departamentoId: number
    esInterno: number
    ultimoAcceso: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id?: true
    rolId?: true
    departamentoId?: true
  }

  export type UsuarioSumAggregateInputType = {
    id?: true
    rolId?: true
    departamentoId?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    primerNombre?: true
    segundoNombre?: true
    primerApellido?: true
    segundoApellido?: true
    correo?: true
    hashContrasena?: true
    rolId?: true
    departamentoId?: true
    esInterno?: true
    ultimoAcceso?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    primerNombre?: true
    segundoNombre?: true
    primerApellido?: true
    segundoApellido?: true
    correo?: true
    hashContrasena?: true
    rolId?: true
    departamentoId?: true
    esInterno?: true
    ultimoAcceso?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    primerNombre?: true
    segundoNombre?: true
    primerApellido?: true
    segundoApellido?: true
    correo?: true
    hashContrasena?: true
    rolId?: true
    departamentoId?: true
    esInterno?: true
    ultimoAcceso?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: number
    primerNombre: string
    segundoNombre: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    departamentoId: number
    esInterno: boolean
    ultimoAcceso: Date | null
    createdAt: Date
    updatedAt: Date | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    primerNombre?: boolean
    segundoNombre?: boolean
    primerApellido?: boolean
    segundoApellido?: boolean
    correo?: boolean
    hashContrasena?: boolean
    rolId?: boolean
    departamentoId?: boolean
    esInterno?: boolean
    ultimoAcceso?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rol?: boolean | RolDefaultArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
    ticketsCreados?: boolean | Usuario$ticketsCreadosArgs<ExtArgs>
    ticketsAsignados?: boolean | Usuario$ticketsAsignadosArgs<ExtArgs>
    comentarios?: boolean | Usuario$comentariosArgs<ExtArgs>
    historial?: boolean | Usuario$historialArgs<ExtArgs>
    archivosSubidos?: boolean | Usuario$archivosSubidosArgs<ExtArgs>
    derivaciones?: boolean | Usuario$derivacionesArgs<ExtArgs>
    encuestas?: boolean | Usuario$encuestasArgs<ExtArgs>
    notificaciones?: boolean | Usuario$notificacionesArgs<ExtArgs>
    usuariosEnCopia?: boolean | Usuario$usuariosEnCopiaArgs<ExtArgs>
    configuraciones?: boolean | Usuario$configuracionesArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    primerNombre?: boolean
    segundoNombre?: boolean
    primerApellido?: boolean
    segundoApellido?: boolean
    correo?: boolean
    hashContrasena?: boolean
    rolId?: boolean
    departamentoId?: boolean
    esInterno?: boolean
    ultimoAcceso?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rol?: boolean | RolDefaultArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    primerNombre?: boolean
    segundoNombre?: boolean
    primerApellido?: boolean
    segundoApellido?: boolean
    correo?: boolean
    hashContrasena?: boolean
    rolId?: boolean
    departamentoId?: boolean
    esInterno?: boolean
    ultimoAcceso?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rol?: boolean | RolDefaultArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    primerNombre?: boolean
    segundoNombre?: boolean
    primerApellido?: boolean
    segundoApellido?: boolean
    correo?: boolean
    hashContrasena?: boolean
    rolId?: boolean
    departamentoId?: boolean
    esInterno?: boolean
    ultimoAcceso?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "primerNombre" | "segundoNombre" | "primerApellido" | "segundoApellido" | "correo" | "hashContrasena" | "rolId" | "departamentoId" | "esInterno" | "ultimoAcceso" | "createdAt" | "updatedAt", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | RolDefaultArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
    ticketsCreados?: boolean | Usuario$ticketsCreadosArgs<ExtArgs>
    ticketsAsignados?: boolean | Usuario$ticketsAsignadosArgs<ExtArgs>
    comentarios?: boolean | Usuario$comentariosArgs<ExtArgs>
    historial?: boolean | Usuario$historialArgs<ExtArgs>
    archivosSubidos?: boolean | Usuario$archivosSubidosArgs<ExtArgs>
    derivaciones?: boolean | Usuario$derivacionesArgs<ExtArgs>
    encuestas?: boolean | Usuario$encuestasArgs<ExtArgs>
    notificaciones?: boolean | Usuario$notificacionesArgs<ExtArgs>
    usuariosEnCopia?: boolean | Usuario$usuariosEnCopiaArgs<ExtArgs>
    configuraciones?: boolean | Usuario$configuracionesArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | RolDefaultArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | RolDefaultArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      rol: Prisma.$RolPayload<ExtArgs>
      departamento: Prisma.$DepartamentoPayload<ExtArgs>
      ticketsCreados: Prisma.$TicketPayload<ExtArgs>[]
      ticketsAsignados: Prisma.$TicketPayload<ExtArgs>[]
      comentarios: Prisma.$ComentarioTicketPayload<ExtArgs>[]
      historial: Prisma.$HistorialTicketPayload<ExtArgs>[]
      archivosSubidos: Prisma.$ArchivoAdjuntoPayload<ExtArgs>[]
      derivaciones: Prisma.$DerivacionTicketPayload<ExtArgs>[]
      encuestas: Prisma.$EncuestaPayload<ExtArgs>[]
      notificaciones: Prisma.$NotificacionPayload<ExtArgs>[]
      usuariosEnCopia: Prisma.$UsuarioEnCopiaPayload<ExtArgs>[]
      configuraciones: Prisma.$ConfiguracionSistemaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      primerNombre: string
      segundoNombre: string | null
      primerApellido: string
      segundoApellido: string
      correo: string
      hashContrasena: string
      rolId: number
      departamentoId: number
      esInterno: boolean
      ultimoAcceso: Date | null
      createdAt: Date
      updatedAt: Date | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rol<T extends RolDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RolDefaultArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    departamento<T extends DepartamentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DepartamentoDefaultArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ticketsCreados<T extends Usuario$ticketsCreadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$ticketsCreadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ticketsAsignados<T extends Usuario$ticketsAsignadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$ticketsAsignadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comentarios<T extends Usuario$comentariosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$comentariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historial<T extends Usuario$historialArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$historialArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    archivosSubidos<T extends Usuario$archivosSubidosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$archivosSubidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    derivaciones<T extends Usuario$derivacionesArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$derivacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    encuestas<T extends Usuario$encuestasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$encuestasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EncuestaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notificaciones<T extends Usuario$notificacionesArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$notificacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuariosEnCopia<T extends Usuario$usuariosEnCopiaArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$usuariosEnCopiaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioEnCopiaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    configuraciones<T extends Usuario$configuracionesArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$configuracionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'Int'>
    readonly primerNombre: FieldRef<"Usuario", 'String'>
    readonly segundoNombre: FieldRef<"Usuario", 'String'>
    readonly primerApellido: FieldRef<"Usuario", 'String'>
    readonly segundoApellido: FieldRef<"Usuario", 'String'>
    readonly correo: FieldRef<"Usuario", 'String'>
    readonly hashContrasena: FieldRef<"Usuario", 'String'>
    readonly rolId: FieldRef<"Usuario", 'Int'>
    readonly departamentoId: FieldRef<"Usuario", 'Int'>
    readonly esInterno: FieldRef<"Usuario", 'Boolean'>
    readonly ultimoAcceso: FieldRef<"Usuario", 'DateTime'>
    readonly createdAt: FieldRef<"Usuario", 'DateTime'>
    readonly updatedAt: FieldRef<"Usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.ticketsCreados
   */
  export type Usuario$ticketsCreadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    where?: TicketWhereInput
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    cursor?: TicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * Usuario.ticketsAsignados
   */
  export type Usuario$ticketsAsignadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    where?: TicketWhereInput
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    cursor?: TicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * Usuario.comentarios
   */
  export type Usuario$comentariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketInclude<ExtArgs> | null
    where?: ComentarioTicketWhereInput
    orderBy?: ComentarioTicketOrderByWithRelationInput | ComentarioTicketOrderByWithRelationInput[]
    cursor?: ComentarioTicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComentarioTicketScalarFieldEnum | ComentarioTicketScalarFieldEnum[]
  }

  /**
   * Usuario.historial
   */
  export type Usuario$historialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketInclude<ExtArgs> | null
    where?: HistorialTicketWhereInput
    orderBy?: HistorialTicketOrderByWithRelationInput | HistorialTicketOrderByWithRelationInput[]
    cursor?: HistorialTicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialTicketScalarFieldEnum | HistorialTicketScalarFieldEnum[]
  }

  /**
   * Usuario.archivosSubidos
   */
  export type Usuario$archivosSubidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoInclude<ExtArgs> | null
    where?: ArchivoAdjuntoWhereInput
    orderBy?: ArchivoAdjuntoOrderByWithRelationInput | ArchivoAdjuntoOrderByWithRelationInput[]
    cursor?: ArchivoAdjuntoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArchivoAdjuntoScalarFieldEnum | ArchivoAdjuntoScalarFieldEnum[]
  }

  /**
   * Usuario.derivaciones
   */
  export type Usuario$derivacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
    where?: DerivacionTicketWhereInput
    orderBy?: DerivacionTicketOrderByWithRelationInput | DerivacionTicketOrderByWithRelationInput[]
    cursor?: DerivacionTicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DerivacionTicketScalarFieldEnum | DerivacionTicketScalarFieldEnum[]
  }

  /**
   * Usuario.encuestas
   */
  export type Usuario$encuestasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaInclude<ExtArgs> | null
    where?: EncuestaWhereInput
    orderBy?: EncuestaOrderByWithRelationInput | EncuestaOrderByWithRelationInput[]
    cursor?: EncuestaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EncuestaScalarFieldEnum | EncuestaScalarFieldEnum[]
  }

  /**
   * Usuario.notificaciones
   */
  export type Usuario$notificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    where?: NotificacionWhereInput
    orderBy?: NotificacionOrderByWithRelationInput | NotificacionOrderByWithRelationInput[]
    cursor?: NotificacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacionScalarFieldEnum | NotificacionScalarFieldEnum[]
  }

  /**
   * Usuario.usuariosEnCopia
   */
  export type Usuario$usuariosEnCopiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaInclude<ExtArgs> | null
    where?: UsuarioEnCopiaWhereInput
    orderBy?: UsuarioEnCopiaOrderByWithRelationInput | UsuarioEnCopiaOrderByWithRelationInput[]
    cursor?: UsuarioEnCopiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioEnCopiaScalarFieldEnum | UsuarioEnCopiaScalarFieldEnum[]
  }

  /**
   * Usuario.configuraciones
   */
  export type Usuario$configuracionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracionSistema
     */
    omit?: ConfiguracionSistemaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracionSistemaInclude<ExtArgs> | null
    where?: ConfiguracionSistemaWhereInput
    orderBy?: ConfiguracionSistemaOrderByWithRelationInput | ConfiguracionSistemaOrderByWithRelationInput[]
    cursor?: ConfiguracionSistemaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConfiguracionSistemaScalarFieldEnum | ConfiguracionSistemaScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model EstadoTicket
   */

  export type AggregateEstadoTicket = {
    _count: EstadoTicketCountAggregateOutputType | null
    _avg: EstadoTicketAvgAggregateOutputType | null
    _sum: EstadoTicketSumAggregateOutputType | null
    _min: EstadoTicketMinAggregateOutputType | null
    _max: EstadoTicketMaxAggregateOutputType | null
  }

  export type EstadoTicketAvgAggregateOutputType = {
    id: number | null
    ordenSecuencia: number | null
  }

  export type EstadoTicketSumAggregateOutputType = {
    id: number | null
    ordenSecuencia: number | null
  }

  export type EstadoTicketMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    esEstadoFinal: boolean | null
    ordenSecuencia: number | null
    createdAt: Date | null
  }

  export type EstadoTicketMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    esEstadoFinal: boolean | null
    ordenSecuencia: number | null
    createdAt: Date | null
  }

  export type EstadoTicketCountAggregateOutputType = {
    id: number
    nombre: number
    esEstadoFinal: number
    ordenSecuencia: number
    createdAt: number
    _all: number
  }


  export type EstadoTicketAvgAggregateInputType = {
    id?: true
    ordenSecuencia?: true
  }

  export type EstadoTicketSumAggregateInputType = {
    id?: true
    ordenSecuencia?: true
  }

  export type EstadoTicketMinAggregateInputType = {
    id?: true
    nombre?: true
    esEstadoFinal?: true
    ordenSecuencia?: true
    createdAt?: true
  }

  export type EstadoTicketMaxAggregateInputType = {
    id?: true
    nombre?: true
    esEstadoFinal?: true
    ordenSecuencia?: true
    createdAt?: true
  }

  export type EstadoTicketCountAggregateInputType = {
    id?: true
    nombre?: true
    esEstadoFinal?: true
    ordenSecuencia?: true
    createdAt?: true
    _all?: true
  }

  export type EstadoTicketAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadoTicket to aggregate.
     */
    where?: EstadoTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoTickets to fetch.
     */
    orderBy?: EstadoTicketOrderByWithRelationInput | EstadoTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstadoTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EstadoTickets
    **/
    _count?: true | EstadoTicketCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstadoTicketAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstadoTicketSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstadoTicketMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstadoTicketMaxAggregateInputType
  }

  export type GetEstadoTicketAggregateType<T extends EstadoTicketAggregateArgs> = {
        [P in keyof T & keyof AggregateEstadoTicket]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstadoTicket[P]>
      : GetScalarType<T[P], AggregateEstadoTicket[P]>
  }




  export type EstadoTicketGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstadoTicketWhereInput
    orderBy?: EstadoTicketOrderByWithAggregationInput | EstadoTicketOrderByWithAggregationInput[]
    by: EstadoTicketScalarFieldEnum[] | EstadoTicketScalarFieldEnum
    having?: EstadoTicketScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstadoTicketCountAggregateInputType | true
    _avg?: EstadoTicketAvgAggregateInputType
    _sum?: EstadoTicketSumAggregateInputType
    _min?: EstadoTicketMinAggregateInputType
    _max?: EstadoTicketMaxAggregateInputType
  }

  export type EstadoTicketGroupByOutputType = {
    id: number
    nombre: string
    esEstadoFinal: boolean
    ordenSecuencia: number
    createdAt: Date
    _count: EstadoTicketCountAggregateOutputType | null
    _avg: EstadoTicketAvgAggregateOutputType | null
    _sum: EstadoTicketSumAggregateOutputType | null
    _min: EstadoTicketMinAggregateOutputType | null
    _max: EstadoTicketMaxAggregateOutputType | null
  }

  type GetEstadoTicketGroupByPayload<T extends EstadoTicketGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstadoTicketGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstadoTicketGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstadoTicketGroupByOutputType[P]>
            : GetScalarType<T[P], EstadoTicketGroupByOutputType[P]>
        }
      >
    >


  export type EstadoTicketSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    esEstadoFinal?: boolean
    ordenSecuencia?: boolean
    createdAt?: boolean
    tickets?: boolean | EstadoTicket$ticketsArgs<ExtArgs>
    _count?: boolean | EstadoTicketCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estadoTicket"]>

  export type EstadoTicketSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    esEstadoFinal?: boolean
    ordenSecuencia?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["estadoTicket"]>

  export type EstadoTicketSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    esEstadoFinal?: boolean
    ordenSecuencia?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["estadoTicket"]>

  export type EstadoTicketSelectScalar = {
    id?: boolean
    nombre?: boolean
    esEstadoFinal?: boolean
    ordenSecuencia?: boolean
    createdAt?: boolean
  }

  export type EstadoTicketOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "esEstadoFinal" | "ordenSecuencia" | "createdAt", ExtArgs["result"]["estadoTicket"]>
  export type EstadoTicketInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tickets?: boolean | EstadoTicket$ticketsArgs<ExtArgs>
    _count?: boolean | EstadoTicketCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EstadoTicketIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EstadoTicketIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EstadoTicketPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EstadoTicket"
    objects: {
      tickets: Prisma.$TicketPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      esEstadoFinal: boolean
      ordenSecuencia: number
      createdAt: Date
    }, ExtArgs["result"]["estadoTicket"]>
    composites: {}
  }

  type EstadoTicketGetPayload<S extends boolean | null | undefined | EstadoTicketDefaultArgs> = $Result.GetResult<Prisma.$EstadoTicketPayload, S>

  type EstadoTicketCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstadoTicketFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstadoTicketCountAggregateInputType | true
    }

  export interface EstadoTicketDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EstadoTicket'], meta: { name: 'EstadoTicket' } }
    /**
     * Find zero or one EstadoTicket that matches the filter.
     * @param {EstadoTicketFindUniqueArgs} args - Arguments to find a EstadoTicket
     * @example
     * // Get one EstadoTicket
     * const estadoTicket = await prisma.estadoTicket.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstadoTicketFindUniqueArgs>(args: SelectSubset<T, EstadoTicketFindUniqueArgs<ExtArgs>>): Prisma__EstadoTicketClient<$Result.GetResult<Prisma.$EstadoTicketPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EstadoTicket that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstadoTicketFindUniqueOrThrowArgs} args - Arguments to find a EstadoTicket
     * @example
     * // Get one EstadoTicket
     * const estadoTicket = await prisma.estadoTicket.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstadoTicketFindUniqueOrThrowArgs>(args: SelectSubset<T, EstadoTicketFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstadoTicketClient<$Result.GetResult<Prisma.$EstadoTicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadoTicket that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoTicketFindFirstArgs} args - Arguments to find a EstadoTicket
     * @example
     * // Get one EstadoTicket
     * const estadoTicket = await prisma.estadoTicket.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstadoTicketFindFirstArgs>(args?: SelectSubset<T, EstadoTicketFindFirstArgs<ExtArgs>>): Prisma__EstadoTicketClient<$Result.GetResult<Prisma.$EstadoTicketPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadoTicket that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoTicketFindFirstOrThrowArgs} args - Arguments to find a EstadoTicket
     * @example
     * // Get one EstadoTicket
     * const estadoTicket = await prisma.estadoTicket.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstadoTicketFindFirstOrThrowArgs>(args?: SelectSubset<T, EstadoTicketFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstadoTicketClient<$Result.GetResult<Prisma.$EstadoTicketPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EstadoTickets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoTicketFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EstadoTickets
     * const estadoTickets = await prisma.estadoTicket.findMany()
     * 
     * // Get first 10 EstadoTickets
     * const estadoTickets = await prisma.estadoTicket.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estadoTicketWithIdOnly = await prisma.estadoTicket.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EstadoTicketFindManyArgs>(args?: SelectSubset<T, EstadoTicketFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EstadoTicket.
     * @param {EstadoTicketCreateArgs} args - Arguments to create a EstadoTicket.
     * @example
     * // Create one EstadoTicket
     * const EstadoTicket = await prisma.estadoTicket.create({
     *   data: {
     *     // ... data to create a EstadoTicket
     *   }
     * })
     * 
     */
    create<T extends EstadoTicketCreateArgs>(args: SelectSubset<T, EstadoTicketCreateArgs<ExtArgs>>): Prisma__EstadoTicketClient<$Result.GetResult<Prisma.$EstadoTicketPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EstadoTickets.
     * @param {EstadoTicketCreateManyArgs} args - Arguments to create many EstadoTickets.
     * @example
     * // Create many EstadoTickets
     * const estadoTicket = await prisma.estadoTicket.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstadoTicketCreateManyArgs>(args?: SelectSubset<T, EstadoTicketCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EstadoTickets and returns the data saved in the database.
     * @param {EstadoTicketCreateManyAndReturnArgs} args - Arguments to create many EstadoTickets.
     * @example
     * // Create many EstadoTickets
     * const estadoTicket = await prisma.estadoTicket.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EstadoTickets and only return the `id`
     * const estadoTicketWithIdOnly = await prisma.estadoTicket.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstadoTicketCreateManyAndReturnArgs>(args?: SelectSubset<T, EstadoTicketCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoTicketPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EstadoTicket.
     * @param {EstadoTicketDeleteArgs} args - Arguments to delete one EstadoTicket.
     * @example
     * // Delete one EstadoTicket
     * const EstadoTicket = await prisma.estadoTicket.delete({
     *   where: {
     *     // ... filter to delete one EstadoTicket
     *   }
     * })
     * 
     */
    delete<T extends EstadoTicketDeleteArgs>(args: SelectSubset<T, EstadoTicketDeleteArgs<ExtArgs>>): Prisma__EstadoTicketClient<$Result.GetResult<Prisma.$EstadoTicketPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EstadoTicket.
     * @param {EstadoTicketUpdateArgs} args - Arguments to update one EstadoTicket.
     * @example
     * // Update one EstadoTicket
     * const estadoTicket = await prisma.estadoTicket.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstadoTicketUpdateArgs>(args: SelectSubset<T, EstadoTicketUpdateArgs<ExtArgs>>): Prisma__EstadoTicketClient<$Result.GetResult<Prisma.$EstadoTicketPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EstadoTickets.
     * @param {EstadoTicketDeleteManyArgs} args - Arguments to filter EstadoTickets to delete.
     * @example
     * // Delete a few EstadoTickets
     * const { count } = await prisma.estadoTicket.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstadoTicketDeleteManyArgs>(args?: SelectSubset<T, EstadoTicketDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadoTickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoTicketUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EstadoTickets
     * const estadoTicket = await prisma.estadoTicket.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstadoTicketUpdateManyArgs>(args: SelectSubset<T, EstadoTicketUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadoTickets and returns the data updated in the database.
     * @param {EstadoTicketUpdateManyAndReturnArgs} args - Arguments to update many EstadoTickets.
     * @example
     * // Update many EstadoTickets
     * const estadoTicket = await prisma.estadoTicket.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EstadoTickets and only return the `id`
     * const estadoTicketWithIdOnly = await prisma.estadoTicket.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstadoTicketUpdateManyAndReturnArgs>(args: SelectSubset<T, EstadoTicketUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoTicketPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EstadoTicket.
     * @param {EstadoTicketUpsertArgs} args - Arguments to update or create a EstadoTicket.
     * @example
     * // Update or create a EstadoTicket
     * const estadoTicket = await prisma.estadoTicket.upsert({
     *   create: {
     *     // ... data to create a EstadoTicket
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EstadoTicket we want to update
     *   }
     * })
     */
    upsert<T extends EstadoTicketUpsertArgs>(args: SelectSubset<T, EstadoTicketUpsertArgs<ExtArgs>>): Prisma__EstadoTicketClient<$Result.GetResult<Prisma.$EstadoTicketPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EstadoTickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoTicketCountArgs} args - Arguments to filter EstadoTickets to count.
     * @example
     * // Count the number of EstadoTickets
     * const count = await prisma.estadoTicket.count({
     *   where: {
     *     // ... the filter for the EstadoTickets we want to count
     *   }
     * })
    **/
    count<T extends EstadoTicketCountArgs>(
      args?: Subset<T, EstadoTicketCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstadoTicketCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EstadoTicket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoTicketAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstadoTicketAggregateArgs>(args: Subset<T, EstadoTicketAggregateArgs>): Prisma.PrismaPromise<GetEstadoTicketAggregateType<T>>

    /**
     * Group by EstadoTicket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoTicketGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstadoTicketGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstadoTicketGroupByArgs['orderBy'] }
        : { orderBy?: EstadoTicketGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstadoTicketGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstadoTicketGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EstadoTicket model
   */
  readonly fields: EstadoTicketFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EstadoTicket.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstadoTicketClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tickets<T extends EstadoTicket$ticketsArgs<ExtArgs> = {}>(args?: Subset<T, EstadoTicket$ticketsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EstadoTicket model
   */
  interface EstadoTicketFieldRefs {
    readonly id: FieldRef<"EstadoTicket", 'Int'>
    readonly nombre: FieldRef<"EstadoTicket", 'String'>
    readonly esEstadoFinal: FieldRef<"EstadoTicket", 'Boolean'>
    readonly ordenSecuencia: FieldRef<"EstadoTicket", 'Int'>
    readonly createdAt: FieldRef<"EstadoTicket", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EstadoTicket findUnique
   */
  export type EstadoTicketFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoTicket
     */
    select?: EstadoTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoTicket
     */
    omit?: EstadoTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoTicketInclude<ExtArgs> | null
    /**
     * Filter, which EstadoTicket to fetch.
     */
    where: EstadoTicketWhereUniqueInput
  }

  /**
   * EstadoTicket findUniqueOrThrow
   */
  export type EstadoTicketFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoTicket
     */
    select?: EstadoTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoTicket
     */
    omit?: EstadoTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoTicketInclude<ExtArgs> | null
    /**
     * Filter, which EstadoTicket to fetch.
     */
    where: EstadoTicketWhereUniqueInput
  }

  /**
   * EstadoTicket findFirst
   */
  export type EstadoTicketFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoTicket
     */
    select?: EstadoTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoTicket
     */
    omit?: EstadoTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoTicketInclude<ExtArgs> | null
    /**
     * Filter, which EstadoTicket to fetch.
     */
    where?: EstadoTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoTickets to fetch.
     */
    orderBy?: EstadoTicketOrderByWithRelationInput | EstadoTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadoTickets.
     */
    cursor?: EstadoTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadoTickets.
     */
    distinct?: EstadoTicketScalarFieldEnum | EstadoTicketScalarFieldEnum[]
  }

  /**
   * EstadoTicket findFirstOrThrow
   */
  export type EstadoTicketFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoTicket
     */
    select?: EstadoTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoTicket
     */
    omit?: EstadoTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoTicketInclude<ExtArgs> | null
    /**
     * Filter, which EstadoTicket to fetch.
     */
    where?: EstadoTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoTickets to fetch.
     */
    orderBy?: EstadoTicketOrderByWithRelationInput | EstadoTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadoTickets.
     */
    cursor?: EstadoTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadoTickets.
     */
    distinct?: EstadoTicketScalarFieldEnum | EstadoTicketScalarFieldEnum[]
  }

  /**
   * EstadoTicket findMany
   */
  export type EstadoTicketFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoTicket
     */
    select?: EstadoTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoTicket
     */
    omit?: EstadoTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoTicketInclude<ExtArgs> | null
    /**
     * Filter, which EstadoTickets to fetch.
     */
    where?: EstadoTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoTickets to fetch.
     */
    orderBy?: EstadoTicketOrderByWithRelationInput | EstadoTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EstadoTickets.
     */
    cursor?: EstadoTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoTickets.
     */
    skip?: number
    distinct?: EstadoTicketScalarFieldEnum | EstadoTicketScalarFieldEnum[]
  }

  /**
   * EstadoTicket create
   */
  export type EstadoTicketCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoTicket
     */
    select?: EstadoTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoTicket
     */
    omit?: EstadoTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoTicketInclude<ExtArgs> | null
    /**
     * The data needed to create a EstadoTicket.
     */
    data: XOR<EstadoTicketCreateInput, EstadoTicketUncheckedCreateInput>
  }

  /**
   * EstadoTicket createMany
   */
  export type EstadoTicketCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EstadoTickets.
     */
    data: EstadoTicketCreateManyInput | EstadoTicketCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadoTicket createManyAndReturn
   */
  export type EstadoTicketCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoTicket
     */
    select?: EstadoTicketSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoTicket
     */
    omit?: EstadoTicketOmit<ExtArgs> | null
    /**
     * The data used to create many EstadoTickets.
     */
    data: EstadoTicketCreateManyInput | EstadoTicketCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadoTicket update
   */
  export type EstadoTicketUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoTicket
     */
    select?: EstadoTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoTicket
     */
    omit?: EstadoTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoTicketInclude<ExtArgs> | null
    /**
     * The data needed to update a EstadoTicket.
     */
    data: XOR<EstadoTicketUpdateInput, EstadoTicketUncheckedUpdateInput>
    /**
     * Choose, which EstadoTicket to update.
     */
    where: EstadoTicketWhereUniqueInput
  }

  /**
   * EstadoTicket updateMany
   */
  export type EstadoTicketUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EstadoTickets.
     */
    data: XOR<EstadoTicketUpdateManyMutationInput, EstadoTicketUncheckedUpdateManyInput>
    /**
     * Filter which EstadoTickets to update
     */
    where?: EstadoTicketWhereInput
    /**
     * Limit how many EstadoTickets to update.
     */
    limit?: number
  }

  /**
   * EstadoTicket updateManyAndReturn
   */
  export type EstadoTicketUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoTicket
     */
    select?: EstadoTicketSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoTicket
     */
    omit?: EstadoTicketOmit<ExtArgs> | null
    /**
     * The data used to update EstadoTickets.
     */
    data: XOR<EstadoTicketUpdateManyMutationInput, EstadoTicketUncheckedUpdateManyInput>
    /**
     * Filter which EstadoTickets to update
     */
    where?: EstadoTicketWhereInput
    /**
     * Limit how many EstadoTickets to update.
     */
    limit?: number
  }

  /**
   * EstadoTicket upsert
   */
  export type EstadoTicketUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoTicket
     */
    select?: EstadoTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoTicket
     */
    omit?: EstadoTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoTicketInclude<ExtArgs> | null
    /**
     * The filter to search for the EstadoTicket to update in case it exists.
     */
    where: EstadoTicketWhereUniqueInput
    /**
     * In case the EstadoTicket found by the `where` argument doesn't exist, create a new EstadoTicket with this data.
     */
    create: XOR<EstadoTicketCreateInput, EstadoTicketUncheckedCreateInput>
    /**
     * In case the EstadoTicket was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstadoTicketUpdateInput, EstadoTicketUncheckedUpdateInput>
  }

  /**
   * EstadoTicket delete
   */
  export type EstadoTicketDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoTicket
     */
    select?: EstadoTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoTicket
     */
    omit?: EstadoTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoTicketInclude<ExtArgs> | null
    /**
     * Filter which EstadoTicket to delete.
     */
    where: EstadoTicketWhereUniqueInput
  }

  /**
   * EstadoTicket deleteMany
   */
  export type EstadoTicketDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadoTickets to delete
     */
    where?: EstadoTicketWhereInput
    /**
     * Limit how many EstadoTickets to delete.
     */
    limit?: number
  }

  /**
   * EstadoTicket.tickets
   */
  export type EstadoTicket$ticketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    where?: TicketWhereInput
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    cursor?: TicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * EstadoTicket without action
   */
  export type EstadoTicketDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoTicket
     */
    select?: EstadoTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoTicket
     */
    omit?: EstadoTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoTicketInclude<ExtArgs> | null
  }


  /**
   * Model Prioridad
   */

  export type AggregatePrioridad = {
    _count: PrioridadCountAggregateOutputType | null
    _avg: PrioridadAvgAggregateOutputType | null
    _sum: PrioridadSumAggregateOutputType | null
    _min: PrioridadMinAggregateOutputType | null
    _max: PrioridadMaxAggregateOutputType | null
  }

  export type PrioridadAvgAggregateOutputType = {
    id: number | null
    nivel: number | null
  }

  export type PrioridadSumAggregateOutputType = {
    id: number | null
    nivel: number | null
  }

  export type PrioridadMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    nivel: number | null
    createdAt: Date | null
  }

  export type PrioridadMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    nivel: number | null
    createdAt: Date | null
  }

  export type PrioridadCountAggregateOutputType = {
    id: number
    nombre: number
    nivel: number
    createdAt: number
    _all: number
  }


  export type PrioridadAvgAggregateInputType = {
    id?: true
    nivel?: true
  }

  export type PrioridadSumAggregateInputType = {
    id?: true
    nivel?: true
  }

  export type PrioridadMinAggregateInputType = {
    id?: true
    nombre?: true
    nivel?: true
    createdAt?: true
  }

  export type PrioridadMaxAggregateInputType = {
    id?: true
    nombre?: true
    nivel?: true
    createdAt?: true
  }

  export type PrioridadCountAggregateInputType = {
    id?: true
    nombre?: true
    nivel?: true
    createdAt?: true
    _all?: true
  }

  export type PrioridadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Prioridad to aggregate.
     */
    where?: PrioridadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prioridads to fetch.
     */
    orderBy?: PrioridadOrderByWithRelationInput | PrioridadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PrioridadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prioridads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prioridads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Prioridads
    **/
    _count?: true | PrioridadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PrioridadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PrioridadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PrioridadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PrioridadMaxAggregateInputType
  }

  export type GetPrioridadAggregateType<T extends PrioridadAggregateArgs> = {
        [P in keyof T & keyof AggregatePrioridad]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrioridad[P]>
      : GetScalarType<T[P], AggregatePrioridad[P]>
  }




  export type PrioridadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PrioridadWhereInput
    orderBy?: PrioridadOrderByWithAggregationInput | PrioridadOrderByWithAggregationInput[]
    by: PrioridadScalarFieldEnum[] | PrioridadScalarFieldEnum
    having?: PrioridadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PrioridadCountAggregateInputType | true
    _avg?: PrioridadAvgAggregateInputType
    _sum?: PrioridadSumAggregateInputType
    _min?: PrioridadMinAggregateInputType
    _max?: PrioridadMaxAggregateInputType
  }

  export type PrioridadGroupByOutputType = {
    id: number
    nombre: string
    nivel: number
    createdAt: Date
    _count: PrioridadCountAggregateOutputType | null
    _avg: PrioridadAvgAggregateOutputType | null
    _sum: PrioridadSumAggregateOutputType | null
    _min: PrioridadMinAggregateOutputType | null
    _max: PrioridadMaxAggregateOutputType | null
  }

  type GetPrioridadGroupByPayload<T extends PrioridadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PrioridadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PrioridadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PrioridadGroupByOutputType[P]>
            : GetScalarType<T[P], PrioridadGroupByOutputType[P]>
        }
      >
    >


  export type PrioridadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    nivel?: boolean
    createdAt?: boolean
    tickets?: boolean | Prioridad$ticketsArgs<ExtArgs>
    slas?: boolean | Prioridad$slasArgs<ExtArgs>
    _count?: boolean | PrioridadCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["prioridad"]>

  export type PrioridadSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    nivel?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["prioridad"]>

  export type PrioridadSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    nivel?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["prioridad"]>

  export type PrioridadSelectScalar = {
    id?: boolean
    nombre?: boolean
    nivel?: boolean
    createdAt?: boolean
  }

  export type PrioridadOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "nivel" | "createdAt", ExtArgs["result"]["prioridad"]>
  export type PrioridadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tickets?: boolean | Prioridad$ticketsArgs<ExtArgs>
    slas?: boolean | Prioridad$slasArgs<ExtArgs>
    _count?: boolean | PrioridadCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PrioridadIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PrioridadIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PrioridadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Prioridad"
    objects: {
      tickets: Prisma.$TicketPayload<ExtArgs>[]
      slas: Prisma.$SlaPrioridadPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      nivel: number
      createdAt: Date
    }, ExtArgs["result"]["prioridad"]>
    composites: {}
  }

  type PrioridadGetPayload<S extends boolean | null | undefined | PrioridadDefaultArgs> = $Result.GetResult<Prisma.$PrioridadPayload, S>

  type PrioridadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PrioridadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PrioridadCountAggregateInputType | true
    }

  export interface PrioridadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Prioridad'], meta: { name: 'Prioridad' } }
    /**
     * Find zero or one Prioridad that matches the filter.
     * @param {PrioridadFindUniqueArgs} args - Arguments to find a Prioridad
     * @example
     * // Get one Prioridad
     * const prioridad = await prisma.prioridad.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PrioridadFindUniqueArgs>(args: SelectSubset<T, PrioridadFindUniqueArgs<ExtArgs>>): Prisma__PrioridadClient<$Result.GetResult<Prisma.$PrioridadPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Prioridad that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PrioridadFindUniqueOrThrowArgs} args - Arguments to find a Prioridad
     * @example
     * // Get one Prioridad
     * const prioridad = await prisma.prioridad.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PrioridadFindUniqueOrThrowArgs>(args: SelectSubset<T, PrioridadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PrioridadClient<$Result.GetResult<Prisma.$PrioridadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Prioridad that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrioridadFindFirstArgs} args - Arguments to find a Prioridad
     * @example
     * // Get one Prioridad
     * const prioridad = await prisma.prioridad.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PrioridadFindFirstArgs>(args?: SelectSubset<T, PrioridadFindFirstArgs<ExtArgs>>): Prisma__PrioridadClient<$Result.GetResult<Prisma.$PrioridadPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Prioridad that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrioridadFindFirstOrThrowArgs} args - Arguments to find a Prioridad
     * @example
     * // Get one Prioridad
     * const prioridad = await prisma.prioridad.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PrioridadFindFirstOrThrowArgs>(args?: SelectSubset<T, PrioridadFindFirstOrThrowArgs<ExtArgs>>): Prisma__PrioridadClient<$Result.GetResult<Prisma.$PrioridadPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Prioridads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrioridadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Prioridads
     * const prioridads = await prisma.prioridad.findMany()
     * 
     * // Get first 10 Prioridads
     * const prioridads = await prisma.prioridad.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const prioridadWithIdOnly = await prisma.prioridad.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PrioridadFindManyArgs>(args?: SelectSubset<T, PrioridadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrioridadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Prioridad.
     * @param {PrioridadCreateArgs} args - Arguments to create a Prioridad.
     * @example
     * // Create one Prioridad
     * const Prioridad = await prisma.prioridad.create({
     *   data: {
     *     // ... data to create a Prioridad
     *   }
     * })
     * 
     */
    create<T extends PrioridadCreateArgs>(args: SelectSubset<T, PrioridadCreateArgs<ExtArgs>>): Prisma__PrioridadClient<$Result.GetResult<Prisma.$PrioridadPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Prioridads.
     * @param {PrioridadCreateManyArgs} args - Arguments to create many Prioridads.
     * @example
     * // Create many Prioridads
     * const prioridad = await prisma.prioridad.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PrioridadCreateManyArgs>(args?: SelectSubset<T, PrioridadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Prioridads and returns the data saved in the database.
     * @param {PrioridadCreateManyAndReturnArgs} args - Arguments to create many Prioridads.
     * @example
     * // Create many Prioridads
     * const prioridad = await prisma.prioridad.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Prioridads and only return the `id`
     * const prioridadWithIdOnly = await prisma.prioridad.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PrioridadCreateManyAndReturnArgs>(args?: SelectSubset<T, PrioridadCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrioridadPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Prioridad.
     * @param {PrioridadDeleteArgs} args - Arguments to delete one Prioridad.
     * @example
     * // Delete one Prioridad
     * const Prioridad = await prisma.prioridad.delete({
     *   where: {
     *     // ... filter to delete one Prioridad
     *   }
     * })
     * 
     */
    delete<T extends PrioridadDeleteArgs>(args: SelectSubset<T, PrioridadDeleteArgs<ExtArgs>>): Prisma__PrioridadClient<$Result.GetResult<Prisma.$PrioridadPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Prioridad.
     * @param {PrioridadUpdateArgs} args - Arguments to update one Prioridad.
     * @example
     * // Update one Prioridad
     * const prioridad = await prisma.prioridad.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PrioridadUpdateArgs>(args: SelectSubset<T, PrioridadUpdateArgs<ExtArgs>>): Prisma__PrioridadClient<$Result.GetResult<Prisma.$PrioridadPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Prioridads.
     * @param {PrioridadDeleteManyArgs} args - Arguments to filter Prioridads to delete.
     * @example
     * // Delete a few Prioridads
     * const { count } = await prisma.prioridad.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PrioridadDeleteManyArgs>(args?: SelectSubset<T, PrioridadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prioridads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrioridadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Prioridads
     * const prioridad = await prisma.prioridad.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PrioridadUpdateManyArgs>(args: SelectSubset<T, PrioridadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prioridads and returns the data updated in the database.
     * @param {PrioridadUpdateManyAndReturnArgs} args - Arguments to update many Prioridads.
     * @example
     * // Update many Prioridads
     * const prioridad = await prisma.prioridad.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Prioridads and only return the `id`
     * const prioridadWithIdOnly = await prisma.prioridad.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PrioridadUpdateManyAndReturnArgs>(args: SelectSubset<T, PrioridadUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrioridadPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Prioridad.
     * @param {PrioridadUpsertArgs} args - Arguments to update or create a Prioridad.
     * @example
     * // Update or create a Prioridad
     * const prioridad = await prisma.prioridad.upsert({
     *   create: {
     *     // ... data to create a Prioridad
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Prioridad we want to update
     *   }
     * })
     */
    upsert<T extends PrioridadUpsertArgs>(args: SelectSubset<T, PrioridadUpsertArgs<ExtArgs>>): Prisma__PrioridadClient<$Result.GetResult<Prisma.$PrioridadPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Prioridads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrioridadCountArgs} args - Arguments to filter Prioridads to count.
     * @example
     * // Count the number of Prioridads
     * const count = await prisma.prioridad.count({
     *   where: {
     *     // ... the filter for the Prioridads we want to count
     *   }
     * })
    **/
    count<T extends PrioridadCountArgs>(
      args?: Subset<T, PrioridadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PrioridadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Prioridad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrioridadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PrioridadAggregateArgs>(args: Subset<T, PrioridadAggregateArgs>): Prisma.PrismaPromise<GetPrioridadAggregateType<T>>

    /**
     * Group by Prioridad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrioridadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PrioridadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PrioridadGroupByArgs['orderBy'] }
        : { orderBy?: PrioridadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PrioridadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPrioridadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Prioridad model
   */
  readonly fields: PrioridadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Prioridad.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PrioridadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tickets<T extends Prioridad$ticketsArgs<ExtArgs> = {}>(args?: Subset<T, Prioridad$ticketsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    slas<T extends Prioridad$slasArgs<ExtArgs> = {}>(args?: Subset<T, Prioridad$slasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SlaPrioridadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Prioridad model
   */
  interface PrioridadFieldRefs {
    readonly id: FieldRef<"Prioridad", 'Int'>
    readonly nombre: FieldRef<"Prioridad", 'String'>
    readonly nivel: FieldRef<"Prioridad", 'Int'>
    readonly createdAt: FieldRef<"Prioridad", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Prioridad findUnique
   */
  export type PrioridadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prioridad
     */
    select?: PrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prioridad
     */
    omit?: PrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrioridadInclude<ExtArgs> | null
    /**
     * Filter, which Prioridad to fetch.
     */
    where: PrioridadWhereUniqueInput
  }

  /**
   * Prioridad findUniqueOrThrow
   */
  export type PrioridadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prioridad
     */
    select?: PrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prioridad
     */
    omit?: PrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrioridadInclude<ExtArgs> | null
    /**
     * Filter, which Prioridad to fetch.
     */
    where: PrioridadWhereUniqueInput
  }

  /**
   * Prioridad findFirst
   */
  export type PrioridadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prioridad
     */
    select?: PrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prioridad
     */
    omit?: PrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrioridadInclude<ExtArgs> | null
    /**
     * Filter, which Prioridad to fetch.
     */
    where?: PrioridadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prioridads to fetch.
     */
    orderBy?: PrioridadOrderByWithRelationInput | PrioridadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prioridads.
     */
    cursor?: PrioridadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prioridads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prioridads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prioridads.
     */
    distinct?: PrioridadScalarFieldEnum | PrioridadScalarFieldEnum[]
  }

  /**
   * Prioridad findFirstOrThrow
   */
  export type PrioridadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prioridad
     */
    select?: PrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prioridad
     */
    omit?: PrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrioridadInclude<ExtArgs> | null
    /**
     * Filter, which Prioridad to fetch.
     */
    where?: PrioridadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prioridads to fetch.
     */
    orderBy?: PrioridadOrderByWithRelationInput | PrioridadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prioridads.
     */
    cursor?: PrioridadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prioridads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prioridads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prioridads.
     */
    distinct?: PrioridadScalarFieldEnum | PrioridadScalarFieldEnum[]
  }

  /**
   * Prioridad findMany
   */
  export type PrioridadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prioridad
     */
    select?: PrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prioridad
     */
    omit?: PrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrioridadInclude<ExtArgs> | null
    /**
     * Filter, which Prioridads to fetch.
     */
    where?: PrioridadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prioridads to fetch.
     */
    orderBy?: PrioridadOrderByWithRelationInput | PrioridadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Prioridads.
     */
    cursor?: PrioridadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prioridads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prioridads.
     */
    skip?: number
    distinct?: PrioridadScalarFieldEnum | PrioridadScalarFieldEnum[]
  }

  /**
   * Prioridad create
   */
  export type PrioridadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prioridad
     */
    select?: PrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prioridad
     */
    omit?: PrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrioridadInclude<ExtArgs> | null
    /**
     * The data needed to create a Prioridad.
     */
    data: XOR<PrioridadCreateInput, PrioridadUncheckedCreateInput>
  }

  /**
   * Prioridad createMany
   */
  export type PrioridadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Prioridads.
     */
    data: PrioridadCreateManyInput | PrioridadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Prioridad createManyAndReturn
   */
  export type PrioridadCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prioridad
     */
    select?: PrioridadSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Prioridad
     */
    omit?: PrioridadOmit<ExtArgs> | null
    /**
     * The data used to create many Prioridads.
     */
    data: PrioridadCreateManyInput | PrioridadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Prioridad update
   */
  export type PrioridadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prioridad
     */
    select?: PrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prioridad
     */
    omit?: PrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrioridadInclude<ExtArgs> | null
    /**
     * The data needed to update a Prioridad.
     */
    data: XOR<PrioridadUpdateInput, PrioridadUncheckedUpdateInput>
    /**
     * Choose, which Prioridad to update.
     */
    where: PrioridadWhereUniqueInput
  }

  /**
   * Prioridad updateMany
   */
  export type PrioridadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Prioridads.
     */
    data: XOR<PrioridadUpdateManyMutationInput, PrioridadUncheckedUpdateManyInput>
    /**
     * Filter which Prioridads to update
     */
    where?: PrioridadWhereInput
    /**
     * Limit how many Prioridads to update.
     */
    limit?: number
  }

  /**
   * Prioridad updateManyAndReturn
   */
  export type PrioridadUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prioridad
     */
    select?: PrioridadSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Prioridad
     */
    omit?: PrioridadOmit<ExtArgs> | null
    /**
     * The data used to update Prioridads.
     */
    data: XOR<PrioridadUpdateManyMutationInput, PrioridadUncheckedUpdateManyInput>
    /**
     * Filter which Prioridads to update
     */
    where?: PrioridadWhereInput
    /**
     * Limit how many Prioridads to update.
     */
    limit?: number
  }

  /**
   * Prioridad upsert
   */
  export type PrioridadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prioridad
     */
    select?: PrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prioridad
     */
    omit?: PrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrioridadInclude<ExtArgs> | null
    /**
     * The filter to search for the Prioridad to update in case it exists.
     */
    where: PrioridadWhereUniqueInput
    /**
     * In case the Prioridad found by the `where` argument doesn't exist, create a new Prioridad with this data.
     */
    create: XOR<PrioridadCreateInput, PrioridadUncheckedCreateInput>
    /**
     * In case the Prioridad was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PrioridadUpdateInput, PrioridadUncheckedUpdateInput>
  }

  /**
   * Prioridad delete
   */
  export type PrioridadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prioridad
     */
    select?: PrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prioridad
     */
    omit?: PrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrioridadInclude<ExtArgs> | null
    /**
     * Filter which Prioridad to delete.
     */
    where: PrioridadWhereUniqueInput
  }

  /**
   * Prioridad deleteMany
   */
  export type PrioridadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Prioridads to delete
     */
    where?: PrioridadWhereInput
    /**
     * Limit how many Prioridads to delete.
     */
    limit?: number
  }

  /**
   * Prioridad.tickets
   */
  export type Prioridad$ticketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    where?: TicketWhereInput
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    cursor?: TicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * Prioridad.slas
   */
  export type Prioridad$slasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadInclude<ExtArgs> | null
    where?: SlaPrioridadWhereInput
    orderBy?: SlaPrioridadOrderByWithRelationInput | SlaPrioridadOrderByWithRelationInput[]
    cursor?: SlaPrioridadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SlaPrioridadScalarFieldEnum | SlaPrioridadScalarFieldEnum[]
  }

  /**
   * Prioridad without action
   */
  export type PrioridadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prioridad
     */
    select?: PrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prioridad
     */
    omit?: PrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrioridadInclude<ExtArgs> | null
  }


  /**
   * Model SlaPrioridad
   */

  export type AggregateSlaPrioridad = {
    _count: SlaPrioridadCountAggregateOutputType | null
    _avg: SlaPrioridadAvgAggregateOutputType | null
    _sum: SlaPrioridadSumAggregateOutputType | null
    _min: SlaPrioridadMinAggregateOutputType | null
    _max: SlaPrioridadMaxAggregateOutputType | null
  }

  export type SlaPrioridadAvgAggregateOutputType = {
    prioridadId: number | null
    departamentoId: number | null
    tiempoRespuestaHoras: number | null
    tiempoResolucionHoras: number | null
  }

  export type SlaPrioridadSumAggregateOutputType = {
    prioridadId: number | null
    departamentoId: number | null
    tiempoRespuestaHoras: number | null
    tiempoResolucionHoras: number | null
  }

  export type SlaPrioridadMinAggregateOutputType = {
    prioridadId: number | null
    departamentoId: number | null
    tiempoRespuestaHoras: number | null
    tiempoResolucionHoras: number | null
    createdAt: Date | null
  }

  export type SlaPrioridadMaxAggregateOutputType = {
    prioridadId: number | null
    departamentoId: number | null
    tiempoRespuestaHoras: number | null
    tiempoResolucionHoras: number | null
    createdAt: Date | null
  }

  export type SlaPrioridadCountAggregateOutputType = {
    prioridadId: number
    departamentoId: number
    tiempoRespuestaHoras: number
    tiempoResolucionHoras: number
    createdAt: number
    _all: number
  }


  export type SlaPrioridadAvgAggregateInputType = {
    prioridadId?: true
    departamentoId?: true
    tiempoRespuestaHoras?: true
    tiempoResolucionHoras?: true
  }

  export type SlaPrioridadSumAggregateInputType = {
    prioridadId?: true
    departamentoId?: true
    tiempoRespuestaHoras?: true
    tiempoResolucionHoras?: true
  }

  export type SlaPrioridadMinAggregateInputType = {
    prioridadId?: true
    departamentoId?: true
    tiempoRespuestaHoras?: true
    tiempoResolucionHoras?: true
    createdAt?: true
  }

  export type SlaPrioridadMaxAggregateInputType = {
    prioridadId?: true
    departamentoId?: true
    tiempoRespuestaHoras?: true
    tiempoResolucionHoras?: true
    createdAt?: true
  }

  export type SlaPrioridadCountAggregateInputType = {
    prioridadId?: true
    departamentoId?: true
    tiempoRespuestaHoras?: true
    tiempoResolucionHoras?: true
    createdAt?: true
    _all?: true
  }

  export type SlaPrioridadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SlaPrioridad to aggregate.
     */
    where?: SlaPrioridadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SlaPrioridads to fetch.
     */
    orderBy?: SlaPrioridadOrderByWithRelationInput | SlaPrioridadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SlaPrioridadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SlaPrioridads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SlaPrioridads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SlaPrioridads
    **/
    _count?: true | SlaPrioridadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SlaPrioridadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SlaPrioridadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SlaPrioridadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SlaPrioridadMaxAggregateInputType
  }

  export type GetSlaPrioridadAggregateType<T extends SlaPrioridadAggregateArgs> = {
        [P in keyof T & keyof AggregateSlaPrioridad]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSlaPrioridad[P]>
      : GetScalarType<T[P], AggregateSlaPrioridad[P]>
  }




  export type SlaPrioridadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SlaPrioridadWhereInput
    orderBy?: SlaPrioridadOrderByWithAggregationInput | SlaPrioridadOrderByWithAggregationInput[]
    by: SlaPrioridadScalarFieldEnum[] | SlaPrioridadScalarFieldEnum
    having?: SlaPrioridadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SlaPrioridadCountAggregateInputType | true
    _avg?: SlaPrioridadAvgAggregateInputType
    _sum?: SlaPrioridadSumAggregateInputType
    _min?: SlaPrioridadMinAggregateInputType
    _max?: SlaPrioridadMaxAggregateInputType
  }

  export type SlaPrioridadGroupByOutputType = {
    prioridadId: number
    departamentoId: number
    tiempoRespuestaHoras: number
    tiempoResolucionHoras: number
    createdAt: Date
    _count: SlaPrioridadCountAggregateOutputType | null
    _avg: SlaPrioridadAvgAggregateOutputType | null
    _sum: SlaPrioridadSumAggregateOutputType | null
    _min: SlaPrioridadMinAggregateOutputType | null
    _max: SlaPrioridadMaxAggregateOutputType | null
  }

  type GetSlaPrioridadGroupByPayload<T extends SlaPrioridadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SlaPrioridadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SlaPrioridadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SlaPrioridadGroupByOutputType[P]>
            : GetScalarType<T[P], SlaPrioridadGroupByOutputType[P]>
        }
      >
    >


  export type SlaPrioridadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    prioridadId?: boolean
    departamentoId?: boolean
    tiempoRespuestaHoras?: boolean
    tiempoResolucionHoras?: boolean
    createdAt?: boolean
    prioridad?: boolean | PrioridadDefaultArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["slaPrioridad"]>

  export type SlaPrioridadSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    prioridadId?: boolean
    departamentoId?: boolean
    tiempoRespuestaHoras?: boolean
    tiempoResolucionHoras?: boolean
    createdAt?: boolean
    prioridad?: boolean | PrioridadDefaultArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["slaPrioridad"]>

  export type SlaPrioridadSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    prioridadId?: boolean
    departamentoId?: boolean
    tiempoRespuestaHoras?: boolean
    tiempoResolucionHoras?: boolean
    createdAt?: boolean
    prioridad?: boolean | PrioridadDefaultArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["slaPrioridad"]>

  export type SlaPrioridadSelectScalar = {
    prioridadId?: boolean
    departamentoId?: boolean
    tiempoRespuestaHoras?: boolean
    tiempoResolucionHoras?: boolean
    createdAt?: boolean
  }

  export type SlaPrioridadOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"prioridadId" | "departamentoId" | "tiempoRespuestaHoras" | "tiempoResolucionHoras" | "createdAt", ExtArgs["result"]["slaPrioridad"]>
  export type SlaPrioridadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    prioridad?: boolean | PrioridadDefaultArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
  }
  export type SlaPrioridadIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    prioridad?: boolean | PrioridadDefaultArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
  }
  export type SlaPrioridadIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    prioridad?: boolean | PrioridadDefaultArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
  }

  export type $SlaPrioridadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SlaPrioridad"
    objects: {
      prioridad: Prisma.$PrioridadPayload<ExtArgs>
      departamento: Prisma.$DepartamentoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      prioridadId: number
      departamentoId: number
      tiempoRespuestaHoras: number
      tiempoResolucionHoras: number
      createdAt: Date
    }, ExtArgs["result"]["slaPrioridad"]>
    composites: {}
  }

  type SlaPrioridadGetPayload<S extends boolean | null | undefined | SlaPrioridadDefaultArgs> = $Result.GetResult<Prisma.$SlaPrioridadPayload, S>

  type SlaPrioridadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SlaPrioridadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SlaPrioridadCountAggregateInputType | true
    }

  export interface SlaPrioridadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SlaPrioridad'], meta: { name: 'SlaPrioridad' } }
    /**
     * Find zero or one SlaPrioridad that matches the filter.
     * @param {SlaPrioridadFindUniqueArgs} args - Arguments to find a SlaPrioridad
     * @example
     * // Get one SlaPrioridad
     * const slaPrioridad = await prisma.slaPrioridad.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SlaPrioridadFindUniqueArgs>(args: SelectSubset<T, SlaPrioridadFindUniqueArgs<ExtArgs>>): Prisma__SlaPrioridadClient<$Result.GetResult<Prisma.$SlaPrioridadPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SlaPrioridad that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SlaPrioridadFindUniqueOrThrowArgs} args - Arguments to find a SlaPrioridad
     * @example
     * // Get one SlaPrioridad
     * const slaPrioridad = await prisma.slaPrioridad.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SlaPrioridadFindUniqueOrThrowArgs>(args: SelectSubset<T, SlaPrioridadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SlaPrioridadClient<$Result.GetResult<Prisma.$SlaPrioridadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SlaPrioridad that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlaPrioridadFindFirstArgs} args - Arguments to find a SlaPrioridad
     * @example
     * // Get one SlaPrioridad
     * const slaPrioridad = await prisma.slaPrioridad.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SlaPrioridadFindFirstArgs>(args?: SelectSubset<T, SlaPrioridadFindFirstArgs<ExtArgs>>): Prisma__SlaPrioridadClient<$Result.GetResult<Prisma.$SlaPrioridadPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SlaPrioridad that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlaPrioridadFindFirstOrThrowArgs} args - Arguments to find a SlaPrioridad
     * @example
     * // Get one SlaPrioridad
     * const slaPrioridad = await prisma.slaPrioridad.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SlaPrioridadFindFirstOrThrowArgs>(args?: SelectSubset<T, SlaPrioridadFindFirstOrThrowArgs<ExtArgs>>): Prisma__SlaPrioridadClient<$Result.GetResult<Prisma.$SlaPrioridadPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SlaPrioridads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlaPrioridadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SlaPrioridads
     * const slaPrioridads = await prisma.slaPrioridad.findMany()
     * 
     * // Get first 10 SlaPrioridads
     * const slaPrioridads = await prisma.slaPrioridad.findMany({ take: 10 })
     * 
     * // Only select the `prioridadId`
     * const slaPrioridadWithPrioridadIdOnly = await prisma.slaPrioridad.findMany({ select: { prioridadId: true } })
     * 
     */
    findMany<T extends SlaPrioridadFindManyArgs>(args?: SelectSubset<T, SlaPrioridadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SlaPrioridadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SlaPrioridad.
     * @param {SlaPrioridadCreateArgs} args - Arguments to create a SlaPrioridad.
     * @example
     * // Create one SlaPrioridad
     * const SlaPrioridad = await prisma.slaPrioridad.create({
     *   data: {
     *     // ... data to create a SlaPrioridad
     *   }
     * })
     * 
     */
    create<T extends SlaPrioridadCreateArgs>(args: SelectSubset<T, SlaPrioridadCreateArgs<ExtArgs>>): Prisma__SlaPrioridadClient<$Result.GetResult<Prisma.$SlaPrioridadPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SlaPrioridads.
     * @param {SlaPrioridadCreateManyArgs} args - Arguments to create many SlaPrioridads.
     * @example
     * // Create many SlaPrioridads
     * const slaPrioridad = await prisma.slaPrioridad.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SlaPrioridadCreateManyArgs>(args?: SelectSubset<T, SlaPrioridadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SlaPrioridads and returns the data saved in the database.
     * @param {SlaPrioridadCreateManyAndReturnArgs} args - Arguments to create many SlaPrioridads.
     * @example
     * // Create many SlaPrioridads
     * const slaPrioridad = await prisma.slaPrioridad.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SlaPrioridads and only return the `prioridadId`
     * const slaPrioridadWithPrioridadIdOnly = await prisma.slaPrioridad.createManyAndReturn({
     *   select: { prioridadId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SlaPrioridadCreateManyAndReturnArgs>(args?: SelectSubset<T, SlaPrioridadCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SlaPrioridadPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SlaPrioridad.
     * @param {SlaPrioridadDeleteArgs} args - Arguments to delete one SlaPrioridad.
     * @example
     * // Delete one SlaPrioridad
     * const SlaPrioridad = await prisma.slaPrioridad.delete({
     *   where: {
     *     // ... filter to delete one SlaPrioridad
     *   }
     * })
     * 
     */
    delete<T extends SlaPrioridadDeleteArgs>(args: SelectSubset<T, SlaPrioridadDeleteArgs<ExtArgs>>): Prisma__SlaPrioridadClient<$Result.GetResult<Prisma.$SlaPrioridadPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SlaPrioridad.
     * @param {SlaPrioridadUpdateArgs} args - Arguments to update one SlaPrioridad.
     * @example
     * // Update one SlaPrioridad
     * const slaPrioridad = await prisma.slaPrioridad.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SlaPrioridadUpdateArgs>(args: SelectSubset<T, SlaPrioridadUpdateArgs<ExtArgs>>): Prisma__SlaPrioridadClient<$Result.GetResult<Prisma.$SlaPrioridadPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SlaPrioridads.
     * @param {SlaPrioridadDeleteManyArgs} args - Arguments to filter SlaPrioridads to delete.
     * @example
     * // Delete a few SlaPrioridads
     * const { count } = await prisma.slaPrioridad.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SlaPrioridadDeleteManyArgs>(args?: SelectSubset<T, SlaPrioridadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SlaPrioridads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlaPrioridadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SlaPrioridads
     * const slaPrioridad = await prisma.slaPrioridad.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SlaPrioridadUpdateManyArgs>(args: SelectSubset<T, SlaPrioridadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SlaPrioridads and returns the data updated in the database.
     * @param {SlaPrioridadUpdateManyAndReturnArgs} args - Arguments to update many SlaPrioridads.
     * @example
     * // Update many SlaPrioridads
     * const slaPrioridad = await prisma.slaPrioridad.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SlaPrioridads and only return the `prioridadId`
     * const slaPrioridadWithPrioridadIdOnly = await prisma.slaPrioridad.updateManyAndReturn({
     *   select: { prioridadId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SlaPrioridadUpdateManyAndReturnArgs>(args: SelectSubset<T, SlaPrioridadUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SlaPrioridadPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SlaPrioridad.
     * @param {SlaPrioridadUpsertArgs} args - Arguments to update or create a SlaPrioridad.
     * @example
     * // Update or create a SlaPrioridad
     * const slaPrioridad = await prisma.slaPrioridad.upsert({
     *   create: {
     *     // ... data to create a SlaPrioridad
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SlaPrioridad we want to update
     *   }
     * })
     */
    upsert<T extends SlaPrioridadUpsertArgs>(args: SelectSubset<T, SlaPrioridadUpsertArgs<ExtArgs>>): Prisma__SlaPrioridadClient<$Result.GetResult<Prisma.$SlaPrioridadPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SlaPrioridads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlaPrioridadCountArgs} args - Arguments to filter SlaPrioridads to count.
     * @example
     * // Count the number of SlaPrioridads
     * const count = await prisma.slaPrioridad.count({
     *   where: {
     *     // ... the filter for the SlaPrioridads we want to count
     *   }
     * })
    **/
    count<T extends SlaPrioridadCountArgs>(
      args?: Subset<T, SlaPrioridadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SlaPrioridadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SlaPrioridad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlaPrioridadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SlaPrioridadAggregateArgs>(args: Subset<T, SlaPrioridadAggregateArgs>): Prisma.PrismaPromise<GetSlaPrioridadAggregateType<T>>

    /**
     * Group by SlaPrioridad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlaPrioridadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SlaPrioridadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SlaPrioridadGroupByArgs['orderBy'] }
        : { orderBy?: SlaPrioridadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SlaPrioridadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSlaPrioridadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SlaPrioridad model
   */
  readonly fields: SlaPrioridadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SlaPrioridad.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SlaPrioridadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    prioridad<T extends PrioridadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PrioridadDefaultArgs<ExtArgs>>): Prisma__PrioridadClient<$Result.GetResult<Prisma.$PrioridadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    departamento<T extends DepartamentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DepartamentoDefaultArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SlaPrioridad model
   */
  interface SlaPrioridadFieldRefs {
    readonly prioridadId: FieldRef<"SlaPrioridad", 'Int'>
    readonly departamentoId: FieldRef<"SlaPrioridad", 'Int'>
    readonly tiempoRespuestaHoras: FieldRef<"SlaPrioridad", 'Int'>
    readonly tiempoResolucionHoras: FieldRef<"SlaPrioridad", 'Int'>
    readonly createdAt: FieldRef<"SlaPrioridad", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SlaPrioridad findUnique
   */
  export type SlaPrioridadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadInclude<ExtArgs> | null
    /**
     * Filter, which SlaPrioridad to fetch.
     */
    where: SlaPrioridadWhereUniqueInput
  }

  /**
   * SlaPrioridad findUniqueOrThrow
   */
  export type SlaPrioridadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadInclude<ExtArgs> | null
    /**
     * Filter, which SlaPrioridad to fetch.
     */
    where: SlaPrioridadWhereUniqueInput
  }

  /**
   * SlaPrioridad findFirst
   */
  export type SlaPrioridadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadInclude<ExtArgs> | null
    /**
     * Filter, which SlaPrioridad to fetch.
     */
    where?: SlaPrioridadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SlaPrioridads to fetch.
     */
    orderBy?: SlaPrioridadOrderByWithRelationInput | SlaPrioridadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SlaPrioridads.
     */
    cursor?: SlaPrioridadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SlaPrioridads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SlaPrioridads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SlaPrioridads.
     */
    distinct?: SlaPrioridadScalarFieldEnum | SlaPrioridadScalarFieldEnum[]
  }

  /**
   * SlaPrioridad findFirstOrThrow
   */
  export type SlaPrioridadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadInclude<ExtArgs> | null
    /**
     * Filter, which SlaPrioridad to fetch.
     */
    where?: SlaPrioridadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SlaPrioridads to fetch.
     */
    orderBy?: SlaPrioridadOrderByWithRelationInput | SlaPrioridadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SlaPrioridads.
     */
    cursor?: SlaPrioridadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SlaPrioridads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SlaPrioridads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SlaPrioridads.
     */
    distinct?: SlaPrioridadScalarFieldEnum | SlaPrioridadScalarFieldEnum[]
  }

  /**
   * SlaPrioridad findMany
   */
  export type SlaPrioridadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadInclude<ExtArgs> | null
    /**
     * Filter, which SlaPrioridads to fetch.
     */
    where?: SlaPrioridadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SlaPrioridads to fetch.
     */
    orderBy?: SlaPrioridadOrderByWithRelationInput | SlaPrioridadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SlaPrioridads.
     */
    cursor?: SlaPrioridadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SlaPrioridads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SlaPrioridads.
     */
    skip?: number
    distinct?: SlaPrioridadScalarFieldEnum | SlaPrioridadScalarFieldEnum[]
  }

  /**
   * SlaPrioridad create
   */
  export type SlaPrioridadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadInclude<ExtArgs> | null
    /**
     * The data needed to create a SlaPrioridad.
     */
    data: XOR<SlaPrioridadCreateInput, SlaPrioridadUncheckedCreateInput>
  }

  /**
   * SlaPrioridad createMany
   */
  export type SlaPrioridadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SlaPrioridads.
     */
    data: SlaPrioridadCreateManyInput | SlaPrioridadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SlaPrioridad createManyAndReturn
   */
  export type SlaPrioridadCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * The data used to create many SlaPrioridads.
     */
    data: SlaPrioridadCreateManyInput | SlaPrioridadCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SlaPrioridad update
   */
  export type SlaPrioridadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadInclude<ExtArgs> | null
    /**
     * The data needed to update a SlaPrioridad.
     */
    data: XOR<SlaPrioridadUpdateInput, SlaPrioridadUncheckedUpdateInput>
    /**
     * Choose, which SlaPrioridad to update.
     */
    where: SlaPrioridadWhereUniqueInput
  }

  /**
   * SlaPrioridad updateMany
   */
  export type SlaPrioridadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SlaPrioridads.
     */
    data: XOR<SlaPrioridadUpdateManyMutationInput, SlaPrioridadUncheckedUpdateManyInput>
    /**
     * Filter which SlaPrioridads to update
     */
    where?: SlaPrioridadWhereInput
    /**
     * Limit how many SlaPrioridads to update.
     */
    limit?: number
  }

  /**
   * SlaPrioridad updateManyAndReturn
   */
  export type SlaPrioridadUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * The data used to update SlaPrioridads.
     */
    data: XOR<SlaPrioridadUpdateManyMutationInput, SlaPrioridadUncheckedUpdateManyInput>
    /**
     * Filter which SlaPrioridads to update
     */
    where?: SlaPrioridadWhereInput
    /**
     * Limit how many SlaPrioridads to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SlaPrioridad upsert
   */
  export type SlaPrioridadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadInclude<ExtArgs> | null
    /**
     * The filter to search for the SlaPrioridad to update in case it exists.
     */
    where: SlaPrioridadWhereUniqueInput
    /**
     * In case the SlaPrioridad found by the `where` argument doesn't exist, create a new SlaPrioridad with this data.
     */
    create: XOR<SlaPrioridadCreateInput, SlaPrioridadUncheckedCreateInput>
    /**
     * In case the SlaPrioridad was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SlaPrioridadUpdateInput, SlaPrioridadUncheckedUpdateInput>
  }

  /**
   * SlaPrioridad delete
   */
  export type SlaPrioridadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadInclude<ExtArgs> | null
    /**
     * Filter which SlaPrioridad to delete.
     */
    where: SlaPrioridadWhereUniqueInput
  }

  /**
   * SlaPrioridad deleteMany
   */
  export type SlaPrioridadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SlaPrioridads to delete
     */
    where?: SlaPrioridadWhereInput
    /**
     * Limit how many SlaPrioridads to delete.
     */
    limit?: number
  }

  /**
   * SlaPrioridad without action
   */
  export type SlaPrioridadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlaPrioridad
     */
    select?: SlaPrioridadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlaPrioridad
     */
    omit?: SlaPrioridadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlaPrioridadInclude<ExtArgs> | null
  }


  /**
   * Model Ticket
   */

  export type AggregateTicket = {
    _count: TicketCountAggregateOutputType | null
    _avg: TicketAvgAggregateOutputType | null
    _sum: TicketSumAggregateOutputType | null
    _min: TicketMinAggregateOutputType | null
    _max: TicketMaxAggregateOutputType | null
  }

  export type TicketAvgAggregateOutputType = {
    id: number | null
    solicitanteId: number | null
    asignadoA: number | null
    departamentoId: number | null
    prioridadId: number | null
    estadoId: number | null
  }

  export type TicketSumAggregateOutputType = {
    id: number | null
    solicitanteId: number | null
    asignadoA: number | null
    departamentoId: number | null
    prioridadId: number | null
    estadoId: number | null
  }

  export type TicketMinAggregateOutputType = {
    id: number | null
    numeroTicket: string | null
    asunto: string | null
    descripcion: string | null
    solicitanteId: number | null
    asignadoA: number | null
    departamentoId: number | null
    prioridadId: number | null
    estadoId: number | null
    fechaVencimiento: Date | null
    fechaResolucion: Date | null
    fechaCierre: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TicketMaxAggregateOutputType = {
    id: number | null
    numeroTicket: string | null
    asunto: string | null
    descripcion: string | null
    solicitanteId: number | null
    asignadoA: number | null
    departamentoId: number | null
    prioridadId: number | null
    estadoId: number | null
    fechaVencimiento: Date | null
    fechaResolucion: Date | null
    fechaCierre: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TicketCountAggregateOutputType = {
    id: number
    numeroTicket: number
    asunto: number
    descripcion: number
    solicitanteId: number
    asignadoA: number
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento: number
    fechaResolucion: number
    fechaCierre: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TicketAvgAggregateInputType = {
    id?: true
    solicitanteId?: true
    asignadoA?: true
    departamentoId?: true
    prioridadId?: true
    estadoId?: true
  }

  export type TicketSumAggregateInputType = {
    id?: true
    solicitanteId?: true
    asignadoA?: true
    departamentoId?: true
    prioridadId?: true
    estadoId?: true
  }

  export type TicketMinAggregateInputType = {
    id?: true
    numeroTicket?: true
    asunto?: true
    descripcion?: true
    solicitanteId?: true
    asignadoA?: true
    departamentoId?: true
    prioridadId?: true
    estadoId?: true
    fechaVencimiento?: true
    fechaResolucion?: true
    fechaCierre?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TicketMaxAggregateInputType = {
    id?: true
    numeroTicket?: true
    asunto?: true
    descripcion?: true
    solicitanteId?: true
    asignadoA?: true
    departamentoId?: true
    prioridadId?: true
    estadoId?: true
    fechaVencimiento?: true
    fechaResolucion?: true
    fechaCierre?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TicketCountAggregateInputType = {
    id?: true
    numeroTicket?: true
    asunto?: true
    descripcion?: true
    solicitanteId?: true
    asignadoA?: true
    departamentoId?: true
    prioridadId?: true
    estadoId?: true
    fechaVencimiento?: true
    fechaResolucion?: true
    fechaCierre?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TicketAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ticket to aggregate.
     */
    where?: TicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tickets to fetch.
     */
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tickets
    **/
    _count?: true | TicketCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TicketAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TicketSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TicketMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TicketMaxAggregateInputType
  }

  export type GetTicketAggregateType<T extends TicketAggregateArgs> = {
        [P in keyof T & keyof AggregateTicket]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTicket[P]>
      : GetScalarType<T[P], AggregateTicket[P]>
  }




  export type TicketGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketWhereInput
    orderBy?: TicketOrderByWithAggregationInput | TicketOrderByWithAggregationInput[]
    by: TicketScalarFieldEnum[] | TicketScalarFieldEnum
    having?: TicketScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TicketCountAggregateInputType | true
    _avg?: TicketAvgAggregateInputType
    _sum?: TicketSumAggregateInputType
    _min?: TicketMinAggregateInputType
    _max?: TicketMaxAggregateInputType
  }

  export type TicketGroupByOutputType = {
    id: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA: number | null
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento: Date | null
    fechaResolucion: Date | null
    fechaCierre: Date | null
    createdAt: Date
    updatedAt: Date | null
    _count: TicketCountAggregateOutputType | null
    _avg: TicketAvgAggregateOutputType | null
    _sum: TicketSumAggregateOutputType | null
    _min: TicketMinAggregateOutputType | null
    _max: TicketMaxAggregateOutputType | null
  }

  type GetTicketGroupByPayload<T extends TicketGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TicketGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TicketGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TicketGroupByOutputType[P]>
            : GetScalarType<T[P], TicketGroupByOutputType[P]>
        }
      >
    >


  export type TicketSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numeroTicket?: boolean
    asunto?: boolean
    descripcion?: boolean
    solicitanteId?: boolean
    asignadoA?: boolean
    departamentoId?: boolean
    prioridadId?: boolean
    estadoId?: boolean
    fechaVencimiento?: boolean
    fechaResolucion?: boolean
    fechaCierre?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    solicitante?: boolean | UsuarioDefaultArgs<ExtArgs>
    asignado?: boolean | Ticket$asignadoArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
    prioridad?: boolean | PrioridadDefaultArgs<ExtArgs>
    estado?: boolean | EstadoTicketDefaultArgs<ExtArgs>
    comentarios?: boolean | Ticket$comentariosArgs<ExtArgs>
    historial?: boolean | Ticket$historialArgs<ExtArgs>
    archivos?: boolean | Ticket$archivosArgs<ExtArgs>
    derivaciones?: boolean | Ticket$derivacionesArgs<ExtArgs>
    encuesta?: boolean | Ticket$encuestaArgs<ExtArgs>
    notificaciones?: boolean | Ticket$notificacionesArgs<ExtArgs>
    usuariosEnCopia?: boolean | Ticket$usuariosEnCopiaArgs<ExtArgs>
    _count?: boolean | TicketCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ticket"]>

  export type TicketSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numeroTicket?: boolean
    asunto?: boolean
    descripcion?: boolean
    solicitanteId?: boolean
    asignadoA?: boolean
    departamentoId?: boolean
    prioridadId?: boolean
    estadoId?: boolean
    fechaVencimiento?: boolean
    fechaResolucion?: boolean
    fechaCierre?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    solicitante?: boolean | UsuarioDefaultArgs<ExtArgs>
    asignado?: boolean | Ticket$asignadoArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
    prioridad?: boolean | PrioridadDefaultArgs<ExtArgs>
    estado?: boolean | EstadoTicketDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ticket"]>

  export type TicketSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numeroTicket?: boolean
    asunto?: boolean
    descripcion?: boolean
    solicitanteId?: boolean
    asignadoA?: boolean
    departamentoId?: boolean
    prioridadId?: boolean
    estadoId?: boolean
    fechaVencimiento?: boolean
    fechaResolucion?: boolean
    fechaCierre?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    solicitante?: boolean | UsuarioDefaultArgs<ExtArgs>
    asignado?: boolean | Ticket$asignadoArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
    prioridad?: boolean | PrioridadDefaultArgs<ExtArgs>
    estado?: boolean | EstadoTicketDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ticket"]>

  export type TicketSelectScalar = {
    id?: boolean
    numeroTicket?: boolean
    asunto?: boolean
    descripcion?: boolean
    solicitanteId?: boolean
    asignadoA?: boolean
    departamentoId?: boolean
    prioridadId?: boolean
    estadoId?: boolean
    fechaVencimiento?: boolean
    fechaResolucion?: boolean
    fechaCierre?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TicketOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "numeroTicket" | "asunto" | "descripcion" | "solicitanteId" | "asignadoA" | "departamentoId" | "prioridadId" | "estadoId" | "fechaVencimiento" | "fechaResolucion" | "fechaCierre" | "createdAt" | "updatedAt", ExtArgs["result"]["ticket"]>
  export type TicketInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    solicitante?: boolean | UsuarioDefaultArgs<ExtArgs>
    asignado?: boolean | Ticket$asignadoArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
    prioridad?: boolean | PrioridadDefaultArgs<ExtArgs>
    estado?: boolean | EstadoTicketDefaultArgs<ExtArgs>
    comentarios?: boolean | Ticket$comentariosArgs<ExtArgs>
    historial?: boolean | Ticket$historialArgs<ExtArgs>
    archivos?: boolean | Ticket$archivosArgs<ExtArgs>
    derivaciones?: boolean | Ticket$derivacionesArgs<ExtArgs>
    encuesta?: boolean | Ticket$encuestaArgs<ExtArgs>
    notificaciones?: boolean | Ticket$notificacionesArgs<ExtArgs>
    usuariosEnCopia?: boolean | Ticket$usuariosEnCopiaArgs<ExtArgs>
    _count?: boolean | TicketCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TicketIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    solicitante?: boolean | UsuarioDefaultArgs<ExtArgs>
    asignado?: boolean | Ticket$asignadoArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
    prioridad?: boolean | PrioridadDefaultArgs<ExtArgs>
    estado?: boolean | EstadoTicketDefaultArgs<ExtArgs>
  }
  export type TicketIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    solicitante?: boolean | UsuarioDefaultArgs<ExtArgs>
    asignado?: boolean | Ticket$asignadoArgs<ExtArgs>
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
    prioridad?: boolean | PrioridadDefaultArgs<ExtArgs>
    estado?: boolean | EstadoTicketDefaultArgs<ExtArgs>
  }

  export type $TicketPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ticket"
    objects: {
      solicitante: Prisma.$UsuarioPayload<ExtArgs>
      asignado: Prisma.$UsuarioPayload<ExtArgs> | null
      departamento: Prisma.$DepartamentoPayload<ExtArgs>
      prioridad: Prisma.$PrioridadPayload<ExtArgs>
      estado: Prisma.$EstadoTicketPayload<ExtArgs>
      comentarios: Prisma.$ComentarioTicketPayload<ExtArgs>[]
      historial: Prisma.$HistorialTicketPayload<ExtArgs>[]
      archivos: Prisma.$ArchivoAdjuntoPayload<ExtArgs>[]
      derivaciones: Prisma.$DerivacionTicketPayload<ExtArgs>[]
      encuesta: Prisma.$EncuestaPayload<ExtArgs> | null
      notificaciones: Prisma.$NotificacionPayload<ExtArgs>[]
      usuariosEnCopia: Prisma.$UsuarioEnCopiaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      numeroTicket: string
      asunto: string
      descripcion: string
      solicitanteId: number
      asignadoA: number | null
      departamentoId: number
      prioridadId: number
      estadoId: number
      fechaVencimiento: Date | null
      fechaResolucion: Date | null
      fechaCierre: Date | null
      createdAt: Date
      updatedAt: Date | null
    }, ExtArgs["result"]["ticket"]>
    composites: {}
  }

  type TicketGetPayload<S extends boolean | null | undefined | TicketDefaultArgs> = $Result.GetResult<Prisma.$TicketPayload, S>

  type TicketCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TicketFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TicketCountAggregateInputType | true
    }

  export interface TicketDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ticket'], meta: { name: 'Ticket' } }
    /**
     * Find zero or one Ticket that matches the filter.
     * @param {TicketFindUniqueArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TicketFindUniqueArgs>(args: SelectSubset<T, TicketFindUniqueArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ticket that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TicketFindUniqueOrThrowArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TicketFindUniqueOrThrowArgs>(args: SelectSubset<T, TicketFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ticket that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketFindFirstArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TicketFindFirstArgs>(args?: SelectSubset<T, TicketFindFirstArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ticket that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketFindFirstOrThrowArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TicketFindFirstOrThrowArgs>(args?: SelectSubset<T, TicketFindFirstOrThrowArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tickets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tickets
     * const tickets = await prisma.ticket.findMany()
     * 
     * // Get first 10 Tickets
     * const tickets = await prisma.ticket.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ticketWithIdOnly = await prisma.ticket.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TicketFindManyArgs>(args?: SelectSubset<T, TicketFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ticket.
     * @param {TicketCreateArgs} args - Arguments to create a Ticket.
     * @example
     * // Create one Ticket
     * const Ticket = await prisma.ticket.create({
     *   data: {
     *     // ... data to create a Ticket
     *   }
     * })
     * 
     */
    create<T extends TicketCreateArgs>(args: SelectSubset<T, TicketCreateArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tickets.
     * @param {TicketCreateManyArgs} args - Arguments to create many Tickets.
     * @example
     * // Create many Tickets
     * const ticket = await prisma.ticket.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TicketCreateManyArgs>(args?: SelectSubset<T, TicketCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tickets and returns the data saved in the database.
     * @param {TicketCreateManyAndReturnArgs} args - Arguments to create many Tickets.
     * @example
     * // Create many Tickets
     * const ticket = await prisma.ticket.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tickets and only return the `id`
     * const ticketWithIdOnly = await prisma.ticket.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TicketCreateManyAndReturnArgs>(args?: SelectSubset<T, TicketCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ticket.
     * @param {TicketDeleteArgs} args - Arguments to delete one Ticket.
     * @example
     * // Delete one Ticket
     * const Ticket = await prisma.ticket.delete({
     *   where: {
     *     // ... filter to delete one Ticket
     *   }
     * })
     * 
     */
    delete<T extends TicketDeleteArgs>(args: SelectSubset<T, TicketDeleteArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ticket.
     * @param {TicketUpdateArgs} args - Arguments to update one Ticket.
     * @example
     * // Update one Ticket
     * const ticket = await prisma.ticket.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TicketUpdateArgs>(args: SelectSubset<T, TicketUpdateArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tickets.
     * @param {TicketDeleteManyArgs} args - Arguments to filter Tickets to delete.
     * @example
     * // Delete a few Tickets
     * const { count } = await prisma.ticket.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TicketDeleteManyArgs>(args?: SelectSubset<T, TicketDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tickets
     * const ticket = await prisma.ticket.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TicketUpdateManyArgs>(args: SelectSubset<T, TicketUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tickets and returns the data updated in the database.
     * @param {TicketUpdateManyAndReturnArgs} args - Arguments to update many Tickets.
     * @example
     * // Update many Tickets
     * const ticket = await prisma.ticket.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tickets and only return the `id`
     * const ticketWithIdOnly = await prisma.ticket.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TicketUpdateManyAndReturnArgs>(args: SelectSubset<T, TicketUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ticket.
     * @param {TicketUpsertArgs} args - Arguments to update or create a Ticket.
     * @example
     * // Update or create a Ticket
     * const ticket = await prisma.ticket.upsert({
     *   create: {
     *     // ... data to create a Ticket
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ticket we want to update
     *   }
     * })
     */
    upsert<T extends TicketUpsertArgs>(args: SelectSubset<T, TicketUpsertArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketCountArgs} args - Arguments to filter Tickets to count.
     * @example
     * // Count the number of Tickets
     * const count = await prisma.ticket.count({
     *   where: {
     *     // ... the filter for the Tickets we want to count
     *   }
     * })
    **/
    count<T extends TicketCountArgs>(
      args?: Subset<T, TicketCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TicketCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ticket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TicketAggregateArgs>(args: Subset<T, TicketAggregateArgs>): Prisma.PrismaPromise<GetTicketAggregateType<T>>

    /**
     * Group by Ticket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TicketGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TicketGroupByArgs['orderBy'] }
        : { orderBy?: TicketGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TicketGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTicketGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ticket model
   */
  readonly fields: TicketFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ticket.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TicketClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    solicitante<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    asignado<T extends Ticket$asignadoArgs<ExtArgs> = {}>(args?: Subset<T, Ticket$asignadoArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    departamento<T extends DepartamentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DepartamentoDefaultArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    prioridad<T extends PrioridadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PrioridadDefaultArgs<ExtArgs>>): Prisma__PrioridadClient<$Result.GetResult<Prisma.$PrioridadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    estado<T extends EstadoTicketDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstadoTicketDefaultArgs<ExtArgs>>): Prisma__EstadoTicketClient<$Result.GetResult<Prisma.$EstadoTicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    comentarios<T extends Ticket$comentariosArgs<ExtArgs> = {}>(args?: Subset<T, Ticket$comentariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historial<T extends Ticket$historialArgs<ExtArgs> = {}>(args?: Subset<T, Ticket$historialArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    archivos<T extends Ticket$archivosArgs<ExtArgs> = {}>(args?: Subset<T, Ticket$archivosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    derivaciones<T extends Ticket$derivacionesArgs<ExtArgs> = {}>(args?: Subset<T, Ticket$derivacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    encuesta<T extends Ticket$encuestaArgs<ExtArgs> = {}>(args?: Subset<T, Ticket$encuestaArgs<ExtArgs>>): Prisma__EncuestaClient<$Result.GetResult<Prisma.$EncuestaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    notificaciones<T extends Ticket$notificacionesArgs<ExtArgs> = {}>(args?: Subset<T, Ticket$notificacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuariosEnCopia<T extends Ticket$usuariosEnCopiaArgs<ExtArgs> = {}>(args?: Subset<T, Ticket$usuariosEnCopiaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioEnCopiaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Ticket model
   */
  interface TicketFieldRefs {
    readonly id: FieldRef<"Ticket", 'Int'>
    readonly numeroTicket: FieldRef<"Ticket", 'String'>
    readonly asunto: FieldRef<"Ticket", 'String'>
    readonly descripcion: FieldRef<"Ticket", 'String'>
    readonly solicitanteId: FieldRef<"Ticket", 'Int'>
    readonly asignadoA: FieldRef<"Ticket", 'Int'>
    readonly departamentoId: FieldRef<"Ticket", 'Int'>
    readonly prioridadId: FieldRef<"Ticket", 'Int'>
    readonly estadoId: FieldRef<"Ticket", 'Int'>
    readonly fechaVencimiento: FieldRef<"Ticket", 'DateTime'>
    readonly fechaResolucion: FieldRef<"Ticket", 'DateTime'>
    readonly fechaCierre: FieldRef<"Ticket", 'DateTime'>
    readonly createdAt: FieldRef<"Ticket", 'DateTime'>
    readonly updatedAt: FieldRef<"Ticket", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Ticket findUnique
   */
  export type TicketFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * Filter, which Ticket to fetch.
     */
    where: TicketWhereUniqueInput
  }

  /**
   * Ticket findUniqueOrThrow
   */
  export type TicketFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * Filter, which Ticket to fetch.
     */
    where: TicketWhereUniqueInput
  }

  /**
   * Ticket findFirst
   */
  export type TicketFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * Filter, which Ticket to fetch.
     */
    where?: TicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tickets to fetch.
     */
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tickets.
     */
    cursor?: TicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tickets.
     */
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * Ticket findFirstOrThrow
   */
  export type TicketFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * Filter, which Ticket to fetch.
     */
    where?: TicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tickets to fetch.
     */
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tickets.
     */
    cursor?: TicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tickets.
     */
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * Ticket findMany
   */
  export type TicketFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * Filter, which Tickets to fetch.
     */
    where?: TicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tickets to fetch.
     */
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tickets.
     */
    cursor?: TicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tickets.
     */
    skip?: number
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * Ticket create
   */
  export type TicketCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * The data needed to create a Ticket.
     */
    data: XOR<TicketCreateInput, TicketUncheckedCreateInput>
  }

  /**
   * Ticket createMany
   */
  export type TicketCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tickets.
     */
    data: TicketCreateManyInput | TicketCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ticket createManyAndReturn
   */
  export type TicketCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * The data used to create many Tickets.
     */
    data: TicketCreateManyInput | TicketCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ticket update
   */
  export type TicketUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * The data needed to update a Ticket.
     */
    data: XOR<TicketUpdateInput, TicketUncheckedUpdateInput>
    /**
     * Choose, which Ticket to update.
     */
    where: TicketWhereUniqueInput
  }

  /**
   * Ticket updateMany
   */
  export type TicketUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tickets.
     */
    data: XOR<TicketUpdateManyMutationInput, TicketUncheckedUpdateManyInput>
    /**
     * Filter which Tickets to update
     */
    where?: TicketWhereInput
    /**
     * Limit how many Tickets to update.
     */
    limit?: number
  }

  /**
   * Ticket updateManyAndReturn
   */
  export type TicketUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * The data used to update Tickets.
     */
    data: XOR<TicketUpdateManyMutationInput, TicketUncheckedUpdateManyInput>
    /**
     * Filter which Tickets to update
     */
    where?: TicketWhereInput
    /**
     * Limit how many Tickets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ticket upsert
   */
  export type TicketUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * The filter to search for the Ticket to update in case it exists.
     */
    where: TicketWhereUniqueInput
    /**
     * In case the Ticket found by the `where` argument doesn't exist, create a new Ticket with this data.
     */
    create: XOR<TicketCreateInput, TicketUncheckedCreateInput>
    /**
     * In case the Ticket was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TicketUpdateInput, TicketUncheckedUpdateInput>
  }

  /**
   * Ticket delete
   */
  export type TicketDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * Filter which Ticket to delete.
     */
    where: TicketWhereUniqueInput
  }

  /**
   * Ticket deleteMany
   */
  export type TicketDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tickets to delete
     */
    where?: TicketWhereInput
    /**
     * Limit how many Tickets to delete.
     */
    limit?: number
  }

  /**
   * Ticket.asignado
   */
  export type Ticket$asignadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Ticket.comentarios
   */
  export type Ticket$comentariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketInclude<ExtArgs> | null
    where?: ComentarioTicketWhereInput
    orderBy?: ComentarioTicketOrderByWithRelationInput | ComentarioTicketOrderByWithRelationInput[]
    cursor?: ComentarioTicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComentarioTicketScalarFieldEnum | ComentarioTicketScalarFieldEnum[]
  }

  /**
   * Ticket.historial
   */
  export type Ticket$historialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketInclude<ExtArgs> | null
    where?: HistorialTicketWhereInput
    orderBy?: HistorialTicketOrderByWithRelationInput | HistorialTicketOrderByWithRelationInput[]
    cursor?: HistorialTicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialTicketScalarFieldEnum | HistorialTicketScalarFieldEnum[]
  }

  /**
   * Ticket.archivos
   */
  export type Ticket$archivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoInclude<ExtArgs> | null
    where?: ArchivoAdjuntoWhereInput
    orderBy?: ArchivoAdjuntoOrderByWithRelationInput | ArchivoAdjuntoOrderByWithRelationInput[]
    cursor?: ArchivoAdjuntoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArchivoAdjuntoScalarFieldEnum | ArchivoAdjuntoScalarFieldEnum[]
  }

  /**
   * Ticket.derivaciones
   */
  export type Ticket$derivacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
    where?: DerivacionTicketWhereInput
    orderBy?: DerivacionTicketOrderByWithRelationInput | DerivacionTicketOrderByWithRelationInput[]
    cursor?: DerivacionTicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DerivacionTicketScalarFieldEnum | DerivacionTicketScalarFieldEnum[]
  }

  /**
   * Ticket.encuesta
   */
  export type Ticket$encuestaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaInclude<ExtArgs> | null
    where?: EncuestaWhereInput
  }

  /**
   * Ticket.notificaciones
   */
  export type Ticket$notificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    where?: NotificacionWhereInput
    orderBy?: NotificacionOrderByWithRelationInput | NotificacionOrderByWithRelationInput[]
    cursor?: NotificacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacionScalarFieldEnum | NotificacionScalarFieldEnum[]
  }

  /**
   * Ticket.usuariosEnCopia
   */
  export type Ticket$usuariosEnCopiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaInclude<ExtArgs> | null
    where?: UsuarioEnCopiaWhereInput
    orderBy?: UsuarioEnCopiaOrderByWithRelationInput | UsuarioEnCopiaOrderByWithRelationInput[]
    cursor?: UsuarioEnCopiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioEnCopiaScalarFieldEnum | UsuarioEnCopiaScalarFieldEnum[]
  }

  /**
   * Ticket without action
   */
  export type TicketDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
  }


  /**
   * Model HistorialTicket
   */

  export type AggregateHistorialTicket = {
    _count: HistorialTicketCountAggregateOutputType | null
    _avg: HistorialTicketAvgAggregateOutputType | null
    _sum: HistorialTicketSumAggregateOutputType | null
    _min: HistorialTicketMinAggregateOutputType | null
    _max: HistorialTicketMaxAggregateOutputType | null
  }

  export type HistorialTicketAvgAggregateOutputType = {
    id: number | null
    ticketId: number | null
    usuarioId: number | null
  }

  export type HistorialTicketSumAggregateOutputType = {
    id: number | null
    ticketId: number | null
    usuarioId: number | null
  }

  export type HistorialTicketMinAggregateOutputType = {
    id: number | null
    ticketId: number | null
    usuarioId: number | null
    tipoAccion: string | null
    campoModificado: string | null
    valorAnterior: string | null
    valorNuevo: string | null
    comentario: string | null
    createdAt: Date | null
  }

  export type HistorialTicketMaxAggregateOutputType = {
    id: number | null
    ticketId: number | null
    usuarioId: number | null
    tipoAccion: string | null
    campoModificado: string | null
    valorAnterior: string | null
    valorNuevo: string | null
    comentario: string | null
    createdAt: Date | null
  }

  export type HistorialTicketCountAggregateOutputType = {
    id: number
    ticketId: number
    usuarioId: number
    tipoAccion: number
    campoModificado: number
    valorAnterior: number
    valorNuevo: number
    comentario: number
    createdAt: number
    _all: number
  }


  export type HistorialTicketAvgAggregateInputType = {
    id?: true
    ticketId?: true
    usuarioId?: true
  }

  export type HistorialTicketSumAggregateInputType = {
    id?: true
    ticketId?: true
    usuarioId?: true
  }

  export type HistorialTicketMinAggregateInputType = {
    id?: true
    ticketId?: true
    usuarioId?: true
    tipoAccion?: true
    campoModificado?: true
    valorAnterior?: true
    valorNuevo?: true
    comentario?: true
    createdAt?: true
  }

  export type HistorialTicketMaxAggregateInputType = {
    id?: true
    ticketId?: true
    usuarioId?: true
    tipoAccion?: true
    campoModificado?: true
    valorAnterior?: true
    valorNuevo?: true
    comentario?: true
    createdAt?: true
  }

  export type HistorialTicketCountAggregateInputType = {
    id?: true
    ticketId?: true
    usuarioId?: true
    tipoAccion?: true
    campoModificado?: true
    valorAnterior?: true
    valorNuevo?: true
    comentario?: true
    createdAt?: true
    _all?: true
  }

  export type HistorialTicketAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialTicket to aggregate.
     */
    where?: HistorialTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialTickets to fetch.
     */
    orderBy?: HistorialTicketOrderByWithRelationInput | HistorialTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HistorialTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HistorialTickets
    **/
    _count?: true | HistorialTicketCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HistorialTicketAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HistorialTicketSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistorialTicketMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistorialTicketMaxAggregateInputType
  }

  export type GetHistorialTicketAggregateType<T extends HistorialTicketAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorialTicket]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorialTicket[P]>
      : GetScalarType<T[P], AggregateHistorialTicket[P]>
  }




  export type HistorialTicketGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialTicketWhereInput
    orderBy?: HistorialTicketOrderByWithAggregationInput | HistorialTicketOrderByWithAggregationInput[]
    by: HistorialTicketScalarFieldEnum[] | HistorialTicketScalarFieldEnum
    having?: HistorialTicketScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistorialTicketCountAggregateInputType | true
    _avg?: HistorialTicketAvgAggregateInputType
    _sum?: HistorialTicketSumAggregateInputType
    _min?: HistorialTicketMinAggregateInputType
    _max?: HistorialTicketMaxAggregateInputType
  }

  export type HistorialTicketGroupByOutputType = {
    id: number
    ticketId: number
    usuarioId: number
    tipoAccion: string
    campoModificado: string | null
    valorAnterior: string | null
    valorNuevo: string | null
    comentario: string | null
    createdAt: Date
    _count: HistorialTicketCountAggregateOutputType | null
    _avg: HistorialTicketAvgAggregateOutputType | null
    _sum: HistorialTicketSumAggregateOutputType | null
    _min: HistorialTicketMinAggregateOutputType | null
    _max: HistorialTicketMaxAggregateOutputType | null
  }

  type GetHistorialTicketGroupByPayload<T extends HistorialTicketGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistorialTicketGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistorialTicketGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistorialTicketGroupByOutputType[P]>
            : GetScalarType<T[P], HistorialTicketGroupByOutputType[P]>
        }
      >
    >


  export type HistorialTicketSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    usuarioId?: boolean
    tipoAccion?: boolean
    campoModificado?: boolean
    valorAnterior?: boolean
    valorNuevo?: boolean
    comentario?: boolean
    createdAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historialTicket"]>

  export type HistorialTicketSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    usuarioId?: boolean
    tipoAccion?: boolean
    campoModificado?: boolean
    valorAnterior?: boolean
    valorNuevo?: boolean
    comentario?: boolean
    createdAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historialTicket"]>

  export type HistorialTicketSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    usuarioId?: boolean
    tipoAccion?: boolean
    campoModificado?: boolean
    valorAnterior?: boolean
    valorNuevo?: boolean
    comentario?: boolean
    createdAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historialTicket"]>

  export type HistorialTicketSelectScalar = {
    id?: boolean
    ticketId?: boolean
    usuarioId?: boolean
    tipoAccion?: boolean
    campoModificado?: boolean
    valorAnterior?: boolean
    valorNuevo?: boolean
    comentario?: boolean
    createdAt?: boolean
  }

  export type HistorialTicketOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ticketId" | "usuarioId" | "tipoAccion" | "campoModificado" | "valorAnterior" | "valorNuevo" | "comentario" | "createdAt", ExtArgs["result"]["historialTicket"]>
  export type HistorialTicketInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type HistorialTicketIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type HistorialTicketIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $HistorialTicketPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HistorialTicket"
    objects: {
      ticket: Prisma.$TicketPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ticketId: number
      usuarioId: number
      tipoAccion: string
      campoModificado: string | null
      valorAnterior: string | null
      valorNuevo: string | null
      comentario: string | null
      createdAt: Date
    }, ExtArgs["result"]["historialTicket"]>
    composites: {}
  }

  type HistorialTicketGetPayload<S extends boolean | null | undefined | HistorialTicketDefaultArgs> = $Result.GetResult<Prisma.$HistorialTicketPayload, S>

  type HistorialTicketCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HistorialTicketFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HistorialTicketCountAggregateInputType | true
    }

  export interface HistorialTicketDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HistorialTicket'], meta: { name: 'HistorialTicket' } }
    /**
     * Find zero or one HistorialTicket that matches the filter.
     * @param {HistorialTicketFindUniqueArgs} args - Arguments to find a HistorialTicket
     * @example
     * // Get one HistorialTicket
     * const historialTicket = await prisma.historialTicket.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HistorialTicketFindUniqueArgs>(args: SelectSubset<T, HistorialTicketFindUniqueArgs<ExtArgs>>): Prisma__HistorialTicketClient<$Result.GetResult<Prisma.$HistorialTicketPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one HistorialTicket that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HistorialTicketFindUniqueOrThrowArgs} args - Arguments to find a HistorialTicket
     * @example
     * // Get one HistorialTicket
     * const historialTicket = await prisma.historialTicket.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HistorialTicketFindUniqueOrThrowArgs>(args: SelectSubset<T, HistorialTicketFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HistorialTicketClient<$Result.GetResult<Prisma.$HistorialTicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HistorialTicket that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialTicketFindFirstArgs} args - Arguments to find a HistorialTicket
     * @example
     * // Get one HistorialTicket
     * const historialTicket = await prisma.historialTicket.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HistorialTicketFindFirstArgs>(args?: SelectSubset<T, HistorialTicketFindFirstArgs<ExtArgs>>): Prisma__HistorialTicketClient<$Result.GetResult<Prisma.$HistorialTicketPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HistorialTicket that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialTicketFindFirstOrThrowArgs} args - Arguments to find a HistorialTicket
     * @example
     * // Get one HistorialTicket
     * const historialTicket = await prisma.historialTicket.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HistorialTicketFindFirstOrThrowArgs>(args?: SelectSubset<T, HistorialTicketFindFirstOrThrowArgs<ExtArgs>>): Prisma__HistorialTicketClient<$Result.GetResult<Prisma.$HistorialTicketPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more HistorialTickets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialTicketFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistorialTickets
     * const historialTickets = await prisma.historialTicket.findMany()
     * 
     * // Get first 10 HistorialTickets
     * const historialTickets = await prisma.historialTicket.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const historialTicketWithIdOnly = await prisma.historialTicket.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HistorialTicketFindManyArgs>(args?: SelectSubset<T, HistorialTicketFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a HistorialTicket.
     * @param {HistorialTicketCreateArgs} args - Arguments to create a HistorialTicket.
     * @example
     * // Create one HistorialTicket
     * const HistorialTicket = await prisma.historialTicket.create({
     *   data: {
     *     // ... data to create a HistorialTicket
     *   }
     * })
     * 
     */
    create<T extends HistorialTicketCreateArgs>(args: SelectSubset<T, HistorialTicketCreateArgs<ExtArgs>>): Prisma__HistorialTicketClient<$Result.GetResult<Prisma.$HistorialTicketPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many HistorialTickets.
     * @param {HistorialTicketCreateManyArgs} args - Arguments to create many HistorialTickets.
     * @example
     * // Create many HistorialTickets
     * const historialTicket = await prisma.historialTicket.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HistorialTicketCreateManyArgs>(args?: SelectSubset<T, HistorialTicketCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HistorialTickets and returns the data saved in the database.
     * @param {HistorialTicketCreateManyAndReturnArgs} args - Arguments to create many HistorialTickets.
     * @example
     * // Create many HistorialTickets
     * const historialTicket = await prisma.historialTicket.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HistorialTickets and only return the `id`
     * const historialTicketWithIdOnly = await prisma.historialTicket.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HistorialTicketCreateManyAndReturnArgs>(args?: SelectSubset<T, HistorialTicketCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialTicketPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a HistorialTicket.
     * @param {HistorialTicketDeleteArgs} args - Arguments to delete one HistorialTicket.
     * @example
     * // Delete one HistorialTicket
     * const HistorialTicket = await prisma.historialTicket.delete({
     *   where: {
     *     // ... filter to delete one HistorialTicket
     *   }
     * })
     * 
     */
    delete<T extends HistorialTicketDeleteArgs>(args: SelectSubset<T, HistorialTicketDeleteArgs<ExtArgs>>): Prisma__HistorialTicketClient<$Result.GetResult<Prisma.$HistorialTicketPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one HistorialTicket.
     * @param {HistorialTicketUpdateArgs} args - Arguments to update one HistorialTicket.
     * @example
     * // Update one HistorialTicket
     * const historialTicket = await prisma.historialTicket.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HistorialTicketUpdateArgs>(args: SelectSubset<T, HistorialTicketUpdateArgs<ExtArgs>>): Prisma__HistorialTicketClient<$Result.GetResult<Prisma.$HistorialTicketPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more HistorialTickets.
     * @param {HistorialTicketDeleteManyArgs} args - Arguments to filter HistorialTickets to delete.
     * @example
     * // Delete a few HistorialTickets
     * const { count } = await prisma.historialTicket.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HistorialTicketDeleteManyArgs>(args?: SelectSubset<T, HistorialTicketDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialTickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialTicketUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistorialTickets
     * const historialTicket = await prisma.historialTicket.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HistorialTicketUpdateManyArgs>(args: SelectSubset<T, HistorialTicketUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialTickets and returns the data updated in the database.
     * @param {HistorialTicketUpdateManyAndReturnArgs} args - Arguments to update many HistorialTickets.
     * @example
     * // Update many HistorialTickets
     * const historialTicket = await prisma.historialTicket.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more HistorialTickets and only return the `id`
     * const historialTicketWithIdOnly = await prisma.historialTicket.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HistorialTicketUpdateManyAndReturnArgs>(args: SelectSubset<T, HistorialTicketUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialTicketPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one HistorialTicket.
     * @param {HistorialTicketUpsertArgs} args - Arguments to update or create a HistorialTicket.
     * @example
     * // Update or create a HistorialTicket
     * const historialTicket = await prisma.historialTicket.upsert({
     *   create: {
     *     // ... data to create a HistorialTicket
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistorialTicket we want to update
     *   }
     * })
     */
    upsert<T extends HistorialTicketUpsertArgs>(args: SelectSubset<T, HistorialTicketUpsertArgs<ExtArgs>>): Prisma__HistorialTicketClient<$Result.GetResult<Prisma.$HistorialTicketPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of HistorialTickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialTicketCountArgs} args - Arguments to filter HistorialTickets to count.
     * @example
     * // Count the number of HistorialTickets
     * const count = await prisma.historialTicket.count({
     *   where: {
     *     // ... the filter for the HistorialTickets we want to count
     *   }
     * })
    **/
    count<T extends HistorialTicketCountArgs>(
      args?: Subset<T, HistorialTicketCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistorialTicketCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistorialTicket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialTicketAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistorialTicketAggregateArgs>(args: Subset<T, HistorialTicketAggregateArgs>): Prisma.PrismaPromise<GetHistorialTicketAggregateType<T>>

    /**
     * Group by HistorialTicket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialTicketGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HistorialTicketGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HistorialTicketGroupByArgs['orderBy'] }
        : { orderBy?: HistorialTicketGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HistorialTicketGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorialTicketGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HistorialTicket model
   */
  readonly fields: HistorialTicketFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HistorialTicket.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HistorialTicketClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ticket<T extends TicketDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TicketDefaultArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HistorialTicket model
   */
  interface HistorialTicketFieldRefs {
    readonly id: FieldRef<"HistorialTicket", 'Int'>
    readonly ticketId: FieldRef<"HistorialTicket", 'Int'>
    readonly usuarioId: FieldRef<"HistorialTicket", 'Int'>
    readonly tipoAccion: FieldRef<"HistorialTicket", 'String'>
    readonly campoModificado: FieldRef<"HistorialTicket", 'String'>
    readonly valorAnterior: FieldRef<"HistorialTicket", 'String'>
    readonly valorNuevo: FieldRef<"HistorialTicket", 'String'>
    readonly comentario: FieldRef<"HistorialTicket", 'String'>
    readonly createdAt: FieldRef<"HistorialTicket", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * HistorialTicket findUnique
   */
  export type HistorialTicketFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketInclude<ExtArgs> | null
    /**
     * Filter, which HistorialTicket to fetch.
     */
    where: HistorialTicketWhereUniqueInput
  }

  /**
   * HistorialTicket findUniqueOrThrow
   */
  export type HistorialTicketFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketInclude<ExtArgs> | null
    /**
     * Filter, which HistorialTicket to fetch.
     */
    where: HistorialTicketWhereUniqueInput
  }

  /**
   * HistorialTicket findFirst
   */
  export type HistorialTicketFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketInclude<ExtArgs> | null
    /**
     * Filter, which HistorialTicket to fetch.
     */
    where?: HistorialTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialTickets to fetch.
     */
    orderBy?: HistorialTicketOrderByWithRelationInput | HistorialTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialTickets.
     */
    cursor?: HistorialTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialTickets.
     */
    distinct?: HistorialTicketScalarFieldEnum | HistorialTicketScalarFieldEnum[]
  }

  /**
   * HistorialTicket findFirstOrThrow
   */
  export type HistorialTicketFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketInclude<ExtArgs> | null
    /**
     * Filter, which HistorialTicket to fetch.
     */
    where?: HistorialTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialTickets to fetch.
     */
    orderBy?: HistorialTicketOrderByWithRelationInput | HistorialTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialTickets.
     */
    cursor?: HistorialTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialTickets.
     */
    distinct?: HistorialTicketScalarFieldEnum | HistorialTicketScalarFieldEnum[]
  }

  /**
   * HistorialTicket findMany
   */
  export type HistorialTicketFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketInclude<ExtArgs> | null
    /**
     * Filter, which HistorialTickets to fetch.
     */
    where?: HistorialTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialTickets to fetch.
     */
    orderBy?: HistorialTicketOrderByWithRelationInput | HistorialTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HistorialTickets.
     */
    cursor?: HistorialTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialTickets.
     */
    skip?: number
    distinct?: HistorialTicketScalarFieldEnum | HistorialTicketScalarFieldEnum[]
  }

  /**
   * HistorialTicket create
   */
  export type HistorialTicketCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketInclude<ExtArgs> | null
    /**
     * The data needed to create a HistorialTicket.
     */
    data: XOR<HistorialTicketCreateInput, HistorialTicketUncheckedCreateInput>
  }

  /**
   * HistorialTicket createMany
   */
  export type HistorialTicketCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HistorialTickets.
     */
    data: HistorialTicketCreateManyInput | HistorialTicketCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HistorialTicket createManyAndReturn
   */
  export type HistorialTicketCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * The data used to create many HistorialTickets.
     */
    data: HistorialTicketCreateManyInput | HistorialTicketCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * HistorialTicket update
   */
  export type HistorialTicketUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketInclude<ExtArgs> | null
    /**
     * The data needed to update a HistorialTicket.
     */
    data: XOR<HistorialTicketUpdateInput, HistorialTicketUncheckedUpdateInput>
    /**
     * Choose, which HistorialTicket to update.
     */
    where: HistorialTicketWhereUniqueInput
  }

  /**
   * HistorialTicket updateMany
   */
  export type HistorialTicketUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HistorialTickets.
     */
    data: XOR<HistorialTicketUpdateManyMutationInput, HistorialTicketUncheckedUpdateManyInput>
    /**
     * Filter which HistorialTickets to update
     */
    where?: HistorialTicketWhereInput
    /**
     * Limit how many HistorialTickets to update.
     */
    limit?: number
  }

  /**
   * HistorialTicket updateManyAndReturn
   */
  export type HistorialTicketUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * The data used to update HistorialTickets.
     */
    data: XOR<HistorialTicketUpdateManyMutationInput, HistorialTicketUncheckedUpdateManyInput>
    /**
     * Filter which HistorialTickets to update
     */
    where?: HistorialTicketWhereInput
    /**
     * Limit how many HistorialTickets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * HistorialTicket upsert
   */
  export type HistorialTicketUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketInclude<ExtArgs> | null
    /**
     * The filter to search for the HistorialTicket to update in case it exists.
     */
    where: HistorialTicketWhereUniqueInput
    /**
     * In case the HistorialTicket found by the `where` argument doesn't exist, create a new HistorialTicket with this data.
     */
    create: XOR<HistorialTicketCreateInput, HistorialTicketUncheckedCreateInput>
    /**
     * In case the HistorialTicket was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HistorialTicketUpdateInput, HistorialTicketUncheckedUpdateInput>
  }

  /**
   * HistorialTicket delete
   */
  export type HistorialTicketDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketInclude<ExtArgs> | null
    /**
     * Filter which HistorialTicket to delete.
     */
    where: HistorialTicketWhereUniqueInput
  }

  /**
   * HistorialTicket deleteMany
   */
  export type HistorialTicketDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialTickets to delete
     */
    where?: HistorialTicketWhereInput
    /**
     * Limit how many HistorialTickets to delete.
     */
    limit?: number
  }

  /**
   * HistorialTicket without action
   */
  export type HistorialTicketDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialTicket
     */
    select?: HistorialTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialTicket
     */
    omit?: HistorialTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialTicketInclude<ExtArgs> | null
  }


  /**
   * Model ComentarioTicket
   */

  export type AggregateComentarioTicket = {
    _count: ComentarioTicketCountAggregateOutputType | null
    _avg: ComentarioTicketAvgAggregateOutputType | null
    _sum: ComentarioTicketSumAggregateOutputType | null
    _min: ComentarioTicketMinAggregateOutputType | null
    _max: ComentarioTicketMaxAggregateOutputType | null
  }

  export type ComentarioTicketAvgAggregateOutputType = {
    id: number | null
    ticketId: number | null
    usuarioId: number | null
  }

  export type ComentarioTicketSumAggregateOutputType = {
    id: number | null
    ticketId: number | null
    usuarioId: number | null
  }

  export type ComentarioTicketMinAggregateOutputType = {
    id: number | null
    ticketId: number | null
    usuarioId: number | null
    comentario: string | null
    esInterno: boolean | null
    esSolucion: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ComentarioTicketMaxAggregateOutputType = {
    id: number | null
    ticketId: number | null
    usuarioId: number | null
    comentario: string | null
    esInterno: boolean | null
    esSolucion: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ComentarioTicketCountAggregateOutputType = {
    id: number
    ticketId: number
    usuarioId: number
    comentario: number
    esInterno: number
    esSolucion: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ComentarioTicketAvgAggregateInputType = {
    id?: true
    ticketId?: true
    usuarioId?: true
  }

  export type ComentarioTicketSumAggregateInputType = {
    id?: true
    ticketId?: true
    usuarioId?: true
  }

  export type ComentarioTicketMinAggregateInputType = {
    id?: true
    ticketId?: true
    usuarioId?: true
    comentario?: true
    esInterno?: true
    esSolucion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ComentarioTicketMaxAggregateInputType = {
    id?: true
    ticketId?: true
    usuarioId?: true
    comentario?: true
    esInterno?: true
    esSolucion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ComentarioTicketCountAggregateInputType = {
    id?: true
    ticketId?: true
    usuarioId?: true
    comentario?: true
    esInterno?: true
    esSolucion?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ComentarioTicketAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComentarioTicket to aggregate.
     */
    where?: ComentarioTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComentarioTickets to fetch.
     */
    orderBy?: ComentarioTicketOrderByWithRelationInput | ComentarioTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ComentarioTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComentarioTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComentarioTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ComentarioTickets
    **/
    _count?: true | ComentarioTicketCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComentarioTicketAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComentarioTicketSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComentarioTicketMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComentarioTicketMaxAggregateInputType
  }

  export type GetComentarioTicketAggregateType<T extends ComentarioTicketAggregateArgs> = {
        [P in keyof T & keyof AggregateComentarioTicket]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComentarioTicket[P]>
      : GetScalarType<T[P], AggregateComentarioTicket[P]>
  }




  export type ComentarioTicketGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComentarioTicketWhereInput
    orderBy?: ComentarioTicketOrderByWithAggregationInput | ComentarioTicketOrderByWithAggregationInput[]
    by: ComentarioTicketScalarFieldEnum[] | ComentarioTicketScalarFieldEnum
    having?: ComentarioTicketScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComentarioTicketCountAggregateInputType | true
    _avg?: ComentarioTicketAvgAggregateInputType
    _sum?: ComentarioTicketSumAggregateInputType
    _min?: ComentarioTicketMinAggregateInputType
    _max?: ComentarioTicketMaxAggregateInputType
  }

  export type ComentarioTicketGroupByOutputType = {
    id: number
    ticketId: number
    usuarioId: number
    comentario: string
    esInterno: boolean
    esSolucion: boolean
    createdAt: Date
    updatedAt: Date | null
    _count: ComentarioTicketCountAggregateOutputType | null
    _avg: ComentarioTicketAvgAggregateOutputType | null
    _sum: ComentarioTicketSumAggregateOutputType | null
    _min: ComentarioTicketMinAggregateOutputType | null
    _max: ComentarioTicketMaxAggregateOutputType | null
  }

  type GetComentarioTicketGroupByPayload<T extends ComentarioTicketGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComentarioTicketGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComentarioTicketGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComentarioTicketGroupByOutputType[P]>
            : GetScalarType<T[P], ComentarioTicketGroupByOutputType[P]>
        }
      >
    >


  export type ComentarioTicketSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    usuarioId?: boolean
    comentario?: boolean
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    archivos?: boolean | ComentarioTicket$archivosArgs<ExtArgs>
    _count?: boolean | ComentarioTicketCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comentarioTicket"]>

  export type ComentarioTicketSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    usuarioId?: boolean
    comentario?: boolean
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comentarioTicket"]>

  export type ComentarioTicketSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    usuarioId?: boolean
    comentario?: boolean
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comentarioTicket"]>

  export type ComentarioTicketSelectScalar = {
    id?: boolean
    ticketId?: boolean
    usuarioId?: boolean
    comentario?: boolean
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ComentarioTicketOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ticketId" | "usuarioId" | "comentario" | "esInterno" | "esSolucion" | "createdAt" | "updatedAt", ExtArgs["result"]["comentarioTicket"]>
  export type ComentarioTicketInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    archivos?: boolean | ComentarioTicket$archivosArgs<ExtArgs>
    _count?: boolean | ComentarioTicketCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ComentarioTicketIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type ComentarioTicketIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $ComentarioTicketPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ComentarioTicket"
    objects: {
      ticket: Prisma.$TicketPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      archivos: Prisma.$ArchivoAdjuntoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ticketId: number
      usuarioId: number
      comentario: string
      esInterno: boolean
      esSolucion: boolean
      createdAt: Date
      updatedAt: Date | null
    }, ExtArgs["result"]["comentarioTicket"]>
    composites: {}
  }

  type ComentarioTicketGetPayload<S extends boolean | null | undefined | ComentarioTicketDefaultArgs> = $Result.GetResult<Prisma.$ComentarioTicketPayload, S>

  type ComentarioTicketCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ComentarioTicketFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ComentarioTicketCountAggregateInputType | true
    }

  export interface ComentarioTicketDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ComentarioTicket'], meta: { name: 'ComentarioTicket' } }
    /**
     * Find zero or one ComentarioTicket that matches the filter.
     * @param {ComentarioTicketFindUniqueArgs} args - Arguments to find a ComentarioTicket
     * @example
     * // Get one ComentarioTicket
     * const comentarioTicket = await prisma.comentarioTicket.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ComentarioTicketFindUniqueArgs>(args: SelectSubset<T, ComentarioTicketFindUniqueArgs<ExtArgs>>): Prisma__ComentarioTicketClient<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ComentarioTicket that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ComentarioTicketFindUniqueOrThrowArgs} args - Arguments to find a ComentarioTicket
     * @example
     * // Get one ComentarioTicket
     * const comentarioTicket = await prisma.comentarioTicket.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ComentarioTicketFindUniqueOrThrowArgs>(args: SelectSubset<T, ComentarioTicketFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ComentarioTicketClient<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ComentarioTicket that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioTicketFindFirstArgs} args - Arguments to find a ComentarioTicket
     * @example
     * // Get one ComentarioTicket
     * const comentarioTicket = await prisma.comentarioTicket.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ComentarioTicketFindFirstArgs>(args?: SelectSubset<T, ComentarioTicketFindFirstArgs<ExtArgs>>): Prisma__ComentarioTicketClient<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ComentarioTicket that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioTicketFindFirstOrThrowArgs} args - Arguments to find a ComentarioTicket
     * @example
     * // Get one ComentarioTicket
     * const comentarioTicket = await prisma.comentarioTicket.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ComentarioTicketFindFirstOrThrowArgs>(args?: SelectSubset<T, ComentarioTicketFindFirstOrThrowArgs<ExtArgs>>): Prisma__ComentarioTicketClient<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ComentarioTickets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioTicketFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ComentarioTickets
     * const comentarioTickets = await prisma.comentarioTicket.findMany()
     * 
     * // Get first 10 ComentarioTickets
     * const comentarioTickets = await prisma.comentarioTicket.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const comentarioTicketWithIdOnly = await prisma.comentarioTicket.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ComentarioTicketFindManyArgs>(args?: SelectSubset<T, ComentarioTicketFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ComentarioTicket.
     * @param {ComentarioTicketCreateArgs} args - Arguments to create a ComentarioTicket.
     * @example
     * // Create one ComentarioTicket
     * const ComentarioTicket = await prisma.comentarioTicket.create({
     *   data: {
     *     // ... data to create a ComentarioTicket
     *   }
     * })
     * 
     */
    create<T extends ComentarioTicketCreateArgs>(args: SelectSubset<T, ComentarioTicketCreateArgs<ExtArgs>>): Prisma__ComentarioTicketClient<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ComentarioTickets.
     * @param {ComentarioTicketCreateManyArgs} args - Arguments to create many ComentarioTickets.
     * @example
     * // Create many ComentarioTickets
     * const comentarioTicket = await prisma.comentarioTicket.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ComentarioTicketCreateManyArgs>(args?: SelectSubset<T, ComentarioTicketCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ComentarioTickets and returns the data saved in the database.
     * @param {ComentarioTicketCreateManyAndReturnArgs} args - Arguments to create many ComentarioTickets.
     * @example
     * // Create many ComentarioTickets
     * const comentarioTicket = await prisma.comentarioTicket.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ComentarioTickets and only return the `id`
     * const comentarioTicketWithIdOnly = await prisma.comentarioTicket.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ComentarioTicketCreateManyAndReturnArgs>(args?: SelectSubset<T, ComentarioTicketCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ComentarioTicket.
     * @param {ComentarioTicketDeleteArgs} args - Arguments to delete one ComentarioTicket.
     * @example
     * // Delete one ComentarioTicket
     * const ComentarioTicket = await prisma.comentarioTicket.delete({
     *   where: {
     *     // ... filter to delete one ComentarioTicket
     *   }
     * })
     * 
     */
    delete<T extends ComentarioTicketDeleteArgs>(args: SelectSubset<T, ComentarioTicketDeleteArgs<ExtArgs>>): Prisma__ComentarioTicketClient<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ComentarioTicket.
     * @param {ComentarioTicketUpdateArgs} args - Arguments to update one ComentarioTicket.
     * @example
     * // Update one ComentarioTicket
     * const comentarioTicket = await prisma.comentarioTicket.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ComentarioTicketUpdateArgs>(args: SelectSubset<T, ComentarioTicketUpdateArgs<ExtArgs>>): Prisma__ComentarioTicketClient<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ComentarioTickets.
     * @param {ComentarioTicketDeleteManyArgs} args - Arguments to filter ComentarioTickets to delete.
     * @example
     * // Delete a few ComentarioTickets
     * const { count } = await prisma.comentarioTicket.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ComentarioTicketDeleteManyArgs>(args?: SelectSubset<T, ComentarioTicketDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ComentarioTickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioTicketUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ComentarioTickets
     * const comentarioTicket = await prisma.comentarioTicket.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ComentarioTicketUpdateManyArgs>(args: SelectSubset<T, ComentarioTicketUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ComentarioTickets and returns the data updated in the database.
     * @param {ComentarioTicketUpdateManyAndReturnArgs} args - Arguments to update many ComentarioTickets.
     * @example
     * // Update many ComentarioTickets
     * const comentarioTicket = await prisma.comentarioTicket.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ComentarioTickets and only return the `id`
     * const comentarioTicketWithIdOnly = await prisma.comentarioTicket.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ComentarioTicketUpdateManyAndReturnArgs>(args: SelectSubset<T, ComentarioTicketUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ComentarioTicket.
     * @param {ComentarioTicketUpsertArgs} args - Arguments to update or create a ComentarioTicket.
     * @example
     * // Update or create a ComentarioTicket
     * const comentarioTicket = await prisma.comentarioTicket.upsert({
     *   create: {
     *     // ... data to create a ComentarioTicket
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ComentarioTicket we want to update
     *   }
     * })
     */
    upsert<T extends ComentarioTicketUpsertArgs>(args: SelectSubset<T, ComentarioTicketUpsertArgs<ExtArgs>>): Prisma__ComentarioTicketClient<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ComentarioTickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioTicketCountArgs} args - Arguments to filter ComentarioTickets to count.
     * @example
     * // Count the number of ComentarioTickets
     * const count = await prisma.comentarioTicket.count({
     *   where: {
     *     // ... the filter for the ComentarioTickets we want to count
     *   }
     * })
    **/
    count<T extends ComentarioTicketCountArgs>(
      args?: Subset<T, ComentarioTicketCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComentarioTicketCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ComentarioTicket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioTicketAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComentarioTicketAggregateArgs>(args: Subset<T, ComentarioTicketAggregateArgs>): Prisma.PrismaPromise<GetComentarioTicketAggregateType<T>>

    /**
     * Group by ComentarioTicket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioTicketGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ComentarioTicketGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ComentarioTicketGroupByArgs['orderBy'] }
        : { orderBy?: ComentarioTicketGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ComentarioTicketGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComentarioTicketGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ComentarioTicket model
   */
  readonly fields: ComentarioTicketFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ComentarioTicket.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ComentarioTicketClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ticket<T extends TicketDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TicketDefaultArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    archivos<T extends ComentarioTicket$archivosArgs<ExtArgs> = {}>(args?: Subset<T, ComentarioTicket$archivosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ComentarioTicket model
   */
  interface ComentarioTicketFieldRefs {
    readonly id: FieldRef<"ComentarioTicket", 'Int'>
    readonly ticketId: FieldRef<"ComentarioTicket", 'Int'>
    readonly usuarioId: FieldRef<"ComentarioTicket", 'Int'>
    readonly comentario: FieldRef<"ComentarioTicket", 'String'>
    readonly esInterno: FieldRef<"ComentarioTicket", 'Boolean'>
    readonly esSolucion: FieldRef<"ComentarioTicket", 'Boolean'>
    readonly createdAt: FieldRef<"ComentarioTicket", 'DateTime'>
    readonly updatedAt: FieldRef<"ComentarioTicket", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ComentarioTicket findUnique
   */
  export type ComentarioTicketFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketInclude<ExtArgs> | null
    /**
     * Filter, which ComentarioTicket to fetch.
     */
    where: ComentarioTicketWhereUniqueInput
  }

  /**
   * ComentarioTicket findUniqueOrThrow
   */
  export type ComentarioTicketFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketInclude<ExtArgs> | null
    /**
     * Filter, which ComentarioTicket to fetch.
     */
    where: ComentarioTicketWhereUniqueInput
  }

  /**
   * ComentarioTicket findFirst
   */
  export type ComentarioTicketFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketInclude<ExtArgs> | null
    /**
     * Filter, which ComentarioTicket to fetch.
     */
    where?: ComentarioTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComentarioTickets to fetch.
     */
    orderBy?: ComentarioTicketOrderByWithRelationInput | ComentarioTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComentarioTickets.
     */
    cursor?: ComentarioTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComentarioTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComentarioTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComentarioTickets.
     */
    distinct?: ComentarioTicketScalarFieldEnum | ComentarioTicketScalarFieldEnum[]
  }

  /**
   * ComentarioTicket findFirstOrThrow
   */
  export type ComentarioTicketFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketInclude<ExtArgs> | null
    /**
     * Filter, which ComentarioTicket to fetch.
     */
    where?: ComentarioTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComentarioTickets to fetch.
     */
    orderBy?: ComentarioTicketOrderByWithRelationInput | ComentarioTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComentarioTickets.
     */
    cursor?: ComentarioTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComentarioTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComentarioTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComentarioTickets.
     */
    distinct?: ComentarioTicketScalarFieldEnum | ComentarioTicketScalarFieldEnum[]
  }

  /**
   * ComentarioTicket findMany
   */
  export type ComentarioTicketFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketInclude<ExtArgs> | null
    /**
     * Filter, which ComentarioTickets to fetch.
     */
    where?: ComentarioTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComentarioTickets to fetch.
     */
    orderBy?: ComentarioTicketOrderByWithRelationInput | ComentarioTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ComentarioTickets.
     */
    cursor?: ComentarioTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComentarioTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComentarioTickets.
     */
    skip?: number
    distinct?: ComentarioTicketScalarFieldEnum | ComentarioTicketScalarFieldEnum[]
  }

  /**
   * ComentarioTicket create
   */
  export type ComentarioTicketCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketInclude<ExtArgs> | null
    /**
     * The data needed to create a ComentarioTicket.
     */
    data: XOR<ComentarioTicketCreateInput, ComentarioTicketUncheckedCreateInput>
  }

  /**
   * ComentarioTicket createMany
   */
  export type ComentarioTicketCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ComentarioTickets.
     */
    data: ComentarioTicketCreateManyInput | ComentarioTicketCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ComentarioTicket createManyAndReturn
   */
  export type ComentarioTicketCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * The data used to create many ComentarioTickets.
     */
    data: ComentarioTicketCreateManyInput | ComentarioTicketCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ComentarioTicket update
   */
  export type ComentarioTicketUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketInclude<ExtArgs> | null
    /**
     * The data needed to update a ComentarioTicket.
     */
    data: XOR<ComentarioTicketUpdateInput, ComentarioTicketUncheckedUpdateInput>
    /**
     * Choose, which ComentarioTicket to update.
     */
    where: ComentarioTicketWhereUniqueInput
  }

  /**
   * ComentarioTicket updateMany
   */
  export type ComentarioTicketUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ComentarioTickets.
     */
    data: XOR<ComentarioTicketUpdateManyMutationInput, ComentarioTicketUncheckedUpdateManyInput>
    /**
     * Filter which ComentarioTickets to update
     */
    where?: ComentarioTicketWhereInput
    /**
     * Limit how many ComentarioTickets to update.
     */
    limit?: number
  }

  /**
   * ComentarioTicket updateManyAndReturn
   */
  export type ComentarioTicketUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * The data used to update ComentarioTickets.
     */
    data: XOR<ComentarioTicketUpdateManyMutationInput, ComentarioTicketUncheckedUpdateManyInput>
    /**
     * Filter which ComentarioTickets to update
     */
    where?: ComentarioTicketWhereInput
    /**
     * Limit how many ComentarioTickets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ComentarioTicket upsert
   */
  export type ComentarioTicketUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketInclude<ExtArgs> | null
    /**
     * The filter to search for the ComentarioTicket to update in case it exists.
     */
    where: ComentarioTicketWhereUniqueInput
    /**
     * In case the ComentarioTicket found by the `where` argument doesn't exist, create a new ComentarioTicket with this data.
     */
    create: XOR<ComentarioTicketCreateInput, ComentarioTicketUncheckedCreateInput>
    /**
     * In case the ComentarioTicket was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ComentarioTicketUpdateInput, ComentarioTicketUncheckedUpdateInput>
  }

  /**
   * ComentarioTicket delete
   */
  export type ComentarioTicketDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketInclude<ExtArgs> | null
    /**
     * Filter which ComentarioTicket to delete.
     */
    where: ComentarioTicketWhereUniqueInput
  }

  /**
   * ComentarioTicket deleteMany
   */
  export type ComentarioTicketDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComentarioTickets to delete
     */
    where?: ComentarioTicketWhereInput
    /**
     * Limit how many ComentarioTickets to delete.
     */
    limit?: number
  }

  /**
   * ComentarioTicket.archivos
   */
  export type ComentarioTicket$archivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoInclude<ExtArgs> | null
    where?: ArchivoAdjuntoWhereInput
    orderBy?: ArchivoAdjuntoOrderByWithRelationInput | ArchivoAdjuntoOrderByWithRelationInput[]
    cursor?: ArchivoAdjuntoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArchivoAdjuntoScalarFieldEnum | ArchivoAdjuntoScalarFieldEnum[]
  }

  /**
   * ComentarioTicket without action
   */
  export type ComentarioTicketDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketInclude<ExtArgs> | null
  }


  /**
   * Model ArchivoAdjunto
   */

  export type AggregateArchivoAdjunto = {
    _count: ArchivoAdjuntoCountAggregateOutputType | null
    _avg: ArchivoAdjuntoAvgAggregateOutputType | null
    _sum: ArchivoAdjuntoSumAggregateOutputType | null
    _min: ArchivoAdjuntoMinAggregateOutputType | null
    _max: ArchivoAdjuntoMaxAggregateOutputType | null
  }

  export type ArchivoAdjuntoAvgAggregateOutputType = {
    id: number | null
    ticketId: number | null
    comentarioId: number | null
    tamanoArchivo: number | null
    subidoPor: number | null
  }

  export type ArchivoAdjuntoSumAggregateOutputType = {
    id: number | null
    ticketId: number | null
    comentarioId: number | null
    tamanoArchivo: number | null
    subidoPor: number | null
  }

  export type ArchivoAdjuntoMinAggregateOutputType = {
    id: number | null
    ticketId: number | null
    comentarioId: number | null
    nombreOriginal: string | null
    nombreAlmacenado: string | null
    rutaArchivo: string | null
    tamanoArchivo: number | null
    tipoMime: string | null
    subidoPor: number | null
    createdAt: Date | null
  }

  export type ArchivoAdjuntoMaxAggregateOutputType = {
    id: number | null
    ticketId: number | null
    comentarioId: number | null
    nombreOriginal: string | null
    nombreAlmacenado: string | null
    rutaArchivo: string | null
    tamanoArchivo: number | null
    tipoMime: string | null
    subidoPor: number | null
    createdAt: Date | null
  }

  export type ArchivoAdjuntoCountAggregateOutputType = {
    id: number
    ticketId: number
    comentarioId: number
    nombreOriginal: number
    nombreAlmacenado: number
    rutaArchivo: number
    tamanoArchivo: number
    tipoMime: number
    subidoPor: number
    createdAt: number
    _all: number
  }


  export type ArchivoAdjuntoAvgAggregateInputType = {
    id?: true
    ticketId?: true
    comentarioId?: true
    tamanoArchivo?: true
    subidoPor?: true
  }

  export type ArchivoAdjuntoSumAggregateInputType = {
    id?: true
    ticketId?: true
    comentarioId?: true
    tamanoArchivo?: true
    subidoPor?: true
  }

  export type ArchivoAdjuntoMinAggregateInputType = {
    id?: true
    ticketId?: true
    comentarioId?: true
    nombreOriginal?: true
    nombreAlmacenado?: true
    rutaArchivo?: true
    tamanoArchivo?: true
    tipoMime?: true
    subidoPor?: true
    createdAt?: true
  }

  export type ArchivoAdjuntoMaxAggregateInputType = {
    id?: true
    ticketId?: true
    comentarioId?: true
    nombreOriginal?: true
    nombreAlmacenado?: true
    rutaArchivo?: true
    tamanoArchivo?: true
    tipoMime?: true
    subidoPor?: true
    createdAt?: true
  }

  export type ArchivoAdjuntoCountAggregateInputType = {
    id?: true
    ticketId?: true
    comentarioId?: true
    nombreOriginal?: true
    nombreAlmacenado?: true
    rutaArchivo?: true
    tamanoArchivo?: true
    tipoMime?: true
    subidoPor?: true
    createdAt?: true
    _all?: true
  }

  export type ArchivoAdjuntoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArchivoAdjunto to aggregate.
     */
    where?: ArchivoAdjuntoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArchivoAdjuntos to fetch.
     */
    orderBy?: ArchivoAdjuntoOrderByWithRelationInput | ArchivoAdjuntoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ArchivoAdjuntoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArchivoAdjuntos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArchivoAdjuntos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ArchivoAdjuntos
    **/
    _count?: true | ArchivoAdjuntoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ArchivoAdjuntoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ArchivoAdjuntoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ArchivoAdjuntoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ArchivoAdjuntoMaxAggregateInputType
  }

  export type GetArchivoAdjuntoAggregateType<T extends ArchivoAdjuntoAggregateArgs> = {
        [P in keyof T & keyof AggregateArchivoAdjunto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArchivoAdjunto[P]>
      : GetScalarType<T[P], AggregateArchivoAdjunto[P]>
  }




  export type ArchivoAdjuntoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArchivoAdjuntoWhereInput
    orderBy?: ArchivoAdjuntoOrderByWithAggregationInput | ArchivoAdjuntoOrderByWithAggregationInput[]
    by: ArchivoAdjuntoScalarFieldEnum[] | ArchivoAdjuntoScalarFieldEnum
    having?: ArchivoAdjuntoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ArchivoAdjuntoCountAggregateInputType | true
    _avg?: ArchivoAdjuntoAvgAggregateInputType
    _sum?: ArchivoAdjuntoSumAggregateInputType
    _min?: ArchivoAdjuntoMinAggregateInputType
    _max?: ArchivoAdjuntoMaxAggregateInputType
  }

  export type ArchivoAdjuntoGroupByOutputType = {
    id: number
    ticketId: number
    comentarioId: number | null
    nombreOriginal: string
    nombreAlmacenado: string
    rutaArchivo: string
    tamanoArchivo: number
    tipoMime: string
    subidoPor: number
    createdAt: Date
    _count: ArchivoAdjuntoCountAggregateOutputType | null
    _avg: ArchivoAdjuntoAvgAggregateOutputType | null
    _sum: ArchivoAdjuntoSumAggregateOutputType | null
    _min: ArchivoAdjuntoMinAggregateOutputType | null
    _max: ArchivoAdjuntoMaxAggregateOutputType | null
  }

  type GetArchivoAdjuntoGroupByPayload<T extends ArchivoAdjuntoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ArchivoAdjuntoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ArchivoAdjuntoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ArchivoAdjuntoGroupByOutputType[P]>
            : GetScalarType<T[P], ArchivoAdjuntoGroupByOutputType[P]>
        }
      >
    >


  export type ArchivoAdjuntoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    comentarioId?: boolean
    nombreOriginal?: boolean
    nombreAlmacenado?: boolean
    rutaArchivo?: boolean
    tamanoArchivo?: boolean
    tipoMime?: boolean
    subidoPor?: boolean
    createdAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    comentario?: boolean | ArchivoAdjunto$comentarioArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["archivoAdjunto"]>

  export type ArchivoAdjuntoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    comentarioId?: boolean
    nombreOriginal?: boolean
    nombreAlmacenado?: boolean
    rutaArchivo?: boolean
    tamanoArchivo?: boolean
    tipoMime?: boolean
    subidoPor?: boolean
    createdAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    comentario?: boolean | ArchivoAdjunto$comentarioArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["archivoAdjunto"]>

  export type ArchivoAdjuntoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    comentarioId?: boolean
    nombreOriginal?: boolean
    nombreAlmacenado?: boolean
    rutaArchivo?: boolean
    tamanoArchivo?: boolean
    tipoMime?: boolean
    subidoPor?: boolean
    createdAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    comentario?: boolean | ArchivoAdjunto$comentarioArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["archivoAdjunto"]>

  export type ArchivoAdjuntoSelectScalar = {
    id?: boolean
    ticketId?: boolean
    comentarioId?: boolean
    nombreOriginal?: boolean
    nombreAlmacenado?: boolean
    rutaArchivo?: boolean
    tamanoArchivo?: boolean
    tipoMime?: boolean
    subidoPor?: boolean
    createdAt?: boolean
  }

  export type ArchivoAdjuntoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ticketId" | "comentarioId" | "nombreOriginal" | "nombreAlmacenado" | "rutaArchivo" | "tamanoArchivo" | "tipoMime" | "subidoPor" | "createdAt", ExtArgs["result"]["archivoAdjunto"]>
  export type ArchivoAdjuntoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    comentario?: boolean | ArchivoAdjunto$comentarioArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type ArchivoAdjuntoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    comentario?: boolean | ArchivoAdjunto$comentarioArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type ArchivoAdjuntoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    comentario?: boolean | ArchivoAdjunto$comentarioArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $ArchivoAdjuntoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ArchivoAdjunto"
    objects: {
      ticket: Prisma.$TicketPayload<ExtArgs>
      comentario: Prisma.$ComentarioTicketPayload<ExtArgs> | null
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ticketId: number
      comentarioId: number | null
      nombreOriginal: string
      nombreAlmacenado: string
      rutaArchivo: string
      tamanoArchivo: number
      tipoMime: string
      subidoPor: number
      createdAt: Date
    }, ExtArgs["result"]["archivoAdjunto"]>
    composites: {}
  }

  type ArchivoAdjuntoGetPayload<S extends boolean | null | undefined | ArchivoAdjuntoDefaultArgs> = $Result.GetResult<Prisma.$ArchivoAdjuntoPayload, S>

  type ArchivoAdjuntoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ArchivoAdjuntoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ArchivoAdjuntoCountAggregateInputType | true
    }

  export interface ArchivoAdjuntoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ArchivoAdjunto'], meta: { name: 'ArchivoAdjunto' } }
    /**
     * Find zero or one ArchivoAdjunto that matches the filter.
     * @param {ArchivoAdjuntoFindUniqueArgs} args - Arguments to find a ArchivoAdjunto
     * @example
     * // Get one ArchivoAdjunto
     * const archivoAdjunto = await prisma.archivoAdjunto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ArchivoAdjuntoFindUniqueArgs>(args: SelectSubset<T, ArchivoAdjuntoFindUniqueArgs<ExtArgs>>): Prisma__ArchivoAdjuntoClient<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ArchivoAdjunto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ArchivoAdjuntoFindUniqueOrThrowArgs} args - Arguments to find a ArchivoAdjunto
     * @example
     * // Get one ArchivoAdjunto
     * const archivoAdjunto = await prisma.archivoAdjunto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ArchivoAdjuntoFindUniqueOrThrowArgs>(args: SelectSubset<T, ArchivoAdjuntoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ArchivoAdjuntoClient<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ArchivoAdjunto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoAdjuntoFindFirstArgs} args - Arguments to find a ArchivoAdjunto
     * @example
     * // Get one ArchivoAdjunto
     * const archivoAdjunto = await prisma.archivoAdjunto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ArchivoAdjuntoFindFirstArgs>(args?: SelectSubset<T, ArchivoAdjuntoFindFirstArgs<ExtArgs>>): Prisma__ArchivoAdjuntoClient<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ArchivoAdjunto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoAdjuntoFindFirstOrThrowArgs} args - Arguments to find a ArchivoAdjunto
     * @example
     * // Get one ArchivoAdjunto
     * const archivoAdjunto = await prisma.archivoAdjunto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ArchivoAdjuntoFindFirstOrThrowArgs>(args?: SelectSubset<T, ArchivoAdjuntoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ArchivoAdjuntoClient<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ArchivoAdjuntos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoAdjuntoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ArchivoAdjuntos
     * const archivoAdjuntos = await prisma.archivoAdjunto.findMany()
     * 
     * // Get first 10 ArchivoAdjuntos
     * const archivoAdjuntos = await prisma.archivoAdjunto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const archivoAdjuntoWithIdOnly = await prisma.archivoAdjunto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ArchivoAdjuntoFindManyArgs>(args?: SelectSubset<T, ArchivoAdjuntoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ArchivoAdjunto.
     * @param {ArchivoAdjuntoCreateArgs} args - Arguments to create a ArchivoAdjunto.
     * @example
     * // Create one ArchivoAdjunto
     * const ArchivoAdjunto = await prisma.archivoAdjunto.create({
     *   data: {
     *     // ... data to create a ArchivoAdjunto
     *   }
     * })
     * 
     */
    create<T extends ArchivoAdjuntoCreateArgs>(args: SelectSubset<T, ArchivoAdjuntoCreateArgs<ExtArgs>>): Prisma__ArchivoAdjuntoClient<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ArchivoAdjuntos.
     * @param {ArchivoAdjuntoCreateManyArgs} args - Arguments to create many ArchivoAdjuntos.
     * @example
     * // Create many ArchivoAdjuntos
     * const archivoAdjunto = await prisma.archivoAdjunto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ArchivoAdjuntoCreateManyArgs>(args?: SelectSubset<T, ArchivoAdjuntoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ArchivoAdjuntos and returns the data saved in the database.
     * @param {ArchivoAdjuntoCreateManyAndReturnArgs} args - Arguments to create many ArchivoAdjuntos.
     * @example
     * // Create many ArchivoAdjuntos
     * const archivoAdjunto = await prisma.archivoAdjunto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ArchivoAdjuntos and only return the `id`
     * const archivoAdjuntoWithIdOnly = await prisma.archivoAdjunto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ArchivoAdjuntoCreateManyAndReturnArgs>(args?: SelectSubset<T, ArchivoAdjuntoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ArchivoAdjunto.
     * @param {ArchivoAdjuntoDeleteArgs} args - Arguments to delete one ArchivoAdjunto.
     * @example
     * // Delete one ArchivoAdjunto
     * const ArchivoAdjunto = await prisma.archivoAdjunto.delete({
     *   where: {
     *     // ... filter to delete one ArchivoAdjunto
     *   }
     * })
     * 
     */
    delete<T extends ArchivoAdjuntoDeleteArgs>(args: SelectSubset<T, ArchivoAdjuntoDeleteArgs<ExtArgs>>): Prisma__ArchivoAdjuntoClient<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ArchivoAdjunto.
     * @param {ArchivoAdjuntoUpdateArgs} args - Arguments to update one ArchivoAdjunto.
     * @example
     * // Update one ArchivoAdjunto
     * const archivoAdjunto = await prisma.archivoAdjunto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ArchivoAdjuntoUpdateArgs>(args: SelectSubset<T, ArchivoAdjuntoUpdateArgs<ExtArgs>>): Prisma__ArchivoAdjuntoClient<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ArchivoAdjuntos.
     * @param {ArchivoAdjuntoDeleteManyArgs} args - Arguments to filter ArchivoAdjuntos to delete.
     * @example
     * // Delete a few ArchivoAdjuntos
     * const { count } = await prisma.archivoAdjunto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ArchivoAdjuntoDeleteManyArgs>(args?: SelectSubset<T, ArchivoAdjuntoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ArchivoAdjuntos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoAdjuntoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ArchivoAdjuntos
     * const archivoAdjunto = await prisma.archivoAdjunto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ArchivoAdjuntoUpdateManyArgs>(args: SelectSubset<T, ArchivoAdjuntoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ArchivoAdjuntos and returns the data updated in the database.
     * @param {ArchivoAdjuntoUpdateManyAndReturnArgs} args - Arguments to update many ArchivoAdjuntos.
     * @example
     * // Update many ArchivoAdjuntos
     * const archivoAdjunto = await prisma.archivoAdjunto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ArchivoAdjuntos and only return the `id`
     * const archivoAdjuntoWithIdOnly = await prisma.archivoAdjunto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ArchivoAdjuntoUpdateManyAndReturnArgs>(args: SelectSubset<T, ArchivoAdjuntoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ArchivoAdjunto.
     * @param {ArchivoAdjuntoUpsertArgs} args - Arguments to update or create a ArchivoAdjunto.
     * @example
     * // Update or create a ArchivoAdjunto
     * const archivoAdjunto = await prisma.archivoAdjunto.upsert({
     *   create: {
     *     // ... data to create a ArchivoAdjunto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ArchivoAdjunto we want to update
     *   }
     * })
     */
    upsert<T extends ArchivoAdjuntoUpsertArgs>(args: SelectSubset<T, ArchivoAdjuntoUpsertArgs<ExtArgs>>): Prisma__ArchivoAdjuntoClient<$Result.GetResult<Prisma.$ArchivoAdjuntoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ArchivoAdjuntos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoAdjuntoCountArgs} args - Arguments to filter ArchivoAdjuntos to count.
     * @example
     * // Count the number of ArchivoAdjuntos
     * const count = await prisma.archivoAdjunto.count({
     *   where: {
     *     // ... the filter for the ArchivoAdjuntos we want to count
     *   }
     * })
    **/
    count<T extends ArchivoAdjuntoCountArgs>(
      args?: Subset<T, ArchivoAdjuntoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ArchivoAdjuntoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ArchivoAdjunto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoAdjuntoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ArchivoAdjuntoAggregateArgs>(args: Subset<T, ArchivoAdjuntoAggregateArgs>): Prisma.PrismaPromise<GetArchivoAdjuntoAggregateType<T>>

    /**
     * Group by ArchivoAdjunto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoAdjuntoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ArchivoAdjuntoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ArchivoAdjuntoGroupByArgs['orderBy'] }
        : { orderBy?: ArchivoAdjuntoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ArchivoAdjuntoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArchivoAdjuntoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ArchivoAdjunto model
   */
  readonly fields: ArchivoAdjuntoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ArchivoAdjunto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ArchivoAdjuntoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ticket<T extends TicketDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TicketDefaultArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    comentario<T extends ArchivoAdjunto$comentarioArgs<ExtArgs> = {}>(args?: Subset<T, ArchivoAdjunto$comentarioArgs<ExtArgs>>): Prisma__ComentarioTicketClient<$Result.GetResult<Prisma.$ComentarioTicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ArchivoAdjunto model
   */
  interface ArchivoAdjuntoFieldRefs {
    readonly id: FieldRef<"ArchivoAdjunto", 'Int'>
    readonly ticketId: FieldRef<"ArchivoAdjunto", 'Int'>
    readonly comentarioId: FieldRef<"ArchivoAdjunto", 'Int'>
    readonly nombreOriginal: FieldRef<"ArchivoAdjunto", 'String'>
    readonly nombreAlmacenado: FieldRef<"ArchivoAdjunto", 'String'>
    readonly rutaArchivo: FieldRef<"ArchivoAdjunto", 'String'>
    readonly tamanoArchivo: FieldRef<"ArchivoAdjunto", 'Int'>
    readonly tipoMime: FieldRef<"ArchivoAdjunto", 'String'>
    readonly subidoPor: FieldRef<"ArchivoAdjunto", 'Int'>
    readonly createdAt: FieldRef<"ArchivoAdjunto", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ArchivoAdjunto findUnique
   */
  export type ArchivoAdjuntoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoInclude<ExtArgs> | null
    /**
     * Filter, which ArchivoAdjunto to fetch.
     */
    where: ArchivoAdjuntoWhereUniqueInput
  }

  /**
   * ArchivoAdjunto findUniqueOrThrow
   */
  export type ArchivoAdjuntoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoInclude<ExtArgs> | null
    /**
     * Filter, which ArchivoAdjunto to fetch.
     */
    where: ArchivoAdjuntoWhereUniqueInput
  }

  /**
   * ArchivoAdjunto findFirst
   */
  export type ArchivoAdjuntoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoInclude<ExtArgs> | null
    /**
     * Filter, which ArchivoAdjunto to fetch.
     */
    where?: ArchivoAdjuntoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArchivoAdjuntos to fetch.
     */
    orderBy?: ArchivoAdjuntoOrderByWithRelationInput | ArchivoAdjuntoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArchivoAdjuntos.
     */
    cursor?: ArchivoAdjuntoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArchivoAdjuntos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArchivoAdjuntos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArchivoAdjuntos.
     */
    distinct?: ArchivoAdjuntoScalarFieldEnum | ArchivoAdjuntoScalarFieldEnum[]
  }

  /**
   * ArchivoAdjunto findFirstOrThrow
   */
  export type ArchivoAdjuntoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoInclude<ExtArgs> | null
    /**
     * Filter, which ArchivoAdjunto to fetch.
     */
    where?: ArchivoAdjuntoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArchivoAdjuntos to fetch.
     */
    orderBy?: ArchivoAdjuntoOrderByWithRelationInput | ArchivoAdjuntoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArchivoAdjuntos.
     */
    cursor?: ArchivoAdjuntoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArchivoAdjuntos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArchivoAdjuntos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArchivoAdjuntos.
     */
    distinct?: ArchivoAdjuntoScalarFieldEnum | ArchivoAdjuntoScalarFieldEnum[]
  }

  /**
   * ArchivoAdjunto findMany
   */
  export type ArchivoAdjuntoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoInclude<ExtArgs> | null
    /**
     * Filter, which ArchivoAdjuntos to fetch.
     */
    where?: ArchivoAdjuntoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArchivoAdjuntos to fetch.
     */
    orderBy?: ArchivoAdjuntoOrderByWithRelationInput | ArchivoAdjuntoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ArchivoAdjuntos.
     */
    cursor?: ArchivoAdjuntoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArchivoAdjuntos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArchivoAdjuntos.
     */
    skip?: number
    distinct?: ArchivoAdjuntoScalarFieldEnum | ArchivoAdjuntoScalarFieldEnum[]
  }

  /**
   * ArchivoAdjunto create
   */
  export type ArchivoAdjuntoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoInclude<ExtArgs> | null
    /**
     * The data needed to create a ArchivoAdjunto.
     */
    data: XOR<ArchivoAdjuntoCreateInput, ArchivoAdjuntoUncheckedCreateInput>
  }

  /**
   * ArchivoAdjunto createMany
   */
  export type ArchivoAdjuntoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ArchivoAdjuntos.
     */
    data: ArchivoAdjuntoCreateManyInput | ArchivoAdjuntoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ArchivoAdjunto createManyAndReturn
   */
  export type ArchivoAdjuntoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * The data used to create many ArchivoAdjuntos.
     */
    data: ArchivoAdjuntoCreateManyInput | ArchivoAdjuntoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ArchivoAdjunto update
   */
  export type ArchivoAdjuntoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoInclude<ExtArgs> | null
    /**
     * The data needed to update a ArchivoAdjunto.
     */
    data: XOR<ArchivoAdjuntoUpdateInput, ArchivoAdjuntoUncheckedUpdateInput>
    /**
     * Choose, which ArchivoAdjunto to update.
     */
    where: ArchivoAdjuntoWhereUniqueInput
  }

  /**
   * ArchivoAdjunto updateMany
   */
  export type ArchivoAdjuntoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ArchivoAdjuntos.
     */
    data: XOR<ArchivoAdjuntoUpdateManyMutationInput, ArchivoAdjuntoUncheckedUpdateManyInput>
    /**
     * Filter which ArchivoAdjuntos to update
     */
    where?: ArchivoAdjuntoWhereInput
    /**
     * Limit how many ArchivoAdjuntos to update.
     */
    limit?: number
  }

  /**
   * ArchivoAdjunto updateManyAndReturn
   */
  export type ArchivoAdjuntoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * The data used to update ArchivoAdjuntos.
     */
    data: XOR<ArchivoAdjuntoUpdateManyMutationInput, ArchivoAdjuntoUncheckedUpdateManyInput>
    /**
     * Filter which ArchivoAdjuntos to update
     */
    where?: ArchivoAdjuntoWhereInput
    /**
     * Limit how many ArchivoAdjuntos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ArchivoAdjunto upsert
   */
  export type ArchivoAdjuntoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoInclude<ExtArgs> | null
    /**
     * The filter to search for the ArchivoAdjunto to update in case it exists.
     */
    where: ArchivoAdjuntoWhereUniqueInput
    /**
     * In case the ArchivoAdjunto found by the `where` argument doesn't exist, create a new ArchivoAdjunto with this data.
     */
    create: XOR<ArchivoAdjuntoCreateInput, ArchivoAdjuntoUncheckedCreateInput>
    /**
     * In case the ArchivoAdjunto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ArchivoAdjuntoUpdateInput, ArchivoAdjuntoUncheckedUpdateInput>
  }

  /**
   * ArchivoAdjunto delete
   */
  export type ArchivoAdjuntoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoInclude<ExtArgs> | null
    /**
     * Filter which ArchivoAdjunto to delete.
     */
    where: ArchivoAdjuntoWhereUniqueInput
  }

  /**
   * ArchivoAdjunto deleteMany
   */
  export type ArchivoAdjuntoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArchivoAdjuntos to delete
     */
    where?: ArchivoAdjuntoWhereInput
    /**
     * Limit how many ArchivoAdjuntos to delete.
     */
    limit?: number
  }

  /**
   * ArchivoAdjunto.comentario
   */
  export type ArchivoAdjunto$comentarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioTicket
     */
    select?: ComentarioTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioTicket
     */
    omit?: ComentarioTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioTicketInclude<ExtArgs> | null
    where?: ComentarioTicketWhereInput
  }

  /**
   * ArchivoAdjunto without action
   */
  export type ArchivoAdjuntoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivoAdjunto
     */
    select?: ArchivoAdjuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArchivoAdjunto
     */
    omit?: ArchivoAdjuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoAdjuntoInclude<ExtArgs> | null
  }


  /**
   * Model DerivacionTicket
   */

  export type AggregateDerivacionTicket = {
    _count: DerivacionTicketCountAggregateOutputType | null
    _avg: DerivacionTicketAvgAggregateOutputType | null
    _sum: DerivacionTicketSumAggregateOutputType | null
    _min: DerivacionTicketMinAggregateOutputType | null
    _max: DerivacionTicketMaxAggregateOutputType | null
  }

  export type DerivacionTicketAvgAggregateOutputType = {
    id: number | null
    ticketId: number | null
    departamentoOrigenId: number | null
    departamentoDestinoId: number | null
    derivadoPor: number | null
  }

  export type DerivacionTicketSumAggregateOutputType = {
    id: number | null
    ticketId: number | null
    departamentoOrigenId: number | null
    departamentoDestinoId: number | null
    derivadoPor: number | null
  }

  export type DerivacionTicketMinAggregateOutputType = {
    id: number | null
    ticketId: number | null
    departamentoOrigenId: number | null
    departamentoDestinoId: number | null
    motivo: string | null
    derivadoPor: number | null
    createdAt: Date | null
  }

  export type DerivacionTicketMaxAggregateOutputType = {
    id: number | null
    ticketId: number | null
    departamentoOrigenId: number | null
    departamentoDestinoId: number | null
    motivo: string | null
    derivadoPor: number | null
    createdAt: Date | null
  }

  export type DerivacionTicketCountAggregateOutputType = {
    id: number
    ticketId: number
    departamentoOrigenId: number
    departamentoDestinoId: number
    motivo: number
    derivadoPor: number
    createdAt: number
    _all: number
  }


  export type DerivacionTicketAvgAggregateInputType = {
    id?: true
    ticketId?: true
    departamentoOrigenId?: true
    departamentoDestinoId?: true
    derivadoPor?: true
  }

  export type DerivacionTicketSumAggregateInputType = {
    id?: true
    ticketId?: true
    departamentoOrigenId?: true
    departamentoDestinoId?: true
    derivadoPor?: true
  }

  export type DerivacionTicketMinAggregateInputType = {
    id?: true
    ticketId?: true
    departamentoOrigenId?: true
    departamentoDestinoId?: true
    motivo?: true
    derivadoPor?: true
    createdAt?: true
  }

  export type DerivacionTicketMaxAggregateInputType = {
    id?: true
    ticketId?: true
    departamentoOrigenId?: true
    departamentoDestinoId?: true
    motivo?: true
    derivadoPor?: true
    createdAt?: true
  }

  export type DerivacionTicketCountAggregateInputType = {
    id?: true
    ticketId?: true
    departamentoOrigenId?: true
    departamentoDestinoId?: true
    motivo?: true
    derivadoPor?: true
    createdAt?: true
    _all?: true
  }

  export type DerivacionTicketAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DerivacionTicket to aggregate.
     */
    where?: DerivacionTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DerivacionTickets to fetch.
     */
    orderBy?: DerivacionTicketOrderByWithRelationInput | DerivacionTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DerivacionTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DerivacionTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DerivacionTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DerivacionTickets
    **/
    _count?: true | DerivacionTicketCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DerivacionTicketAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DerivacionTicketSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DerivacionTicketMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DerivacionTicketMaxAggregateInputType
  }

  export type GetDerivacionTicketAggregateType<T extends DerivacionTicketAggregateArgs> = {
        [P in keyof T & keyof AggregateDerivacionTicket]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDerivacionTicket[P]>
      : GetScalarType<T[P], AggregateDerivacionTicket[P]>
  }




  export type DerivacionTicketGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DerivacionTicketWhereInput
    orderBy?: DerivacionTicketOrderByWithAggregationInput | DerivacionTicketOrderByWithAggregationInput[]
    by: DerivacionTicketScalarFieldEnum[] | DerivacionTicketScalarFieldEnum
    having?: DerivacionTicketScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DerivacionTicketCountAggregateInputType | true
    _avg?: DerivacionTicketAvgAggregateInputType
    _sum?: DerivacionTicketSumAggregateInputType
    _min?: DerivacionTicketMinAggregateInputType
    _max?: DerivacionTicketMaxAggregateInputType
  }

  export type DerivacionTicketGroupByOutputType = {
    id: number
    ticketId: number
    departamentoOrigenId: number
    departamentoDestinoId: number
    motivo: string | null
    derivadoPor: number
    createdAt: Date
    _count: DerivacionTicketCountAggregateOutputType | null
    _avg: DerivacionTicketAvgAggregateOutputType | null
    _sum: DerivacionTicketSumAggregateOutputType | null
    _min: DerivacionTicketMinAggregateOutputType | null
    _max: DerivacionTicketMaxAggregateOutputType | null
  }

  type GetDerivacionTicketGroupByPayload<T extends DerivacionTicketGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DerivacionTicketGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DerivacionTicketGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DerivacionTicketGroupByOutputType[P]>
            : GetScalarType<T[P], DerivacionTicketGroupByOutputType[P]>
        }
      >
    >


  export type DerivacionTicketSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    departamentoOrigenId?: boolean
    departamentoDestinoId?: boolean
    motivo?: boolean
    derivadoPor?: boolean
    createdAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    departamentoOrigen?: boolean | DepartamentoDefaultArgs<ExtArgs>
    departamentoDestino?: boolean | DepartamentoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["derivacionTicket"]>

  export type DerivacionTicketSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    departamentoOrigenId?: boolean
    departamentoDestinoId?: boolean
    motivo?: boolean
    derivadoPor?: boolean
    createdAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    departamentoOrigen?: boolean | DepartamentoDefaultArgs<ExtArgs>
    departamentoDestino?: boolean | DepartamentoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["derivacionTicket"]>

  export type DerivacionTicketSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    departamentoOrigenId?: boolean
    departamentoDestinoId?: boolean
    motivo?: boolean
    derivadoPor?: boolean
    createdAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    departamentoOrigen?: boolean | DepartamentoDefaultArgs<ExtArgs>
    departamentoDestino?: boolean | DepartamentoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["derivacionTicket"]>

  export type DerivacionTicketSelectScalar = {
    id?: boolean
    ticketId?: boolean
    departamentoOrigenId?: boolean
    departamentoDestinoId?: boolean
    motivo?: boolean
    derivadoPor?: boolean
    createdAt?: boolean
  }

  export type DerivacionTicketOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ticketId" | "departamentoOrigenId" | "departamentoDestinoId" | "motivo" | "derivadoPor" | "createdAt", ExtArgs["result"]["derivacionTicket"]>
  export type DerivacionTicketInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    departamentoOrigen?: boolean | DepartamentoDefaultArgs<ExtArgs>
    departamentoDestino?: boolean | DepartamentoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type DerivacionTicketIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    departamentoOrigen?: boolean | DepartamentoDefaultArgs<ExtArgs>
    departamentoDestino?: boolean | DepartamentoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type DerivacionTicketIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    departamentoOrigen?: boolean | DepartamentoDefaultArgs<ExtArgs>
    departamentoDestino?: boolean | DepartamentoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $DerivacionTicketPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DerivacionTicket"
    objects: {
      ticket: Prisma.$TicketPayload<ExtArgs>
      departamentoOrigen: Prisma.$DepartamentoPayload<ExtArgs>
      departamentoDestino: Prisma.$DepartamentoPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ticketId: number
      departamentoOrigenId: number
      departamentoDestinoId: number
      motivo: string | null
      derivadoPor: number
      createdAt: Date
    }, ExtArgs["result"]["derivacionTicket"]>
    composites: {}
  }

  type DerivacionTicketGetPayload<S extends boolean | null | undefined | DerivacionTicketDefaultArgs> = $Result.GetResult<Prisma.$DerivacionTicketPayload, S>

  type DerivacionTicketCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DerivacionTicketFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DerivacionTicketCountAggregateInputType | true
    }

  export interface DerivacionTicketDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DerivacionTicket'], meta: { name: 'DerivacionTicket' } }
    /**
     * Find zero or one DerivacionTicket that matches the filter.
     * @param {DerivacionTicketFindUniqueArgs} args - Arguments to find a DerivacionTicket
     * @example
     * // Get one DerivacionTicket
     * const derivacionTicket = await prisma.derivacionTicket.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DerivacionTicketFindUniqueArgs>(args: SelectSubset<T, DerivacionTicketFindUniqueArgs<ExtArgs>>): Prisma__DerivacionTicketClient<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DerivacionTicket that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DerivacionTicketFindUniqueOrThrowArgs} args - Arguments to find a DerivacionTicket
     * @example
     * // Get one DerivacionTicket
     * const derivacionTicket = await prisma.derivacionTicket.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DerivacionTicketFindUniqueOrThrowArgs>(args: SelectSubset<T, DerivacionTicketFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DerivacionTicketClient<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DerivacionTicket that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DerivacionTicketFindFirstArgs} args - Arguments to find a DerivacionTicket
     * @example
     * // Get one DerivacionTicket
     * const derivacionTicket = await prisma.derivacionTicket.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DerivacionTicketFindFirstArgs>(args?: SelectSubset<T, DerivacionTicketFindFirstArgs<ExtArgs>>): Prisma__DerivacionTicketClient<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DerivacionTicket that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DerivacionTicketFindFirstOrThrowArgs} args - Arguments to find a DerivacionTicket
     * @example
     * // Get one DerivacionTicket
     * const derivacionTicket = await prisma.derivacionTicket.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DerivacionTicketFindFirstOrThrowArgs>(args?: SelectSubset<T, DerivacionTicketFindFirstOrThrowArgs<ExtArgs>>): Prisma__DerivacionTicketClient<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DerivacionTickets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DerivacionTicketFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DerivacionTickets
     * const derivacionTickets = await prisma.derivacionTicket.findMany()
     * 
     * // Get first 10 DerivacionTickets
     * const derivacionTickets = await prisma.derivacionTicket.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const derivacionTicketWithIdOnly = await prisma.derivacionTicket.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DerivacionTicketFindManyArgs>(args?: SelectSubset<T, DerivacionTicketFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DerivacionTicket.
     * @param {DerivacionTicketCreateArgs} args - Arguments to create a DerivacionTicket.
     * @example
     * // Create one DerivacionTicket
     * const DerivacionTicket = await prisma.derivacionTicket.create({
     *   data: {
     *     // ... data to create a DerivacionTicket
     *   }
     * })
     * 
     */
    create<T extends DerivacionTicketCreateArgs>(args: SelectSubset<T, DerivacionTicketCreateArgs<ExtArgs>>): Prisma__DerivacionTicketClient<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DerivacionTickets.
     * @param {DerivacionTicketCreateManyArgs} args - Arguments to create many DerivacionTickets.
     * @example
     * // Create many DerivacionTickets
     * const derivacionTicket = await prisma.derivacionTicket.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DerivacionTicketCreateManyArgs>(args?: SelectSubset<T, DerivacionTicketCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DerivacionTickets and returns the data saved in the database.
     * @param {DerivacionTicketCreateManyAndReturnArgs} args - Arguments to create many DerivacionTickets.
     * @example
     * // Create many DerivacionTickets
     * const derivacionTicket = await prisma.derivacionTicket.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DerivacionTickets and only return the `id`
     * const derivacionTicketWithIdOnly = await prisma.derivacionTicket.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DerivacionTicketCreateManyAndReturnArgs>(args?: SelectSubset<T, DerivacionTicketCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DerivacionTicket.
     * @param {DerivacionTicketDeleteArgs} args - Arguments to delete one DerivacionTicket.
     * @example
     * // Delete one DerivacionTicket
     * const DerivacionTicket = await prisma.derivacionTicket.delete({
     *   where: {
     *     // ... filter to delete one DerivacionTicket
     *   }
     * })
     * 
     */
    delete<T extends DerivacionTicketDeleteArgs>(args: SelectSubset<T, DerivacionTicketDeleteArgs<ExtArgs>>): Prisma__DerivacionTicketClient<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DerivacionTicket.
     * @param {DerivacionTicketUpdateArgs} args - Arguments to update one DerivacionTicket.
     * @example
     * // Update one DerivacionTicket
     * const derivacionTicket = await prisma.derivacionTicket.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DerivacionTicketUpdateArgs>(args: SelectSubset<T, DerivacionTicketUpdateArgs<ExtArgs>>): Prisma__DerivacionTicketClient<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DerivacionTickets.
     * @param {DerivacionTicketDeleteManyArgs} args - Arguments to filter DerivacionTickets to delete.
     * @example
     * // Delete a few DerivacionTickets
     * const { count } = await prisma.derivacionTicket.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DerivacionTicketDeleteManyArgs>(args?: SelectSubset<T, DerivacionTicketDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DerivacionTickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DerivacionTicketUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DerivacionTickets
     * const derivacionTicket = await prisma.derivacionTicket.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DerivacionTicketUpdateManyArgs>(args: SelectSubset<T, DerivacionTicketUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DerivacionTickets and returns the data updated in the database.
     * @param {DerivacionTicketUpdateManyAndReturnArgs} args - Arguments to update many DerivacionTickets.
     * @example
     * // Update many DerivacionTickets
     * const derivacionTicket = await prisma.derivacionTicket.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DerivacionTickets and only return the `id`
     * const derivacionTicketWithIdOnly = await prisma.derivacionTicket.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DerivacionTicketUpdateManyAndReturnArgs>(args: SelectSubset<T, DerivacionTicketUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DerivacionTicket.
     * @param {DerivacionTicketUpsertArgs} args - Arguments to update or create a DerivacionTicket.
     * @example
     * // Update or create a DerivacionTicket
     * const derivacionTicket = await prisma.derivacionTicket.upsert({
     *   create: {
     *     // ... data to create a DerivacionTicket
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DerivacionTicket we want to update
     *   }
     * })
     */
    upsert<T extends DerivacionTicketUpsertArgs>(args: SelectSubset<T, DerivacionTicketUpsertArgs<ExtArgs>>): Prisma__DerivacionTicketClient<$Result.GetResult<Prisma.$DerivacionTicketPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DerivacionTickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DerivacionTicketCountArgs} args - Arguments to filter DerivacionTickets to count.
     * @example
     * // Count the number of DerivacionTickets
     * const count = await prisma.derivacionTicket.count({
     *   where: {
     *     // ... the filter for the DerivacionTickets we want to count
     *   }
     * })
    **/
    count<T extends DerivacionTicketCountArgs>(
      args?: Subset<T, DerivacionTicketCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DerivacionTicketCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DerivacionTicket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DerivacionTicketAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DerivacionTicketAggregateArgs>(args: Subset<T, DerivacionTicketAggregateArgs>): Prisma.PrismaPromise<GetDerivacionTicketAggregateType<T>>

    /**
     * Group by DerivacionTicket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DerivacionTicketGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DerivacionTicketGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DerivacionTicketGroupByArgs['orderBy'] }
        : { orderBy?: DerivacionTicketGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DerivacionTicketGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDerivacionTicketGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DerivacionTicket model
   */
  readonly fields: DerivacionTicketFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DerivacionTicket.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DerivacionTicketClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ticket<T extends TicketDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TicketDefaultArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    departamentoOrigen<T extends DepartamentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DepartamentoDefaultArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    departamentoDestino<T extends DepartamentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DepartamentoDefaultArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DerivacionTicket model
   */
  interface DerivacionTicketFieldRefs {
    readonly id: FieldRef<"DerivacionTicket", 'Int'>
    readonly ticketId: FieldRef<"DerivacionTicket", 'Int'>
    readonly departamentoOrigenId: FieldRef<"DerivacionTicket", 'Int'>
    readonly departamentoDestinoId: FieldRef<"DerivacionTicket", 'Int'>
    readonly motivo: FieldRef<"DerivacionTicket", 'String'>
    readonly derivadoPor: FieldRef<"DerivacionTicket", 'Int'>
    readonly createdAt: FieldRef<"DerivacionTicket", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DerivacionTicket findUnique
   */
  export type DerivacionTicketFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
    /**
     * Filter, which DerivacionTicket to fetch.
     */
    where: DerivacionTicketWhereUniqueInput
  }

  /**
   * DerivacionTicket findUniqueOrThrow
   */
  export type DerivacionTicketFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
    /**
     * Filter, which DerivacionTicket to fetch.
     */
    where: DerivacionTicketWhereUniqueInput
  }

  /**
   * DerivacionTicket findFirst
   */
  export type DerivacionTicketFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
    /**
     * Filter, which DerivacionTicket to fetch.
     */
    where?: DerivacionTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DerivacionTickets to fetch.
     */
    orderBy?: DerivacionTicketOrderByWithRelationInput | DerivacionTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DerivacionTickets.
     */
    cursor?: DerivacionTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DerivacionTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DerivacionTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DerivacionTickets.
     */
    distinct?: DerivacionTicketScalarFieldEnum | DerivacionTicketScalarFieldEnum[]
  }

  /**
   * DerivacionTicket findFirstOrThrow
   */
  export type DerivacionTicketFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
    /**
     * Filter, which DerivacionTicket to fetch.
     */
    where?: DerivacionTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DerivacionTickets to fetch.
     */
    orderBy?: DerivacionTicketOrderByWithRelationInput | DerivacionTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DerivacionTickets.
     */
    cursor?: DerivacionTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DerivacionTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DerivacionTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DerivacionTickets.
     */
    distinct?: DerivacionTicketScalarFieldEnum | DerivacionTicketScalarFieldEnum[]
  }

  /**
   * DerivacionTicket findMany
   */
  export type DerivacionTicketFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
    /**
     * Filter, which DerivacionTickets to fetch.
     */
    where?: DerivacionTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DerivacionTickets to fetch.
     */
    orderBy?: DerivacionTicketOrderByWithRelationInput | DerivacionTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DerivacionTickets.
     */
    cursor?: DerivacionTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DerivacionTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DerivacionTickets.
     */
    skip?: number
    distinct?: DerivacionTicketScalarFieldEnum | DerivacionTicketScalarFieldEnum[]
  }

  /**
   * DerivacionTicket create
   */
  export type DerivacionTicketCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
    /**
     * The data needed to create a DerivacionTicket.
     */
    data: XOR<DerivacionTicketCreateInput, DerivacionTicketUncheckedCreateInput>
  }

  /**
   * DerivacionTicket createMany
   */
  export type DerivacionTicketCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DerivacionTickets.
     */
    data: DerivacionTicketCreateManyInput | DerivacionTicketCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DerivacionTicket createManyAndReturn
   */
  export type DerivacionTicketCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * The data used to create many DerivacionTickets.
     */
    data: DerivacionTicketCreateManyInput | DerivacionTicketCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DerivacionTicket update
   */
  export type DerivacionTicketUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
    /**
     * The data needed to update a DerivacionTicket.
     */
    data: XOR<DerivacionTicketUpdateInput, DerivacionTicketUncheckedUpdateInput>
    /**
     * Choose, which DerivacionTicket to update.
     */
    where: DerivacionTicketWhereUniqueInput
  }

  /**
   * DerivacionTicket updateMany
   */
  export type DerivacionTicketUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DerivacionTickets.
     */
    data: XOR<DerivacionTicketUpdateManyMutationInput, DerivacionTicketUncheckedUpdateManyInput>
    /**
     * Filter which DerivacionTickets to update
     */
    where?: DerivacionTicketWhereInput
    /**
     * Limit how many DerivacionTickets to update.
     */
    limit?: number
  }

  /**
   * DerivacionTicket updateManyAndReturn
   */
  export type DerivacionTicketUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * The data used to update DerivacionTickets.
     */
    data: XOR<DerivacionTicketUpdateManyMutationInput, DerivacionTicketUncheckedUpdateManyInput>
    /**
     * Filter which DerivacionTickets to update
     */
    where?: DerivacionTicketWhereInput
    /**
     * Limit how many DerivacionTickets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DerivacionTicket upsert
   */
  export type DerivacionTicketUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
    /**
     * The filter to search for the DerivacionTicket to update in case it exists.
     */
    where: DerivacionTicketWhereUniqueInput
    /**
     * In case the DerivacionTicket found by the `where` argument doesn't exist, create a new DerivacionTicket with this data.
     */
    create: XOR<DerivacionTicketCreateInput, DerivacionTicketUncheckedCreateInput>
    /**
     * In case the DerivacionTicket was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DerivacionTicketUpdateInput, DerivacionTicketUncheckedUpdateInput>
  }

  /**
   * DerivacionTicket delete
   */
  export type DerivacionTicketDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
    /**
     * Filter which DerivacionTicket to delete.
     */
    where: DerivacionTicketWhereUniqueInput
  }

  /**
   * DerivacionTicket deleteMany
   */
  export type DerivacionTicketDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DerivacionTickets to delete
     */
    where?: DerivacionTicketWhereInput
    /**
     * Limit how many DerivacionTickets to delete.
     */
    limit?: number
  }

  /**
   * DerivacionTicket without action
   */
  export type DerivacionTicketDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DerivacionTicket
     */
    select?: DerivacionTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DerivacionTicket
     */
    omit?: DerivacionTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DerivacionTicketInclude<ExtArgs> | null
  }


  /**
   * Model Encuesta
   */

  export type AggregateEncuesta = {
    _count: EncuestaCountAggregateOutputType | null
    _avg: EncuestaAvgAggregateOutputType | null
    _sum: EncuestaSumAggregateOutputType | null
    _min: EncuestaMinAggregateOutputType | null
    _max: EncuestaMaxAggregateOutputType | null
  }

  export type EncuestaAvgAggregateOutputType = {
    id: number | null
    ticketId: number | null
    calificacion: number | null
    enviadoPor: number | null
  }

  export type EncuestaSumAggregateOutputType = {
    id: number | null
    ticketId: number | null
    calificacion: number | null
    enviadoPor: number | null
  }

  export type EncuestaMinAggregateOutputType = {
    id: number | null
    ticketId: number | null
    calificacion: number | null
    comentario: string | null
    enviadoPor: number | null
    fechaEnvio: Date | null
    fechaRespuesta: Date | null
  }

  export type EncuestaMaxAggregateOutputType = {
    id: number | null
    ticketId: number | null
    calificacion: number | null
    comentario: string | null
    enviadoPor: number | null
    fechaEnvio: Date | null
    fechaRespuesta: Date | null
  }

  export type EncuestaCountAggregateOutputType = {
    id: number
    ticketId: number
    calificacion: number
    comentario: number
    enviadoPor: number
    fechaEnvio: number
    fechaRespuesta: number
    _all: number
  }


  export type EncuestaAvgAggregateInputType = {
    id?: true
    ticketId?: true
    calificacion?: true
    enviadoPor?: true
  }

  export type EncuestaSumAggregateInputType = {
    id?: true
    ticketId?: true
    calificacion?: true
    enviadoPor?: true
  }

  export type EncuestaMinAggregateInputType = {
    id?: true
    ticketId?: true
    calificacion?: true
    comentario?: true
    enviadoPor?: true
    fechaEnvio?: true
    fechaRespuesta?: true
  }

  export type EncuestaMaxAggregateInputType = {
    id?: true
    ticketId?: true
    calificacion?: true
    comentario?: true
    enviadoPor?: true
    fechaEnvio?: true
    fechaRespuesta?: true
  }

  export type EncuestaCountAggregateInputType = {
    id?: true
    ticketId?: true
    calificacion?: true
    comentario?: true
    enviadoPor?: true
    fechaEnvio?: true
    fechaRespuesta?: true
    _all?: true
  }

  export type EncuestaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Encuesta to aggregate.
     */
    where?: EncuestaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Encuestas to fetch.
     */
    orderBy?: EncuestaOrderByWithRelationInput | EncuestaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EncuestaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Encuestas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Encuestas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Encuestas
    **/
    _count?: true | EncuestaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EncuestaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EncuestaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EncuestaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EncuestaMaxAggregateInputType
  }

  export type GetEncuestaAggregateType<T extends EncuestaAggregateArgs> = {
        [P in keyof T & keyof AggregateEncuesta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEncuesta[P]>
      : GetScalarType<T[P], AggregateEncuesta[P]>
  }




  export type EncuestaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EncuestaWhereInput
    orderBy?: EncuestaOrderByWithAggregationInput | EncuestaOrderByWithAggregationInput[]
    by: EncuestaScalarFieldEnum[] | EncuestaScalarFieldEnum
    having?: EncuestaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EncuestaCountAggregateInputType | true
    _avg?: EncuestaAvgAggregateInputType
    _sum?: EncuestaSumAggregateInputType
    _min?: EncuestaMinAggregateInputType
    _max?: EncuestaMaxAggregateInputType
  }

  export type EncuestaGroupByOutputType = {
    id: number
    ticketId: number
    calificacion: number | null
    comentario: string | null
    enviadoPor: number | null
    fechaEnvio: Date
    fechaRespuesta: Date | null
    _count: EncuestaCountAggregateOutputType | null
    _avg: EncuestaAvgAggregateOutputType | null
    _sum: EncuestaSumAggregateOutputType | null
    _min: EncuestaMinAggregateOutputType | null
    _max: EncuestaMaxAggregateOutputType | null
  }

  type GetEncuestaGroupByPayload<T extends EncuestaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EncuestaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EncuestaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EncuestaGroupByOutputType[P]>
            : GetScalarType<T[P], EncuestaGroupByOutputType[P]>
        }
      >
    >


  export type EncuestaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    calificacion?: boolean
    comentario?: boolean
    enviadoPor?: boolean
    fechaEnvio?: boolean
    fechaRespuesta?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | Encuesta$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["encuesta"]>

  export type EncuestaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    calificacion?: boolean
    comentario?: boolean
    enviadoPor?: boolean
    fechaEnvio?: boolean
    fechaRespuesta?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | Encuesta$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["encuesta"]>

  export type EncuestaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ticketId?: boolean
    calificacion?: boolean
    comentario?: boolean
    enviadoPor?: boolean
    fechaEnvio?: boolean
    fechaRespuesta?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | Encuesta$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["encuesta"]>

  export type EncuestaSelectScalar = {
    id?: boolean
    ticketId?: boolean
    calificacion?: boolean
    comentario?: boolean
    enviadoPor?: boolean
    fechaEnvio?: boolean
    fechaRespuesta?: boolean
  }

  export type EncuestaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ticketId" | "calificacion" | "comentario" | "enviadoPor" | "fechaEnvio" | "fechaRespuesta", ExtArgs["result"]["encuesta"]>
  export type EncuestaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | Encuesta$usuarioArgs<ExtArgs>
  }
  export type EncuestaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | Encuesta$usuarioArgs<ExtArgs>
  }
  export type EncuestaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | Encuesta$usuarioArgs<ExtArgs>
  }

  export type $EncuestaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Encuesta"
    objects: {
      ticket: Prisma.$TicketPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ticketId: number
      calificacion: number | null
      comentario: string | null
      enviadoPor: number | null
      fechaEnvio: Date
      fechaRespuesta: Date | null
    }, ExtArgs["result"]["encuesta"]>
    composites: {}
  }

  type EncuestaGetPayload<S extends boolean | null | undefined | EncuestaDefaultArgs> = $Result.GetResult<Prisma.$EncuestaPayload, S>

  type EncuestaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EncuestaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EncuestaCountAggregateInputType | true
    }

  export interface EncuestaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Encuesta'], meta: { name: 'Encuesta' } }
    /**
     * Find zero or one Encuesta that matches the filter.
     * @param {EncuestaFindUniqueArgs} args - Arguments to find a Encuesta
     * @example
     * // Get one Encuesta
     * const encuesta = await prisma.encuesta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EncuestaFindUniqueArgs>(args: SelectSubset<T, EncuestaFindUniqueArgs<ExtArgs>>): Prisma__EncuestaClient<$Result.GetResult<Prisma.$EncuestaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Encuesta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EncuestaFindUniqueOrThrowArgs} args - Arguments to find a Encuesta
     * @example
     * // Get one Encuesta
     * const encuesta = await prisma.encuesta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EncuestaFindUniqueOrThrowArgs>(args: SelectSubset<T, EncuestaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EncuestaClient<$Result.GetResult<Prisma.$EncuestaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Encuesta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EncuestaFindFirstArgs} args - Arguments to find a Encuesta
     * @example
     * // Get one Encuesta
     * const encuesta = await prisma.encuesta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EncuestaFindFirstArgs>(args?: SelectSubset<T, EncuestaFindFirstArgs<ExtArgs>>): Prisma__EncuestaClient<$Result.GetResult<Prisma.$EncuestaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Encuesta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EncuestaFindFirstOrThrowArgs} args - Arguments to find a Encuesta
     * @example
     * // Get one Encuesta
     * const encuesta = await prisma.encuesta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EncuestaFindFirstOrThrowArgs>(args?: SelectSubset<T, EncuestaFindFirstOrThrowArgs<ExtArgs>>): Prisma__EncuestaClient<$Result.GetResult<Prisma.$EncuestaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Encuestas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EncuestaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Encuestas
     * const encuestas = await prisma.encuesta.findMany()
     * 
     * // Get first 10 Encuestas
     * const encuestas = await prisma.encuesta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const encuestaWithIdOnly = await prisma.encuesta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EncuestaFindManyArgs>(args?: SelectSubset<T, EncuestaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EncuestaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Encuesta.
     * @param {EncuestaCreateArgs} args - Arguments to create a Encuesta.
     * @example
     * // Create one Encuesta
     * const Encuesta = await prisma.encuesta.create({
     *   data: {
     *     // ... data to create a Encuesta
     *   }
     * })
     * 
     */
    create<T extends EncuestaCreateArgs>(args: SelectSubset<T, EncuestaCreateArgs<ExtArgs>>): Prisma__EncuestaClient<$Result.GetResult<Prisma.$EncuestaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Encuestas.
     * @param {EncuestaCreateManyArgs} args - Arguments to create many Encuestas.
     * @example
     * // Create many Encuestas
     * const encuesta = await prisma.encuesta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EncuestaCreateManyArgs>(args?: SelectSubset<T, EncuestaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Encuestas and returns the data saved in the database.
     * @param {EncuestaCreateManyAndReturnArgs} args - Arguments to create many Encuestas.
     * @example
     * // Create many Encuestas
     * const encuesta = await prisma.encuesta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Encuestas and only return the `id`
     * const encuestaWithIdOnly = await prisma.encuesta.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EncuestaCreateManyAndReturnArgs>(args?: SelectSubset<T, EncuestaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EncuestaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Encuesta.
     * @param {EncuestaDeleteArgs} args - Arguments to delete one Encuesta.
     * @example
     * // Delete one Encuesta
     * const Encuesta = await prisma.encuesta.delete({
     *   where: {
     *     // ... filter to delete one Encuesta
     *   }
     * })
     * 
     */
    delete<T extends EncuestaDeleteArgs>(args: SelectSubset<T, EncuestaDeleteArgs<ExtArgs>>): Prisma__EncuestaClient<$Result.GetResult<Prisma.$EncuestaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Encuesta.
     * @param {EncuestaUpdateArgs} args - Arguments to update one Encuesta.
     * @example
     * // Update one Encuesta
     * const encuesta = await prisma.encuesta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EncuestaUpdateArgs>(args: SelectSubset<T, EncuestaUpdateArgs<ExtArgs>>): Prisma__EncuestaClient<$Result.GetResult<Prisma.$EncuestaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Encuestas.
     * @param {EncuestaDeleteManyArgs} args - Arguments to filter Encuestas to delete.
     * @example
     * // Delete a few Encuestas
     * const { count } = await prisma.encuesta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EncuestaDeleteManyArgs>(args?: SelectSubset<T, EncuestaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Encuestas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EncuestaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Encuestas
     * const encuesta = await prisma.encuesta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EncuestaUpdateManyArgs>(args: SelectSubset<T, EncuestaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Encuestas and returns the data updated in the database.
     * @param {EncuestaUpdateManyAndReturnArgs} args - Arguments to update many Encuestas.
     * @example
     * // Update many Encuestas
     * const encuesta = await prisma.encuesta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Encuestas and only return the `id`
     * const encuestaWithIdOnly = await prisma.encuesta.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EncuestaUpdateManyAndReturnArgs>(args: SelectSubset<T, EncuestaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EncuestaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Encuesta.
     * @param {EncuestaUpsertArgs} args - Arguments to update or create a Encuesta.
     * @example
     * // Update or create a Encuesta
     * const encuesta = await prisma.encuesta.upsert({
     *   create: {
     *     // ... data to create a Encuesta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Encuesta we want to update
     *   }
     * })
     */
    upsert<T extends EncuestaUpsertArgs>(args: SelectSubset<T, EncuestaUpsertArgs<ExtArgs>>): Prisma__EncuestaClient<$Result.GetResult<Prisma.$EncuestaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Encuestas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EncuestaCountArgs} args - Arguments to filter Encuestas to count.
     * @example
     * // Count the number of Encuestas
     * const count = await prisma.encuesta.count({
     *   where: {
     *     // ... the filter for the Encuestas we want to count
     *   }
     * })
    **/
    count<T extends EncuestaCountArgs>(
      args?: Subset<T, EncuestaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EncuestaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Encuesta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EncuestaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EncuestaAggregateArgs>(args: Subset<T, EncuestaAggregateArgs>): Prisma.PrismaPromise<GetEncuestaAggregateType<T>>

    /**
     * Group by Encuesta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EncuestaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EncuestaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EncuestaGroupByArgs['orderBy'] }
        : { orderBy?: EncuestaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EncuestaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEncuestaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Encuesta model
   */
  readonly fields: EncuestaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Encuesta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EncuestaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ticket<T extends TicketDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TicketDefaultArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends Encuesta$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, Encuesta$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Encuesta model
   */
  interface EncuestaFieldRefs {
    readonly id: FieldRef<"Encuesta", 'Int'>
    readonly ticketId: FieldRef<"Encuesta", 'Int'>
    readonly calificacion: FieldRef<"Encuesta", 'Int'>
    readonly comentario: FieldRef<"Encuesta", 'String'>
    readonly enviadoPor: FieldRef<"Encuesta", 'Int'>
    readonly fechaEnvio: FieldRef<"Encuesta", 'DateTime'>
    readonly fechaRespuesta: FieldRef<"Encuesta", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Encuesta findUnique
   */
  export type EncuestaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaInclude<ExtArgs> | null
    /**
     * Filter, which Encuesta to fetch.
     */
    where: EncuestaWhereUniqueInput
  }

  /**
   * Encuesta findUniqueOrThrow
   */
  export type EncuestaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaInclude<ExtArgs> | null
    /**
     * Filter, which Encuesta to fetch.
     */
    where: EncuestaWhereUniqueInput
  }

  /**
   * Encuesta findFirst
   */
  export type EncuestaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaInclude<ExtArgs> | null
    /**
     * Filter, which Encuesta to fetch.
     */
    where?: EncuestaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Encuestas to fetch.
     */
    orderBy?: EncuestaOrderByWithRelationInput | EncuestaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Encuestas.
     */
    cursor?: EncuestaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Encuestas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Encuestas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Encuestas.
     */
    distinct?: EncuestaScalarFieldEnum | EncuestaScalarFieldEnum[]
  }

  /**
   * Encuesta findFirstOrThrow
   */
  export type EncuestaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaInclude<ExtArgs> | null
    /**
     * Filter, which Encuesta to fetch.
     */
    where?: EncuestaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Encuestas to fetch.
     */
    orderBy?: EncuestaOrderByWithRelationInput | EncuestaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Encuestas.
     */
    cursor?: EncuestaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Encuestas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Encuestas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Encuestas.
     */
    distinct?: EncuestaScalarFieldEnum | EncuestaScalarFieldEnum[]
  }

  /**
   * Encuesta findMany
   */
  export type EncuestaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaInclude<ExtArgs> | null
    /**
     * Filter, which Encuestas to fetch.
     */
    where?: EncuestaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Encuestas to fetch.
     */
    orderBy?: EncuestaOrderByWithRelationInput | EncuestaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Encuestas.
     */
    cursor?: EncuestaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Encuestas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Encuestas.
     */
    skip?: number
    distinct?: EncuestaScalarFieldEnum | EncuestaScalarFieldEnum[]
  }

  /**
   * Encuesta create
   */
  export type EncuestaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaInclude<ExtArgs> | null
    /**
     * The data needed to create a Encuesta.
     */
    data: XOR<EncuestaCreateInput, EncuestaUncheckedCreateInput>
  }

  /**
   * Encuesta createMany
   */
  export type EncuestaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Encuestas.
     */
    data: EncuestaCreateManyInput | EncuestaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Encuesta createManyAndReturn
   */
  export type EncuestaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * The data used to create many Encuestas.
     */
    data: EncuestaCreateManyInput | EncuestaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Encuesta update
   */
  export type EncuestaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaInclude<ExtArgs> | null
    /**
     * The data needed to update a Encuesta.
     */
    data: XOR<EncuestaUpdateInput, EncuestaUncheckedUpdateInput>
    /**
     * Choose, which Encuesta to update.
     */
    where: EncuestaWhereUniqueInput
  }

  /**
   * Encuesta updateMany
   */
  export type EncuestaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Encuestas.
     */
    data: XOR<EncuestaUpdateManyMutationInput, EncuestaUncheckedUpdateManyInput>
    /**
     * Filter which Encuestas to update
     */
    where?: EncuestaWhereInput
    /**
     * Limit how many Encuestas to update.
     */
    limit?: number
  }

  /**
   * Encuesta updateManyAndReturn
   */
  export type EncuestaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * The data used to update Encuestas.
     */
    data: XOR<EncuestaUpdateManyMutationInput, EncuestaUncheckedUpdateManyInput>
    /**
     * Filter which Encuestas to update
     */
    where?: EncuestaWhereInput
    /**
     * Limit how many Encuestas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Encuesta upsert
   */
  export type EncuestaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaInclude<ExtArgs> | null
    /**
     * The filter to search for the Encuesta to update in case it exists.
     */
    where: EncuestaWhereUniqueInput
    /**
     * In case the Encuesta found by the `where` argument doesn't exist, create a new Encuesta with this data.
     */
    create: XOR<EncuestaCreateInput, EncuestaUncheckedCreateInput>
    /**
     * In case the Encuesta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EncuestaUpdateInput, EncuestaUncheckedUpdateInput>
  }

  /**
   * Encuesta delete
   */
  export type EncuestaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaInclude<ExtArgs> | null
    /**
     * Filter which Encuesta to delete.
     */
    where: EncuestaWhereUniqueInput
  }

  /**
   * Encuesta deleteMany
   */
  export type EncuestaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Encuestas to delete
     */
    where?: EncuestaWhereInput
    /**
     * Limit how many Encuestas to delete.
     */
    limit?: number
  }

  /**
   * Encuesta.usuario
   */
  export type Encuesta$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Encuesta without action
   */
  export type EncuestaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Encuesta
     */
    select?: EncuestaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Encuesta
     */
    omit?: EncuestaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EncuestaInclude<ExtArgs> | null
  }


  /**
   * Model Notificacion
   */

  export type AggregateNotificacion = {
    _count: NotificacionCountAggregateOutputType | null
    _avg: NotificacionAvgAggregateOutputType | null
    _sum: NotificacionSumAggregateOutputType | null
    _min: NotificacionMinAggregateOutputType | null
    _max: NotificacionMaxAggregateOutputType | null
  }

  export type NotificacionAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    ticketId: number | null
  }

  export type NotificacionSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    ticketId: number | null
  }

  export type NotificacionMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    ticketId: number | null
    tipo: string | null
    titulo: string | null
    mensaje: string | null
    leido: boolean | null
    correoEnviado: boolean | null
    fechaEnvioCorreo: Date | null
    createdAt: Date | null
  }

  export type NotificacionMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    ticketId: number | null
    tipo: string | null
    titulo: string | null
    mensaje: string | null
    leido: boolean | null
    correoEnviado: boolean | null
    fechaEnvioCorreo: Date | null
    createdAt: Date | null
  }

  export type NotificacionCountAggregateOutputType = {
    id: number
    usuarioId: number
    ticketId: number
    tipo: number
    titulo: number
    mensaje: number
    leido: number
    correoEnviado: number
    fechaEnvioCorreo: number
    createdAt: number
    _all: number
  }


  export type NotificacionAvgAggregateInputType = {
    id?: true
    usuarioId?: true
    ticketId?: true
  }

  export type NotificacionSumAggregateInputType = {
    id?: true
    usuarioId?: true
    ticketId?: true
  }

  export type NotificacionMinAggregateInputType = {
    id?: true
    usuarioId?: true
    ticketId?: true
    tipo?: true
    titulo?: true
    mensaje?: true
    leido?: true
    correoEnviado?: true
    fechaEnvioCorreo?: true
    createdAt?: true
  }

  export type NotificacionMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    ticketId?: true
    tipo?: true
    titulo?: true
    mensaje?: true
    leido?: true
    correoEnviado?: true
    fechaEnvioCorreo?: true
    createdAt?: true
  }

  export type NotificacionCountAggregateInputType = {
    id?: true
    usuarioId?: true
    ticketId?: true
    tipo?: true
    titulo?: true
    mensaje?: true
    leido?: true
    correoEnviado?: true
    fechaEnvioCorreo?: true
    createdAt?: true
    _all?: true
  }

  export type NotificacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notificacion to aggregate.
     */
    where?: NotificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacions to fetch.
     */
    orderBy?: NotificacionOrderByWithRelationInput | NotificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notificacions
    **/
    _count?: true | NotificacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificacionMaxAggregateInputType
  }

  export type GetNotificacionAggregateType<T extends NotificacionAggregateArgs> = {
        [P in keyof T & keyof AggregateNotificacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotificacion[P]>
      : GetScalarType<T[P], AggregateNotificacion[P]>
  }




  export type NotificacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacionWhereInput
    orderBy?: NotificacionOrderByWithAggregationInput | NotificacionOrderByWithAggregationInput[]
    by: NotificacionScalarFieldEnum[] | NotificacionScalarFieldEnum
    having?: NotificacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificacionCountAggregateInputType | true
    _avg?: NotificacionAvgAggregateInputType
    _sum?: NotificacionSumAggregateInputType
    _min?: NotificacionMinAggregateInputType
    _max?: NotificacionMaxAggregateInputType
  }

  export type NotificacionGroupByOutputType = {
    id: number
    usuarioId: number
    ticketId: number | null
    tipo: string
    titulo: string
    mensaje: string
    leido: boolean
    correoEnviado: boolean
    fechaEnvioCorreo: Date | null
    createdAt: Date
    _count: NotificacionCountAggregateOutputType | null
    _avg: NotificacionAvgAggregateOutputType | null
    _sum: NotificacionSumAggregateOutputType | null
    _min: NotificacionMinAggregateOutputType | null
    _max: NotificacionMaxAggregateOutputType | null
  }

  type GetNotificacionGroupByPayload<T extends NotificacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificacionGroupByOutputType[P]>
            : GetScalarType<T[P], NotificacionGroupByOutputType[P]>
        }
      >
    >


  export type NotificacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    ticketId?: boolean
    tipo?: boolean
    titulo?: boolean
    mensaje?: boolean
    leido?: boolean
    correoEnviado?: boolean
    fechaEnvioCorreo?: boolean
    createdAt?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    ticket?: boolean | Notificacion$ticketArgs<ExtArgs>
  }, ExtArgs["result"]["notificacion"]>

  export type NotificacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    ticketId?: boolean
    tipo?: boolean
    titulo?: boolean
    mensaje?: boolean
    leido?: boolean
    correoEnviado?: boolean
    fechaEnvioCorreo?: boolean
    createdAt?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    ticket?: boolean | Notificacion$ticketArgs<ExtArgs>
  }, ExtArgs["result"]["notificacion"]>

  export type NotificacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    ticketId?: boolean
    tipo?: boolean
    titulo?: boolean
    mensaje?: boolean
    leido?: boolean
    correoEnviado?: boolean
    fechaEnvioCorreo?: boolean
    createdAt?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    ticket?: boolean | Notificacion$ticketArgs<ExtArgs>
  }, ExtArgs["result"]["notificacion"]>

  export type NotificacionSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    ticketId?: boolean
    tipo?: boolean
    titulo?: boolean
    mensaje?: boolean
    leido?: boolean
    correoEnviado?: boolean
    fechaEnvioCorreo?: boolean
    createdAt?: boolean
  }

  export type NotificacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuarioId" | "ticketId" | "tipo" | "titulo" | "mensaje" | "leido" | "correoEnviado" | "fechaEnvioCorreo" | "createdAt", ExtArgs["result"]["notificacion"]>
  export type NotificacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    ticket?: boolean | Notificacion$ticketArgs<ExtArgs>
  }
  export type NotificacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    ticket?: boolean | Notificacion$ticketArgs<ExtArgs>
  }
  export type NotificacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    ticket?: boolean | Notificacion$ticketArgs<ExtArgs>
  }

  export type $NotificacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notificacion"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      ticket: Prisma.$TicketPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      ticketId: number | null
      tipo: string
      titulo: string
      mensaje: string
      leido: boolean
      correoEnviado: boolean
      fechaEnvioCorreo: Date | null
      createdAt: Date
    }, ExtArgs["result"]["notificacion"]>
    composites: {}
  }

  type NotificacionGetPayload<S extends boolean | null | undefined | NotificacionDefaultArgs> = $Result.GetResult<Prisma.$NotificacionPayload, S>

  type NotificacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotificacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificacionCountAggregateInputType | true
    }

  export interface NotificacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notificacion'], meta: { name: 'Notificacion' } }
    /**
     * Find zero or one Notificacion that matches the filter.
     * @param {NotificacionFindUniqueArgs} args - Arguments to find a Notificacion
     * @example
     * // Get one Notificacion
     * const notificacion = await prisma.notificacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificacionFindUniqueArgs>(args: SelectSubset<T, NotificacionFindUniqueArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notificacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotificacionFindUniqueOrThrowArgs} args - Arguments to find a Notificacion
     * @example
     * // Get one Notificacion
     * const notificacion = await prisma.notificacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificacionFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notificacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionFindFirstArgs} args - Arguments to find a Notificacion
     * @example
     * // Get one Notificacion
     * const notificacion = await prisma.notificacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificacionFindFirstArgs>(args?: SelectSubset<T, NotificacionFindFirstArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notificacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionFindFirstOrThrowArgs} args - Arguments to find a Notificacion
     * @example
     * // Get one Notificacion
     * const notificacion = await prisma.notificacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificacionFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notificacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notificacions
     * const notificacions = await prisma.notificacion.findMany()
     * 
     * // Get first 10 Notificacions
     * const notificacions = await prisma.notificacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificacionWithIdOnly = await prisma.notificacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificacionFindManyArgs>(args?: SelectSubset<T, NotificacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notificacion.
     * @param {NotificacionCreateArgs} args - Arguments to create a Notificacion.
     * @example
     * // Create one Notificacion
     * const Notificacion = await prisma.notificacion.create({
     *   data: {
     *     // ... data to create a Notificacion
     *   }
     * })
     * 
     */
    create<T extends NotificacionCreateArgs>(args: SelectSubset<T, NotificacionCreateArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notificacions.
     * @param {NotificacionCreateManyArgs} args - Arguments to create many Notificacions.
     * @example
     * // Create many Notificacions
     * const notificacion = await prisma.notificacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificacionCreateManyArgs>(args?: SelectSubset<T, NotificacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notificacions and returns the data saved in the database.
     * @param {NotificacionCreateManyAndReturnArgs} args - Arguments to create many Notificacions.
     * @example
     * // Create many Notificacions
     * const notificacion = await prisma.notificacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notificacions and only return the `id`
     * const notificacionWithIdOnly = await prisma.notificacion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificacionCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notificacion.
     * @param {NotificacionDeleteArgs} args - Arguments to delete one Notificacion.
     * @example
     * // Delete one Notificacion
     * const Notificacion = await prisma.notificacion.delete({
     *   where: {
     *     // ... filter to delete one Notificacion
     *   }
     * })
     * 
     */
    delete<T extends NotificacionDeleteArgs>(args: SelectSubset<T, NotificacionDeleteArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notificacion.
     * @param {NotificacionUpdateArgs} args - Arguments to update one Notificacion.
     * @example
     * // Update one Notificacion
     * const notificacion = await prisma.notificacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificacionUpdateArgs>(args: SelectSubset<T, NotificacionUpdateArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notificacions.
     * @param {NotificacionDeleteManyArgs} args - Arguments to filter Notificacions to delete.
     * @example
     * // Delete a few Notificacions
     * const { count } = await prisma.notificacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificacionDeleteManyArgs>(args?: SelectSubset<T, NotificacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notificacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notificacions
     * const notificacion = await prisma.notificacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificacionUpdateManyArgs>(args: SelectSubset<T, NotificacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notificacions and returns the data updated in the database.
     * @param {NotificacionUpdateManyAndReturnArgs} args - Arguments to update many Notificacions.
     * @example
     * // Update many Notificacions
     * const notificacion = await prisma.notificacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notificacions and only return the `id`
     * const notificacionWithIdOnly = await prisma.notificacion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NotificacionUpdateManyAndReturnArgs>(args: SelectSubset<T, NotificacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notificacion.
     * @param {NotificacionUpsertArgs} args - Arguments to update or create a Notificacion.
     * @example
     * // Update or create a Notificacion
     * const notificacion = await prisma.notificacion.upsert({
     *   create: {
     *     // ... data to create a Notificacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notificacion we want to update
     *   }
     * })
     */
    upsert<T extends NotificacionUpsertArgs>(args: SelectSubset<T, NotificacionUpsertArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notificacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionCountArgs} args - Arguments to filter Notificacions to count.
     * @example
     * // Count the number of Notificacions
     * const count = await prisma.notificacion.count({
     *   where: {
     *     // ... the filter for the Notificacions we want to count
     *   }
     * })
    **/
    count<T extends NotificacionCountArgs>(
      args?: Subset<T, NotificacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notificacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificacionAggregateArgs>(args: Subset<T, NotificacionAggregateArgs>): Prisma.PrismaPromise<GetNotificacionAggregateType<T>>

    /**
     * Group by Notificacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificacionGroupByArgs['orderBy'] }
        : { orderBy?: NotificacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notificacion model
   */
  readonly fields: NotificacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notificacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ticket<T extends Notificacion$ticketArgs<ExtArgs> = {}>(args?: Subset<T, Notificacion$ticketArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notificacion model
   */
  interface NotificacionFieldRefs {
    readonly id: FieldRef<"Notificacion", 'Int'>
    readonly usuarioId: FieldRef<"Notificacion", 'Int'>
    readonly ticketId: FieldRef<"Notificacion", 'Int'>
    readonly tipo: FieldRef<"Notificacion", 'String'>
    readonly titulo: FieldRef<"Notificacion", 'String'>
    readonly mensaje: FieldRef<"Notificacion", 'String'>
    readonly leido: FieldRef<"Notificacion", 'Boolean'>
    readonly correoEnviado: FieldRef<"Notificacion", 'Boolean'>
    readonly fechaEnvioCorreo: FieldRef<"Notificacion", 'DateTime'>
    readonly createdAt: FieldRef<"Notificacion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notificacion findUnique
   */
  export type NotificacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * Filter, which Notificacion to fetch.
     */
    where: NotificacionWhereUniqueInput
  }

  /**
   * Notificacion findUniqueOrThrow
   */
  export type NotificacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * Filter, which Notificacion to fetch.
     */
    where: NotificacionWhereUniqueInput
  }

  /**
   * Notificacion findFirst
   */
  export type NotificacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * Filter, which Notificacion to fetch.
     */
    where?: NotificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacions to fetch.
     */
    orderBy?: NotificacionOrderByWithRelationInput | NotificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notificacions.
     */
    cursor?: NotificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notificacions.
     */
    distinct?: NotificacionScalarFieldEnum | NotificacionScalarFieldEnum[]
  }

  /**
   * Notificacion findFirstOrThrow
   */
  export type NotificacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * Filter, which Notificacion to fetch.
     */
    where?: NotificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacions to fetch.
     */
    orderBy?: NotificacionOrderByWithRelationInput | NotificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notificacions.
     */
    cursor?: NotificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notificacions.
     */
    distinct?: NotificacionScalarFieldEnum | NotificacionScalarFieldEnum[]
  }

  /**
   * Notificacion findMany
   */
  export type NotificacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * Filter, which Notificacions to fetch.
     */
    where?: NotificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacions to fetch.
     */
    orderBy?: NotificacionOrderByWithRelationInput | NotificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notificacions.
     */
    cursor?: NotificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacions.
     */
    skip?: number
    distinct?: NotificacionScalarFieldEnum | NotificacionScalarFieldEnum[]
  }

  /**
   * Notificacion create
   */
  export type NotificacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * The data needed to create a Notificacion.
     */
    data: XOR<NotificacionCreateInput, NotificacionUncheckedCreateInput>
  }

  /**
   * Notificacion createMany
   */
  export type NotificacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notificacions.
     */
    data: NotificacionCreateManyInput | NotificacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notificacion createManyAndReturn
   */
  export type NotificacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * The data used to create many Notificacions.
     */
    data: NotificacionCreateManyInput | NotificacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notificacion update
   */
  export type NotificacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * The data needed to update a Notificacion.
     */
    data: XOR<NotificacionUpdateInput, NotificacionUncheckedUpdateInput>
    /**
     * Choose, which Notificacion to update.
     */
    where: NotificacionWhereUniqueInput
  }

  /**
   * Notificacion updateMany
   */
  export type NotificacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notificacions.
     */
    data: XOR<NotificacionUpdateManyMutationInput, NotificacionUncheckedUpdateManyInput>
    /**
     * Filter which Notificacions to update
     */
    where?: NotificacionWhereInput
    /**
     * Limit how many Notificacions to update.
     */
    limit?: number
  }

  /**
   * Notificacion updateManyAndReturn
   */
  export type NotificacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * The data used to update Notificacions.
     */
    data: XOR<NotificacionUpdateManyMutationInput, NotificacionUncheckedUpdateManyInput>
    /**
     * Filter which Notificacions to update
     */
    where?: NotificacionWhereInput
    /**
     * Limit how many Notificacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notificacion upsert
   */
  export type NotificacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * The filter to search for the Notificacion to update in case it exists.
     */
    where: NotificacionWhereUniqueInput
    /**
     * In case the Notificacion found by the `where` argument doesn't exist, create a new Notificacion with this data.
     */
    create: XOR<NotificacionCreateInput, NotificacionUncheckedCreateInput>
    /**
     * In case the Notificacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificacionUpdateInput, NotificacionUncheckedUpdateInput>
  }

  /**
   * Notificacion delete
   */
  export type NotificacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * Filter which Notificacion to delete.
     */
    where: NotificacionWhereUniqueInput
  }

  /**
   * Notificacion deleteMany
   */
  export type NotificacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notificacions to delete
     */
    where?: NotificacionWhereInput
    /**
     * Limit how many Notificacions to delete.
     */
    limit?: number
  }

  /**
   * Notificacion.ticket
   */
  export type Notificacion$ticketArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    where?: TicketWhereInput
  }

  /**
   * Notificacion without action
   */
  export type NotificacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacion
     */
    omit?: NotificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
  }


  /**
   * Model UsuarioEnCopia
   */

  export type AggregateUsuarioEnCopia = {
    _count: UsuarioEnCopiaCountAggregateOutputType | null
    _avg: UsuarioEnCopiaAvgAggregateOutputType | null
    _sum: UsuarioEnCopiaSumAggregateOutputType | null
    _min: UsuarioEnCopiaMinAggregateOutputType | null
    _max: UsuarioEnCopiaMaxAggregateOutputType | null
  }

  export type UsuarioEnCopiaAvgAggregateOutputType = {
    ticketId: number | null
    usuarioId: number | null
    agregadoPor: number | null
  }

  export type UsuarioEnCopiaSumAggregateOutputType = {
    ticketId: number | null
    usuarioId: number | null
    agregadoPor: number | null
  }

  export type UsuarioEnCopiaMinAggregateOutputType = {
    ticketId: number | null
    usuarioId: number | null
    agregadoPor: number | null
    createdAt: Date | null
  }

  export type UsuarioEnCopiaMaxAggregateOutputType = {
    ticketId: number | null
    usuarioId: number | null
    agregadoPor: number | null
    createdAt: Date | null
  }

  export type UsuarioEnCopiaCountAggregateOutputType = {
    ticketId: number
    usuarioId: number
    agregadoPor: number
    createdAt: number
    _all: number
  }


  export type UsuarioEnCopiaAvgAggregateInputType = {
    ticketId?: true
    usuarioId?: true
    agregadoPor?: true
  }

  export type UsuarioEnCopiaSumAggregateInputType = {
    ticketId?: true
    usuarioId?: true
    agregadoPor?: true
  }

  export type UsuarioEnCopiaMinAggregateInputType = {
    ticketId?: true
    usuarioId?: true
    agregadoPor?: true
    createdAt?: true
  }

  export type UsuarioEnCopiaMaxAggregateInputType = {
    ticketId?: true
    usuarioId?: true
    agregadoPor?: true
    createdAt?: true
  }

  export type UsuarioEnCopiaCountAggregateInputType = {
    ticketId?: true
    usuarioId?: true
    agregadoPor?: true
    createdAt?: true
    _all?: true
  }

  export type UsuarioEnCopiaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsuarioEnCopia to aggregate.
     */
    where?: UsuarioEnCopiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioEnCopias to fetch.
     */
    orderBy?: UsuarioEnCopiaOrderByWithRelationInput | UsuarioEnCopiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioEnCopiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioEnCopias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioEnCopias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UsuarioEnCopias
    **/
    _count?: true | UsuarioEnCopiaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioEnCopiaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioEnCopiaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioEnCopiaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioEnCopiaMaxAggregateInputType
  }

  export type GetUsuarioEnCopiaAggregateType<T extends UsuarioEnCopiaAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarioEnCopia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarioEnCopia[P]>
      : GetScalarType<T[P], AggregateUsuarioEnCopia[P]>
  }




  export type UsuarioEnCopiaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioEnCopiaWhereInput
    orderBy?: UsuarioEnCopiaOrderByWithAggregationInput | UsuarioEnCopiaOrderByWithAggregationInput[]
    by: UsuarioEnCopiaScalarFieldEnum[] | UsuarioEnCopiaScalarFieldEnum
    having?: UsuarioEnCopiaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioEnCopiaCountAggregateInputType | true
    _avg?: UsuarioEnCopiaAvgAggregateInputType
    _sum?: UsuarioEnCopiaSumAggregateInputType
    _min?: UsuarioEnCopiaMinAggregateInputType
    _max?: UsuarioEnCopiaMaxAggregateInputType
  }

  export type UsuarioEnCopiaGroupByOutputType = {
    ticketId: number
    usuarioId: number
    agregadoPor: number
    createdAt: Date
    _count: UsuarioEnCopiaCountAggregateOutputType | null
    _avg: UsuarioEnCopiaAvgAggregateOutputType | null
    _sum: UsuarioEnCopiaSumAggregateOutputType | null
    _min: UsuarioEnCopiaMinAggregateOutputType | null
    _max: UsuarioEnCopiaMaxAggregateOutputType | null
  }

  type GetUsuarioEnCopiaGroupByPayload<T extends UsuarioEnCopiaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioEnCopiaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioEnCopiaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioEnCopiaGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioEnCopiaGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioEnCopiaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ticketId?: boolean
    usuarioId?: boolean
    agregadoPor?: boolean
    createdAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioEnCopia"]>

  export type UsuarioEnCopiaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ticketId?: boolean
    usuarioId?: boolean
    agregadoPor?: boolean
    createdAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioEnCopia"]>

  export type UsuarioEnCopiaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ticketId?: boolean
    usuarioId?: boolean
    agregadoPor?: boolean
    createdAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioEnCopia"]>

  export type UsuarioEnCopiaSelectScalar = {
    ticketId?: boolean
    usuarioId?: boolean
    agregadoPor?: boolean
    createdAt?: boolean
  }

  export type UsuarioEnCopiaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ticketId" | "usuarioId" | "agregadoPor" | "createdAt", ExtArgs["result"]["usuarioEnCopia"]>
  export type UsuarioEnCopiaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type UsuarioEnCopiaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type UsuarioEnCopiaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $UsuarioEnCopiaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UsuarioEnCopia"
    objects: {
      ticket: Prisma.$TicketPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ticketId: number
      usuarioId: number
      agregadoPor: number
      createdAt: Date
    }, ExtArgs["result"]["usuarioEnCopia"]>
    composites: {}
  }

  type UsuarioEnCopiaGetPayload<S extends boolean | null | undefined | UsuarioEnCopiaDefaultArgs> = $Result.GetResult<Prisma.$UsuarioEnCopiaPayload, S>

  type UsuarioEnCopiaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioEnCopiaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioEnCopiaCountAggregateInputType | true
    }

  export interface UsuarioEnCopiaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UsuarioEnCopia'], meta: { name: 'UsuarioEnCopia' } }
    /**
     * Find zero or one UsuarioEnCopia that matches the filter.
     * @param {UsuarioEnCopiaFindUniqueArgs} args - Arguments to find a UsuarioEnCopia
     * @example
     * // Get one UsuarioEnCopia
     * const usuarioEnCopia = await prisma.usuarioEnCopia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioEnCopiaFindUniqueArgs>(args: SelectSubset<T, UsuarioEnCopiaFindUniqueArgs<ExtArgs>>): Prisma__UsuarioEnCopiaClient<$Result.GetResult<Prisma.$UsuarioEnCopiaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UsuarioEnCopia that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioEnCopiaFindUniqueOrThrowArgs} args - Arguments to find a UsuarioEnCopia
     * @example
     * // Get one UsuarioEnCopia
     * const usuarioEnCopia = await prisma.usuarioEnCopia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioEnCopiaFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioEnCopiaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioEnCopiaClient<$Result.GetResult<Prisma.$UsuarioEnCopiaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UsuarioEnCopia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEnCopiaFindFirstArgs} args - Arguments to find a UsuarioEnCopia
     * @example
     * // Get one UsuarioEnCopia
     * const usuarioEnCopia = await prisma.usuarioEnCopia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioEnCopiaFindFirstArgs>(args?: SelectSubset<T, UsuarioEnCopiaFindFirstArgs<ExtArgs>>): Prisma__UsuarioEnCopiaClient<$Result.GetResult<Prisma.$UsuarioEnCopiaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UsuarioEnCopia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEnCopiaFindFirstOrThrowArgs} args - Arguments to find a UsuarioEnCopia
     * @example
     * // Get one UsuarioEnCopia
     * const usuarioEnCopia = await prisma.usuarioEnCopia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioEnCopiaFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioEnCopiaFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioEnCopiaClient<$Result.GetResult<Prisma.$UsuarioEnCopiaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UsuarioEnCopias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEnCopiaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UsuarioEnCopias
     * const usuarioEnCopias = await prisma.usuarioEnCopia.findMany()
     * 
     * // Get first 10 UsuarioEnCopias
     * const usuarioEnCopias = await prisma.usuarioEnCopia.findMany({ take: 10 })
     * 
     * // Only select the `ticketId`
     * const usuarioEnCopiaWithTicketIdOnly = await prisma.usuarioEnCopia.findMany({ select: { ticketId: true } })
     * 
     */
    findMany<T extends UsuarioEnCopiaFindManyArgs>(args?: SelectSubset<T, UsuarioEnCopiaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioEnCopiaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UsuarioEnCopia.
     * @param {UsuarioEnCopiaCreateArgs} args - Arguments to create a UsuarioEnCopia.
     * @example
     * // Create one UsuarioEnCopia
     * const UsuarioEnCopia = await prisma.usuarioEnCopia.create({
     *   data: {
     *     // ... data to create a UsuarioEnCopia
     *   }
     * })
     * 
     */
    create<T extends UsuarioEnCopiaCreateArgs>(args: SelectSubset<T, UsuarioEnCopiaCreateArgs<ExtArgs>>): Prisma__UsuarioEnCopiaClient<$Result.GetResult<Prisma.$UsuarioEnCopiaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UsuarioEnCopias.
     * @param {UsuarioEnCopiaCreateManyArgs} args - Arguments to create many UsuarioEnCopias.
     * @example
     * // Create many UsuarioEnCopias
     * const usuarioEnCopia = await prisma.usuarioEnCopia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioEnCopiaCreateManyArgs>(args?: SelectSubset<T, UsuarioEnCopiaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UsuarioEnCopias and returns the data saved in the database.
     * @param {UsuarioEnCopiaCreateManyAndReturnArgs} args - Arguments to create many UsuarioEnCopias.
     * @example
     * // Create many UsuarioEnCopias
     * const usuarioEnCopia = await prisma.usuarioEnCopia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UsuarioEnCopias and only return the `ticketId`
     * const usuarioEnCopiaWithTicketIdOnly = await prisma.usuarioEnCopia.createManyAndReturn({
     *   select: { ticketId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioEnCopiaCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioEnCopiaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioEnCopiaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UsuarioEnCopia.
     * @param {UsuarioEnCopiaDeleteArgs} args - Arguments to delete one UsuarioEnCopia.
     * @example
     * // Delete one UsuarioEnCopia
     * const UsuarioEnCopia = await prisma.usuarioEnCopia.delete({
     *   where: {
     *     // ... filter to delete one UsuarioEnCopia
     *   }
     * })
     * 
     */
    delete<T extends UsuarioEnCopiaDeleteArgs>(args: SelectSubset<T, UsuarioEnCopiaDeleteArgs<ExtArgs>>): Prisma__UsuarioEnCopiaClient<$Result.GetResult<Prisma.$UsuarioEnCopiaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UsuarioEnCopia.
     * @param {UsuarioEnCopiaUpdateArgs} args - Arguments to update one UsuarioEnCopia.
     * @example
     * // Update one UsuarioEnCopia
     * const usuarioEnCopia = await prisma.usuarioEnCopia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioEnCopiaUpdateArgs>(args: SelectSubset<T, UsuarioEnCopiaUpdateArgs<ExtArgs>>): Prisma__UsuarioEnCopiaClient<$Result.GetResult<Prisma.$UsuarioEnCopiaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UsuarioEnCopias.
     * @param {UsuarioEnCopiaDeleteManyArgs} args - Arguments to filter UsuarioEnCopias to delete.
     * @example
     * // Delete a few UsuarioEnCopias
     * const { count } = await prisma.usuarioEnCopia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioEnCopiaDeleteManyArgs>(args?: SelectSubset<T, UsuarioEnCopiaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UsuarioEnCopias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEnCopiaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UsuarioEnCopias
     * const usuarioEnCopia = await prisma.usuarioEnCopia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioEnCopiaUpdateManyArgs>(args: SelectSubset<T, UsuarioEnCopiaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UsuarioEnCopias and returns the data updated in the database.
     * @param {UsuarioEnCopiaUpdateManyAndReturnArgs} args - Arguments to update many UsuarioEnCopias.
     * @example
     * // Update many UsuarioEnCopias
     * const usuarioEnCopia = await prisma.usuarioEnCopia.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UsuarioEnCopias and only return the `ticketId`
     * const usuarioEnCopiaWithTicketIdOnly = await prisma.usuarioEnCopia.updateManyAndReturn({
     *   select: { ticketId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioEnCopiaUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioEnCopiaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioEnCopiaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UsuarioEnCopia.
     * @param {UsuarioEnCopiaUpsertArgs} args - Arguments to update or create a UsuarioEnCopia.
     * @example
     * // Update or create a UsuarioEnCopia
     * const usuarioEnCopia = await prisma.usuarioEnCopia.upsert({
     *   create: {
     *     // ... data to create a UsuarioEnCopia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UsuarioEnCopia we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioEnCopiaUpsertArgs>(args: SelectSubset<T, UsuarioEnCopiaUpsertArgs<ExtArgs>>): Prisma__UsuarioEnCopiaClient<$Result.GetResult<Prisma.$UsuarioEnCopiaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UsuarioEnCopias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEnCopiaCountArgs} args - Arguments to filter UsuarioEnCopias to count.
     * @example
     * // Count the number of UsuarioEnCopias
     * const count = await prisma.usuarioEnCopia.count({
     *   where: {
     *     // ... the filter for the UsuarioEnCopias we want to count
     *   }
     * })
    **/
    count<T extends UsuarioEnCopiaCountArgs>(
      args?: Subset<T, UsuarioEnCopiaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioEnCopiaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UsuarioEnCopia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEnCopiaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioEnCopiaAggregateArgs>(args: Subset<T, UsuarioEnCopiaAggregateArgs>): Prisma.PrismaPromise<GetUsuarioEnCopiaAggregateType<T>>

    /**
     * Group by UsuarioEnCopia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEnCopiaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioEnCopiaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioEnCopiaGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioEnCopiaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioEnCopiaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioEnCopiaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UsuarioEnCopia model
   */
  readonly fields: UsuarioEnCopiaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UsuarioEnCopia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioEnCopiaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ticket<T extends TicketDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TicketDefaultArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UsuarioEnCopia model
   */
  interface UsuarioEnCopiaFieldRefs {
    readonly ticketId: FieldRef<"UsuarioEnCopia", 'Int'>
    readonly usuarioId: FieldRef<"UsuarioEnCopia", 'Int'>
    readonly agregadoPor: FieldRef<"UsuarioEnCopia", 'Int'>
    readonly createdAt: FieldRef<"UsuarioEnCopia", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UsuarioEnCopia findUnique
   */
  export type UsuarioEnCopiaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEnCopia to fetch.
     */
    where: UsuarioEnCopiaWhereUniqueInput
  }

  /**
   * UsuarioEnCopia findUniqueOrThrow
   */
  export type UsuarioEnCopiaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEnCopia to fetch.
     */
    where: UsuarioEnCopiaWhereUniqueInput
  }

  /**
   * UsuarioEnCopia findFirst
   */
  export type UsuarioEnCopiaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEnCopia to fetch.
     */
    where?: UsuarioEnCopiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioEnCopias to fetch.
     */
    orderBy?: UsuarioEnCopiaOrderByWithRelationInput | UsuarioEnCopiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsuarioEnCopias.
     */
    cursor?: UsuarioEnCopiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioEnCopias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioEnCopias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsuarioEnCopias.
     */
    distinct?: UsuarioEnCopiaScalarFieldEnum | UsuarioEnCopiaScalarFieldEnum[]
  }

  /**
   * UsuarioEnCopia findFirstOrThrow
   */
  export type UsuarioEnCopiaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEnCopia to fetch.
     */
    where?: UsuarioEnCopiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioEnCopias to fetch.
     */
    orderBy?: UsuarioEnCopiaOrderByWithRelationInput | UsuarioEnCopiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsuarioEnCopias.
     */
    cursor?: UsuarioEnCopiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioEnCopias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioEnCopias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsuarioEnCopias.
     */
    distinct?: UsuarioEnCopiaScalarFieldEnum | UsuarioEnCopiaScalarFieldEnum[]
  }

  /**
   * UsuarioEnCopia findMany
   */
  export type UsuarioEnCopiaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEnCopias to fetch.
     */
    where?: UsuarioEnCopiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioEnCopias to fetch.
     */
    orderBy?: UsuarioEnCopiaOrderByWithRelationInput | UsuarioEnCopiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UsuarioEnCopias.
     */
    cursor?: UsuarioEnCopiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioEnCopias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioEnCopias.
     */
    skip?: number
    distinct?: UsuarioEnCopiaScalarFieldEnum | UsuarioEnCopiaScalarFieldEnum[]
  }

  /**
   * UsuarioEnCopia create
   */
  export type UsuarioEnCopiaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaInclude<ExtArgs> | null
    /**
     * The data needed to create a UsuarioEnCopia.
     */
    data: XOR<UsuarioEnCopiaCreateInput, UsuarioEnCopiaUncheckedCreateInput>
  }

  /**
   * UsuarioEnCopia createMany
   */
  export type UsuarioEnCopiaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UsuarioEnCopias.
     */
    data: UsuarioEnCopiaCreateManyInput | UsuarioEnCopiaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UsuarioEnCopia createManyAndReturn
   */
  export type UsuarioEnCopiaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * The data used to create many UsuarioEnCopias.
     */
    data: UsuarioEnCopiaCreateManyInput | UsuarioEnCopiaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UsuarioEnCopia update
   */
  export type UsuarioEnCopiaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaInclude<ExtArgs> | null
    /**
     * The data needed to update a UsuarioEnCopia.
     */
    data: XOR<UsuarioEnCopiaUpdateInput, UsuarioEnCopiaUncheckedUpdateInput>
    /**
     * Choose, which UsuarioEnCopia to update.
     */
    where: UsuarioEnCopiaWhereUniqueInput
  }

  /**
   * UsuarioEnCopia updateMany
   */
  export type UsuarioEnCopiaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UsuarioEnCopias.
     */
    data: XOR<UsuarioEnCopiaUpdateManyMutationInput, UsuarioEnCopiaUncheckedUpdateManyInput>
    /**
     * Filter which UsuarioEnCopias to update
     */
    where?: UsuarioEnCopiaWhereInput
    /**
     * Limit how many UsuarioEnCopias to update.
     */
    limit?: number
  }

  /**
   * UsuarioEnCopia updateManyAndReturn
   */
  export type UsuarioEnCopiaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * The data used to update UsuarioEnCopias.
     */
    data: XOR<UsuarioEnCopiaUpdateManyMutationInput, UsuarioEnCopiaUncheckedUpdateManyInput>
    /**
     * Filter which UsuarioEnCopias to update
     */
    where?: UsuarioEnCopiaWhereInput
    /**
     * Limit how many UsuarioEnCopias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UsuarioEnCopia upsert
   */
  export type UsuarioEnCopiaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaInclude<ExtArgs> | null
    /**
     * The filter to search for the UsuarioEnCopia to update in case it exists.
     */
    where: UsuarioEnCopiaWhereUniqueInput
    /**
     * In case the UsuarioEnCopia found by the `where` argument doesn't exist, create a new UsuarioEnCopia with this data.
     */
    create: XOR<UsuarioEnCopiaCreateInput, UsuarioEnCopiaUncheckedCreateInput>
    /**
     * In case the UsuarioEnCopia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioEnCopiaUpdateInput, UsuarioEnCopiaUncheckedUpdateInput>
  }

  /**
   * UsuarioEnCopia delete
   */
  export type UsuarioEnCopiaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaInclude<ExtArgs> | null
    /**
     * Filter which UsuarioEnCopia to delete.
     */
    where: UsuarioEnCopiaWhereUniqueInput
  }

  /**
   * UsuarioEnCopia deleteMany
   */
  export type UsuarioEnCopiaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsuarioEnCopias to delete
     */
    where?: UsuarioEnCopiaWhereInput
    /**
     * Limit how many UsuarioEnCopias to delete.
     */
    limit?: number
  }

  /**
   * UsuarioEnCopia without action
   */
  export type UsuarioEnCopiaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEnCopia
     */
    select?: UsuarioEnCopiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEnCopia
     */
    omit?: UsuarioEnCopiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEnCopiaInclude<ExtArgs> | null
  }


  /**
   * Model ConfiguracionSistema
   */

  export type AggregateConfiguracionSistema = {
    _count: ConfiguracionSistemaCountAggregateOutputType | null
    _avg: ConfiguracionSistemaAvgAggregateOutputType | null
    _sum: ConfiguracionSistemaSumAggregateOutputType | null
    _min: ConfiguracionSistemaMinAggregateOutputType | null
    _max: ConfiguracionSistemaMaxAggregateOutputType | null
  }

  export type ConfiguracionSistemaAvgAggregateOutputType = {
    id: number | null
    actualizadoPor: number | null
  }

  export type ConfiguracionSistemaSumAggregateOutputType = {
    id: number | null
    actualizadoPor: number | null
  }

  export type ConfiguracionSistemaMinAggregateOutputType = {
    id: number | null
    claveConfiguracion: string | null
    valorConfiguracion: string | null
    tipoDato: string | null
    actualizadoPor: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConfiguracionSistemaMaxAggregateOutputType = {
    id: number | null
    claveConfiguracion: string | null
    valorConfiguracion: string | null
    tipoDato: string | null
    actualizadoPor: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConfiguracionSistemaCountAggregateOutputType = {
    id: number
    claveConfiguracion: number
    valorConfiguracion: number
    tipoDato: number
    actualizadoPor: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ConfiguracionSistemaAvgAggregateInputType = {
    id?: true
    actualizadoPor?: true
  }

  export type ConfiguracionSistemaSumAggregateInputType = {
    id?: true
    actualizadoPor?: true
  }

  export type ConfiguracionSistemaMinAggregateInputType = {
    id?: true
    claveConfiguracion?: true
    valorConfiguracion?: true
    tipoDato?: true
    actualizadoPor?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConfiguracionSistemaMaxAggregateInputType = {
    id?: true
    claveConfiguracion?: true
    valorConfiguracion?: true
    tipoDato?: true
    actualizadoPor?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConfiguracionSistemaCountAggregateInputType = {
    id?: true
    claveConfiguracion?: true
    valorConfiguracion?: true
    tipoDato?: true
    actualizadoPor?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ConfiguracionSistemaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfiguracionSistema to aggregate.
     */
    where?: ConfiguracionSistemaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracionSistemas to fetch.
     */
    orderBy?: ConfiguracionSistemaOrderByWithRelationInput | ConfiguracionSistemaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConfiguracionSistemaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracionSistemas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracionSistemas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ConfiguracionSistemas
    **/
    _count?: true | ConfiguracionSistemaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConfiguracionSistemaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConfiguracionSistemaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfiguracionSistemaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfiguracionSistemaMaxAggregateInputType
  }

  export type GetConfiguracionSistemaAggregateType<T extends ConfiguracionSistemaAggregateArgs> = {
        [P in keyof T & keyof AggregateConfiguracionSistema]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfiguracionSistema[P]>
      : GetScalarType<T[P], AggregateConfiguracionSistema[P]>
  }




  export type ConfiguracionSistemaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfiguracionSistemaWhereInput
    orderBy?: ConfiguracionSistemaOrderByWithAggregationInput | ConfiguracionSistemaOrderByWithAggregationInput[]
    by: ConfiguracionSistemaScalarFieldEnum[] | ConfiguracionSistemaScalarFieldEnum
    having?: ConfiguracionSistemaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfiguracionSistemaCountAggregateInputType | true
    _avg?: ConfiguracionSistemaAvgAggregateInputType
    _sum?: ConfiguracionSistemaSumAggregateInputType
    _min?: ConfiguracionSistemaMinAggregateInputType
    _max?: ConfiguracionSistemaMaxAggregateInputType
  }

  export type ConfiguracionSistemaGroupByOutputType = {
    id: number
    claveConfiguracion: string
    valorConfiguracion: string
    tipoDato: string
    actualizadoPor: number
    createdAt: Date
    updatedAt: Date | null
    _count: ConfiguracionSistemaCountAggregateOutputType | null
    _avg: ConfiguracionSistemaAvgAggregateOutputType | null
    _sum: ConfiguracionSistemaSumAggregateOutputType | null
    _min: ConfiguracionSistemaMinAggregateOutputType | null
    _max: ConfiguracionSistemaMaxAggregateOutputType | null
  }

  type GetConfiguracionSistemaGroupByPayload<T extends ConfiguracionSistemaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfiguracionSistemaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfiguracionSistemaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfiguracionSistemaGroupByOutputType[P]>
            : GetScalarType<T[P], ConfiguracionSistemaGroupByOutputType[P]>
        }
      >
    >


  export type ConfiguracionSistemaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    claveConfiguracion?: boolean
    valorConfiguracion?: boolean
    tipoDato?: boolean
    actualizadoPor?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configuracionSistema"]>

  export type ConfiguracionSistemaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    claveConfiguracion?: boolean
    valorConfiguracion?: boolean
    tipoDato?: boolean
    actualizadoPor?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configuracionSistema"]>

  export type ConfiguracionSistemaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    claveConfiguracion?: boolean
    valorConfiguracion?: boolean
    tipoDato?: boolean
    actualizadoPor?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configuracionSistema"]>

  export type ConfiguracionSistemaSelectScalar = {
    id?: boolean
    claveConfiguracion?: boolean
    valorConfiguracion?: boolean
    tipoDato?: boolean
    actualizadoPor?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ConfiguracionSistemaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "claveConfiguracion" | "valorConfiguracion" | "tipoDato" | "actualizadoPor" | "createdAt" | "updatedAt", ExtArgs["result"]["configuracionSistema"]>
  export type ConfiguracionSistemaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type ConfiguracionSistemaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type ConfiguracionSistemaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $ConfiguracionSistemaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ConfiguracionSistema"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      claveConfiguracion: string
      valorConfiguracion: string
      tipoDato: string
      actualizadoPor: number
      createdAt: Date
      updatedAt: Date | null
    }, ExtArgs["result"]["configuracionSistema"]>
    composites: {}
  }

  type ConfiguracionSistemaGetPayload<S extends boolean | null | undefined | ConfiguracionSistemaDefaultArgs> = $Result.GetResult<Prisma.$ConfiguracionSistemaPayload, S>

  type ConfiguracionSistemaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ConfiguracionSistemaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConfiguracionSistemaCountAggregateInputType | true
    }

  export interface ConfiguracionSistemaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ConfiguracionSistema'], meta: { name: 'ConfiguracionSistema' } }
    /**
     * Find zero or one ConfiguracionSistema that matches the filter.
     * @param {ConfiguracionSistemaFindUniqueArgs} args - Arguments to find a ConfiguracionSistema
     * @example
     * // Get one ConfiguracionSistema
     * const configuracionSistema = await prisma.configuracionSistema.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConfiguracionSistemaFindUniqueArgs>(args: SelectSubset<T, ConfiguracionSistemaFindUniqueArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ConfiguracionSistema that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ConfiguracionSistemaFindUniqueOrThrowArgs} args - Arguments to find a ConfiguracionSistema
     * @example
     * // Get one ConfiguracionSistema
     * const configuracionSistema = await prisma.configuracionSistema.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConfiguracionSistemaFindUniqueOrThrowArgs>(args: SelectSubset<T, ConfiguracionSistemaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConfiguracionSistema that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaFindFirstArgs} args - Arguments to find a ConfiguracionSistema
     * @example
     * // Get one ConfiguracionSistema
     * const configuracionSistema = await prisma.configuracionSistema.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConfiguracionSistemaFindFirstArgs>(args?: SelectSubset<T, ConfiguracionSistemaFindFirstArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConfiguracionSistema that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaFindFirstOrThrowArgs} args - Arguments to find a ConfiguracionSistema
     * @example
     * // Get one ConfiguracionSistema
     * const configuracionSistema = await prisma.configuracionSistema.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConfiguracionSistemaFindFirstOrThrowArgs>(args?: SelectSubset<T, ConfiguracionSistemaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ConfiguracionSistemas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ConfiguracionSistemas
     * const configuracionSistemas = await prisma.configuracionSistema.findMany()
     * 
     * // Get first 10 ConfiguracionSistemas
     * const configuracionSistemas = await prisma.configuracionSistema.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configuracionSistemaWithIdOnly = await prisma.configuracionSistema.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConfiguracionSistemaFindManyArgs>(args?: SelectSubset<T, ConfiguracionSistemaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ConfiguracionSistema.
     * @param {ConfiguracionSistemaCreateArgs} args - Arguments to create a ConfiguracionSistema.
     * @example
     * // Create one ConfiguracionSistema
     * const ConfiguracionSistema = await prisma.configuracionSistema.create({
     *   data: {
     *     // ... data to create a ConfiguracionSistema
     *   }
     * })
     * 
     */
    create<T extends ConfiguracionSistemaCreateArgs>(args: SelectSubset<T, ConfiguracionSistemaCreateArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ConfiguracionSistemas.
     * @param {ConfiguracionSistemaCreateManyArgs} args - Arguments to create many ConfiguracionSistemas.
     * @example
     * // Create many ConfiguracionSistemas
     * const configuracionSistema = await prisma.configuracionSistema.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConfiguracionSistemaCreateManyArgs>(args?: SelectSubset<T, ConfiguracionSistemaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ConfiguracionSistemas and returns the data saved in the database.
     * @param {ConfiguracionSistemaCreateManyAndReturnArgs} args - Arguments to create many ConfiguracionSistemas.
     * @example
     * // Create many ConfiguracionSistemas
     * const configuracionSistema = await prisma.configuracionSistema.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ConfiguracionSistemas and only return the `id`
     * const configuracionSistemaWithIdOnly = await prisma.configuracionSistema.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConfiguracionSistemaCreateManyAndReturnArgs>(args?: SelectSubset<T, ConfiguracionSistemaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ConfiguracionSistema.
     * @param {ConfiguracionSistemaDeleteArgs} args - Arguments to delete one ConfiguracionSistema.
     * @example
     * // Delete one ConfiguracionSistema
     * const ConfiguracionSistema = await prisma.configuracionSistema.delete({
     *   where: {
     *     // ... filter to delete one ConfiguracionSistema
     *   }
     * })
     * 
     */
    delete<T extends ConfiguracionSistemaDeleteArgs>(args: SelectSubset<T, ConfiguracionSistemaDeleteArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ConfiguracionSistema.
     * @param {ConfiguracionSistemaUpdateArgs} args - Arguments to update one ConfiguracionSistema.
     * @example
     * // Update one ConfiguracionSistema
     * const configuracionSistema = await prisma.configuracionSistema.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConfiguracionSistemaUpdateArgs>(args: SelectSubset<T, ConfiguracionSistemaUpdateArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ConfiguracionSistemas.
     * @param {ConfiguracionSistemaDeleteManyArgs} args - Arguments to filter ConfiguracionSistemas to delete.
     * @example
     * // Delete a few ConfiguracionSistemas
     * const { count } = await prisma.configuracionSistema.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConfiguracionSistemaDeleteManyArgs>(args?: SelectSubset<T, ConfiguracionSistemaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConfiguracionSistemas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ConfiguracionSistemas
     * const configuracionSistema = await prisma.configuracionSistema.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConfiguracionSistemaUpdateManyArgs>(args: SelectSubset<T, ConfiguracionSistemaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConfiguracionSistemas and returns the data updated in the database.
     * @param {ConfiguracionSistemaUpdateManyAndReturnArgs} args - Arguments to update many ConfiguracionSistemas.
     * @example
     * // Update many ConfiguracionSistemas
     * const configuracionSistema = await prisma.configuracionSistema.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ConfiguracionSistemas and only return the `id`
     * const configuracionSistemaWithIdOnly = await prisma.configuracionSistema.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ConfiguracionSistemaUpdateManyAndReturnArgs>(args: SelectSubset<T, ConfiguracionSistemaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ConfiguracionSistema.
     * @param {ConfiguracionSistemaUpsertArgs} args - Arguments to update or create a ConfiguracionSistema.
     * @example
     * // Update or create a ConfiguracionSistema
     * const configuracionSistema = await prisma.configuracionSistema.upsert({
     *   create: {
     *     // ... data to create a ConfiguracionSistema
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ConfiguracionSistema we want to update
     *   }
     * })
     */
    upsert<T extends ConfiguracionSistemaUpsertArgs>(args: SelectSubset<T, ConfiguracionSistemaUpsertArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ConfiguracionSistemas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaCountArgs} args - Arguments to filter ConfiguracionSistemas to count.
     * @example
     * // Count the number of ConfiguracionSistemas
     * const count = await prisma.configuracionSistema.count({
     *   where: {
     *     // ... the filter for the ConfiguracionSistemas we want to count
     *   }
     * })
    **/
    count<T extends ConfiguracionSistemaCountArgs>(
      args?: Subset<T, ConfiguracionSistemaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfiguracionSistemaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ConfiguracionSistema.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfiguracionSistemaAggregateArgs>(args: Subset<T, ConfiguracionSistemaAggregateArgs>): Prisma.PrismaPromise<GetConfiguracionSistemaAggregateType<T>>

    /**
     * Group by ConfiguracionSistema.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConfiguracionSistemaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConfiguracionSistemaGroupByArgs['orderBy'] }
        : { orderBy?: ConfiguracionSistemaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConfiguracionSistemaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfiguracionSistemaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ConfiguracionSistema model
   */
  readonly fields: ConfiguracionSistemaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ConfiguracionSistema.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConfiguracionSistemaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ConfiguracionSistema model
   */
  interface ConfiguracionSistemaFieldRefs {
    readonly id: FieldRef<"ConfiguracionSistema", 'Int'>
    readonly claveConfiguracion: FieldRef<"ConfiguracionSistema", 'String'>
    readonly valorConfiguracion: FieldRef<"ConfiguracionSistema", 'String'>
    readonly tipoDato: FieldRef<"ConfiguracionSistema", 'String'>
    readonly actualizadoPor: FieldRef<"ConfiguracionSistema", 'Int'>
    readonly createdAt: FieldRef<"ConfiguracionSistema", 'DateTime'>
    readonly updatedAt: FieldRef<"ConfiguracionSistema", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ConfiguracionSistema findUnique
   */
  export type ConfiguracionSistemaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracionSistema
     */
    omit?: ConfiguracionSistemaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracionSistemaInclude<ExtArgs> | null
    /**
     * Filter, which ConfiguracionSistema to fetch.
     */
    where: ConfiguracionSistemaWhereUniqueInput
  }

  /**
   * ConfiguracionSistema findUniqueOrThrow
   */
  export type ConfiguracionSistemaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracionSistema
     */
    omit?: ConfiguracionSistemaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracionSistemaInclude<ExtArgs> | null
    /**
     * Filter, which ConfiguracionSistema to fetch.
     */
    where: ConfiguracionSistemaWhereUniqueInput
  }

  /**
   * ConfiguracionSistema findFirst
   */
  export type ConfiguracionSistemaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracionSistema
     */
    omit?: ConfiguracionSistemaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracionSistemaInclude<ExtArgs> | null
    /**
     * Filter, which ConfiguracionSistema to fetch.
     */
    where?: ConfiguracionSistemaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracionSistemas to fetch.
     */
    orderBy?: ConfiguracionSistemaOrderByWithRelationInput | ConfiguracionSistemaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfiguracionSistemas.
     */
    cursor?: ConfiguracionSistemaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracionSistemas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracionSistemas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfiguracionSistemas.
     */
    distinct?: ConfiguracionSistemaScalarFieldEnum | ConfiguracionSistemaScalarFieldEnum[]
  }

  /**
   * ConfiguracionSistema findFirstOrThrow
   */
  export type ConfiguracionSistemaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracionSistema
     */
    omit?: ConfiguracionSistemaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracionSistemaInclude<ExtArgs> | null
    /**
     * Filter, which ConfiguracionSistema to fetch.
     */
    where?: ConfiguracionSistemaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracionSistemas to fetch.
     */
    orderBy?: ConfiguracionSistemaOrderByWithRelationInput | ConfiguracionSistemaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfiguracionSistemas.
     */
    cursor?: ConfiguracionSistemaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracionSistemas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracionSistemas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfiguracionSistemas.
     */
    distinct?: ConfiguracionSistemaScalarFieldEnum | ConfiguracionSistemaScalarFieldEnum[]
  }

  /**
   * ConfiguracionSistema findMany
   */
  export type ConfiguracionSistemaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracionSistema
     */
    omit?: ConfiguracionSistemaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracionSistemaInclude<ExtArgs> | null
    /**
     * Filter, which ConfiguracionSistemas to fetch.
     */
    where?: ConfiguracionSistemaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracionSistemas to fetch.
     */
    orderBy?: ConfiguracionSistemaOrderByWithRelationInput | ConfiguracionSistemaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ConfiguracionSistemas.
     */
    cursor?: ConfiguracionSistemaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracionSistemas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracionSistemas.
     */
    skip?: number
    distinct?: ConfiguracionSistemaScalarFieldEnum | ConfiguracionSistemaScalarFieldEnum[]
  }

  /**
   * ConfiguracionSistema create
   */
  export type ConfiguracionSistemaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracionSistema
     */
    omit?: ConfiguracionSistemaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracionSistemaInclude<ExtArgs> | null
    /**
     * The data needed to create a ConfiguracionSistema.
     */
    data: XOR<ConfiguracionSistemaCreateInput, ConfiguracionSistemaUncheckedCreateInput>
  }

  /**
   * ConfiguracionSistema createMany
   */
  export type ConfiguracionSistemaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ConfiguracionSistemas.
     */
    data: ConfiguracionSistemaCreateManyInput | ConfiguracionSistemaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ConfiguracionSistema createManyAndReturn
   */
  export type ConfiguracionSistemaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracionSistema
     */
    omit?: ConfiguracionSistemaOmit<ExtArgs> | null
    /**
     * The data used to create many ConfiguracionSistemas.
     */
    data: ConfiguracionSistemaCreateManyInput | ConfiguracionSistemaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracionSistemaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ConfiguracionSistema update
   */
  export type ConfiguracionSistemaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracionSistema
     */
    omit?: ConfiguracionSistemaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracionSistemaInclude<ExtArgs> | null
    /**
     * The data needed to update a ConfiguracionSistema.
     */
    data: XOR<ConfiguracionSistemaUpdateInput, ConfiguracionSistemaUncheckedUpdateInput>
    /**
     * Choose, which ConfiguracionSistema to update.
     */
    where: ConfiguracionSistemaWhereUniqueInput
  }

  /**
   * ConfiguracionSistema updateMany
   */
  export type ConfiguracionSistemaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ConfiguracionSistemas.
     */
    data: XOR<ConfiguracionSistemaUpdateManyMutationInput, ConfiguracionSistemaUncheckedUpdateManyInput>
    /**
     * Filter which ConfiguracionSistemas to update
     */
    where?: ConfiguracionSistemaWhereInput
    /**
     * Limit how many ConfiguracionSistemas to update.
     */
    limit?: number
  }

  /**
   * ConfiguracionSistema updateManyAndReturn
   */
  export type ConfiguracionSistemaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracionSistema
     */
    omit?: ConfiguracionSistemaOmit<ExtArgs> | null
    /**
     * The data used to update ConfiguracionSistemas.
     */
    data: XOR<ConfiguracionSistemaUpdateManyMutationInput, ConfiguracionSistemaUncheckedUpdateManyInput>
    /**
     * Filter which ConfiguracionSistemas to update
     */
    where?: ConfiguracionSistemaWhereInput
    /**
     * Limit how many ConfiguracionSistemas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracionSistemaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ConfiguracionSistema upsert
   */
  export type ConfiguracionSistemaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracionSistema
     */
    omit?: ConfiguracionSistemaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracionSistemaInclude<ExtArgs> | null
    /**
     * The filter to search for the ConfiguracionSistema to update in case it exists.
     */
    where: ConfiguracionSistemaWhereUniqueInput
    /**
     * In case the ConfiguracionSistema found by the `where` argument doesn't exist, create a new ConfiguracionSistema with this data.
     */
    create: XOR<ConfiguracionSistemaCreateInput, ConfiguracionSistemaUncheckedCreateInput>
    /**
     * In case the ConfiguracionSistema was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConfiguracionSistemaUpdateInput, ConfiguracionSistemaUncheckedUpdateInput>
  }

  /**
   * ConfiguracionSistema delete
   */
  export type ConfiguracionSistemaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracionSistema
     */
    omit?: ConfiguracionSistemaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracionSistemaInclude<ExtArgs> | null
    /**
     * Filter which ConfiguracionSistema to delete.
     */
    where: ConfiguracionSistemaWhereUniqueInput
  }

  /**
   * ConfiguracionSistema deleteMany
   */
  export type ConfiguracionSistemaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfiguracionSistemas to delete
     */
    where?: ConfiguracionSistemaWhereInput
    /**
     * Limit how many ConfiguracionSistemas to delete.
     */
    limit?: number
  }

  /**
   * ConfiguracionSistema without action
   */
  export type ConfiguracionSistemaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracionSistema
     */
    omit?: ConfiguracionSistemaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracionSistemaInclude<ExtArgs> | null
  }


  /**
   * Model PasswordResetToken
   */

  export type AggregatePasswordResetToken = {
    _count: PasswordResetTokenCountAggregateOutputType | null
    _min: PasswordResetTokenMinAggregateOutputType | null
    _max: PasswordResetTokenMaxAggregateOutputType | null
  }

  export type PasswordResetTokenMinAggregateOutputType = {
    id: string | null
    email: string | null
    token: string | null
    expiresAt: Date | null
    used: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PasswordResetTokenMaxAggregateOutputType = {
    id: string | null
    email: string | null
    token: string | null
    expiresAt: Date | null
    used: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PasswordResetTokenCountAggregateOutputType = {
    id: number
    email: number
    token: number
    expiresAt: number
    used: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PasswordResetTokenMinAggregateInputType = {
    id?: true
    email?: true
    token?: true
    expiresAt?: true
    used?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PasswordResetTokenMaxAggregateInputType = {
    id?: true
    email?: true
    token?: true
    expiresAt?: true
    used?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PasswordResetTokenCountAggregateInputType = {
    id?: true
    email?: true
    token?: true
    expiresAt?: true
    used?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PasswordResetTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PasswordResetToken to aggregate.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PasswordResetTokens
    **/
    _count?: true | PasswordResetTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PasswordResetTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PasswordResetTokenMaxAggregateInputType
  }

  export type GetPasswordResetTokenAggregateType<T extends PasswordResetTokenAggregateArgs> = {
        [P in keyof T & keyof AggregatePasswordResetToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePasswordResetToken[P]>
      : GetScalarType<T[P], AggregatePasswordResetToken[P]>
  }




  export type PasswordResetTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PasswordResetTokenWhereInput
    orderBy?: PasswordResetTokenOrderByWithAggregationInput | PasswordResetTokenOrderByWithAggregationInput[]
    by: PasswordResetTokenScalarFieldEnum[] | PasswordResetTokenScalarFieldEnum
    having?: PasswordResetTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PasswordResetTokenCountAggregateInputType | true
    _min?: PasswordResetTokenMinAggregateInputType
    _max?: PasswordResetTokenMaxAggregateInputType
  }

  export type PasswordResetTokenGroupByOutputType = {
    id: string
    email: string
    token: string
    expiresAt: Date
    used: boolean
    createdAt: Date
    updatedAt: Date
    _count: PasswordResetTokenCountAggregateOutputType | null
    _min: PasswordResetTokenMinAggregateOutputType | null
    _max: PasswordResetTokenMaxAggregateOutputType | null
  }

  type GetPasswordResetTokenGroupByPayload<T extends PasswordResetTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PasswordResetTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PasswordResetTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PasswordResetTokenGroupByOutputType[P]>
            : GetScalarType<T[P], PasswordResetTokenGroupByOutputType[P]>
        }
      >
    >


  export type PasswordResetTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    token?: boolean
    expiresAt?: boolean
    used?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["passwordResetToken"]>

  export type PasswordResetTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    token?: boolean
    expiresAt?: boolean
    used?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["passwordResetToken"]>

  export type PasswordResetTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    token?: boolean
    expiresAt?: boolean
    used?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["passwordResetToken"]>

  export type PasswordResetTokenSelectScalar = {
    id?: boolean
    email?: boolean
    token?: boolean
    expiresAt?: boolean
    used?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PasswordResetTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "token" | "expiresAt" | "used" | "createdAt" | "updatedAt", ExtArgs["result"]["passwordResetToken"]>

  export type $PasswordResetTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PasswordResetToken"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      token: string
      expiresAt: Date
      used: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["passwordResetToken"]>
    composites: {}
  }

  type PasswordResetTokenGetPayload<S extends boolean | null | undefined | PasswordResetTokenDefaultArgs> = $Result.GetResult<Prisma.$PasswordResetTokenPayload, S>

  type PasswordResetTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PasswordResetTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PasswordResetTokenCountAggregateInputType | true
    }

  export interface PasswordResetTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PasswordResetToken'], meta: { name: 'PasswordResetToken' } }
    /**
     * Find zero or one PasswordResetToken that matches the filter.
     * @param {PasswordResetTokenFindUniqueArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PasswordResetTokenFindUniqueArgs>(args: SelectSubset<T, PasswordResetTokenFindUniqueArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PasswordResetToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PasswordResetTokenFindUniqueOrThrowArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PasswordResetTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, PasswordResetTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PasswordResetToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenFindFirstArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PasswordResetTokenFindFirstArgs>(args?: SelectSubset<T, PasswordResetTokenFindFirstArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PasswordResetToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenFindFirstOrThrowArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PasswordResetTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, PasswordResetTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PasswordResetTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetToken.findMany()
     * 
     * // Get first 10 PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const passwordResetTokenWithIdOnly = await prisma.passwordResetToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PasswordResetTokenFindManyArgs>(args?: SelectSubset<T, PasswordResetTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PasswordResetToken.
     * @param {PasswordResetTokenCreateArgs} args - Arguments to create a PasswordResetToken.
     * @example
     * // Create one PasswordResetToken
     * const PasswordResetToken = await prisma.passwordResetToken.create({
     *   data: {
     *     // ... data to create a PasswordResetToken
     *   }
     * })
     * 
     */
    create<T extends PasswordResetTokenCreateArgs>(args: SelectSubset<T, PasswordResetTokenCreateArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PasswordResetTokens.
     * @param {PasswordResetTokenCreateManyArgs} args - Arguments to create many PasswordResetTokens.
     * @example
     * // Create many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PasswordResetTokenCreateManyArgs>(args?: SelectSubset<T, PasswordResetTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PasswordResetTokens and returns the data saved in the database.
     * @param {PasswordResetTokenCreateManyAndReturnArgs} args - Arguments to create many PasswordResetTokens.
     * @example
     * // Create many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PasswordResetTokens and only return the `id`
     * const passwordResetTokenWithIdOnly = await prisma.passwordResetToken.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PasswordResetTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, PasswordResetTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PasswordResetToken.
     * @param {PasswordResetTokenDeleteArgs} args - Arguments to delete one PasswordResetToken.
     * @example
     * // Delete one PasswordResetToken
     * const PasswordResetToken = await prisma.passwordResetToken.delete({
     *   where: {
     *     // ... filter to delete one PasswordResetToken
     *   }
     * })
     * 
     */
    delete<T extends PasswordResetTokenDeleteArgs>(args: SelectSubset<T, PasswordResetTokenDeleteArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PasswordResetToken.
     * @param {PasswordResetTokenUpdateArgs} args - Arguments to update one PasswordResetToken.
     * @example
     * // Update one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PasswordResetTokenUpdateArgs>(args: SelectSubset<T, PasswordResetTokenUpdateArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PasswordResetTokens.
     * @param {PasswordResetTokenDeleteManyArgs} args - Arguments to filter PasswordResetTokens to delete.
     * @example
     * // Delete a few PasswordResetTokens
     * const { count } = await prisma.passwordResetToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PasswordResetTokenDeleteManyArgs>(args?: SelectSubset<T, PasswordResetTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PasswordResetTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PasswordResetTokenUpdateManyArgs>(args: SelectSubset<T, PasswordResetTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PasswordResetTokens and returns the data updated in the database.
     * @param {PasswordResetTokenUpdateManyAndReturnArgs} args - Arguments to update many PasswordResetTokens.
     * @example
     * // Update many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PasswordResetTokens and only return the `id`
     * const passwordResetTokenWithIdOnly = await prisma.passwordResetToken.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PasswordResetTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, PasswordResetTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PasswordResetToken.
     * @param {PasswordResetTokenUpsertArgs} args - Arguments to update or create a PasswordResetToken.
     * @example
     * // Update or create a PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.upsert({
     *   create: {
     *     // ... data to create a PasswordResetToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PasswordResetToken we want to update
     *   }
     * })
     */
    upsert<T extends PasswordResetTokenUpsertArgs>(args: SelectSubset<T, PasswordResetTokenUpsertArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PasswordResetTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenCountArgs} args - Arguments to filter PasswordResetTokens to count.
     * @example
     * // Count the number of PasswordResetTokens
     * const count = await prisma.passwordResetToken.count({
     *   where: {
     *     // ... the filter for the PasswordResetTokens we want to count
     *   }
     * })
    **/
    count<T extends PasswordResetTokenCountArgs>(
      args?: Subset<T, PasswordResetTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PasswordResetTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PasswordResetToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PasswordResetTokenAggregateArgs>(args: Subset<T, PasswordResetTokenAggregateArgs>): Prisma.PrismaPromise<GetPasswordResetTokenAggregateType<T>>

    /**
     * Group by PasswordResetToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PasswordResetTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PasswordResetTokenGroupByArgs['orderBy'] }
        : { orderBy?: PasswordResetTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PasswordResetTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPasswordResetTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PasswordResetToken model
   */
  readonly fields: PasswordResetTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PasswordResetToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PasswordResetTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PasswordResetToken model
   */
  interface PasswordResetTokenFieldRefs {
    readonly id: FieldRef<"PasswordResetToken", 'String'>
    readonly email: FieldRef<"PasswordResetToken", 'String'>
    readonly token: FieldRef<"PasswordResetToken", 'String'>
    readonly expiresAt: FieldRef<"PasswordResetToken", 'DateTime'>
    readonly used: FieldRef<"PasswordResetToken", 'Boolean'>
    readonly createdAt: FieldRef<"PasswordResetToken", 'DateTime'>
    readonly updatedAt: FieldRef<"PasswordResetToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PasswordResetToken findUnique
   */
  export type PasswordResetTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken findUniqueOrThrow
   */
  export type PasswordResetTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken findFirst
   */
  export type PasswordResetTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PasswordResetTokens.
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PasswordResetTokens.
     */
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * PasswordResetToken findFirstOrThrow
   */
  export type PasswordResetTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PasswordResetTokens.
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PasswordResetTokens.
     */
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * PasswordResetToken findMany
   */
  export type PasswordResetTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetTokens to fetch.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PasswordResetTokens.
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * PasswordResetToken create
   */
  export type PasswordResetTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The data needed to create a PasswordResetToken.
     */
    data: XOR<PasswordResetTokenCreateInput, PasswordResetTokenUncheckedCreateInput>
  }

  /**
   * PasswordResetToken createMany
   */
  export type PasswordResetTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PasswordResetTokens.
     */
    data: PasswordResetTokenCreateManyInput | PasswordResetTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PasswordResetToken createManyAndReturn
   */
  export type PasswordResetTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The data used to create many PasswordResetTokens.
     */
    data: PasswordResetTokenCreateManyInput | PasswordResetTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PasswordResetToken update
   */
  export type PasswordResetTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The data needed to update a PasswordResetToken.
     */
    data: XOR<PasswordResetTokenUpdateInput, PasswordResetTokenUncheckedUpdateInput>
    /**
     * Choose, which PasswordResetToken to update.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken updateMany
   */
  export type PasswordResetTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PasswordResetTokens.
     */
    data: XOR<PasswordResetTokenUpdateManyMutationInput, PasswordResetTokenUncheckedUpdateManyInput>
    /**
     * Filter which PasswordResetTokens to update
     */
    where?: PasswordResetTokenWhereInput
    /**
     * Limit how many PasswordResetTokens to update.
     */
    limit?: number
  }

  /**
   * PasswordResetToken updateManyAndReturn
   */
  export type PasswordResetTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The data used to update PasswordResetTokens.
     */
    data: XOR<PasswordResetTokenUpdateManyMutationInput, PasswordResetTokenUncheckedUpdateManyInput>
    /**
     * Filter which PasswordResetTokens to update
     */
    where?: PasswordResetTokenWhereInput
    /**
     * Limit how many PasswordResetTokens to update.
     */
    limit?: number
  }

  /**
   * PasswordResetToken upsert
   */
  export type PasswordResetTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The filter to search for the PasswordResetToken to update in case it exists.
     */
    where: PasswordResetTokenWhereUniqueInput
    /**
     * In case the PasswordResetToken found by the `where` argument doesn't exist, create a new PasswordResetToken with this data.
     */
    create: XOR<PasswordResetTokenCreateInput, PasswordResetTokenUncheckedCreateInput>
    /**
     * In case the PasswordResetToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PasswordResetTokenUpdateInput, PasswordResetTokenUncheckedUpdateInput>
  }

  /**
   * PasswordResetToken delete
   */
  export type PasswordResetTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Filter which PasswordResetToken to delete.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken deleteMany
   */
  export type PasswordResetTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PasswordResetTokens to delete
     */
    where?: PasswordResetTokenWhereInput
    /**
     * Limit how many PasswordResetTokens to delete.
     */
    limit?: number
  }

  /**
   * PasswordResetToken without action
   */
  export type PasswordResetTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const DepartamentoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    createdAt: 'createdAt'
  };

  export type DepartamentoScalarFieldEnum = (typeof DepartamentoScalarFieldEnum)[keyof typeof DepartamentoScalarFieldEnum]


  export const RolScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    permisos: 'permisos',
    createdAt: 'createdAt'
  };

  export type RolScalarFieldEnum = (typeof RolScalarFieldEnum)[keyof typeof RolScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    primerNombre: 'primerNombre',
    segundoNombre: 'segundoNombre',
    primerApellido: 'primerApellido',
    segundoApellido: 'segundoApellido',
    correo: 'correo',
    hashContrasena: 'hashContrasena',
    rolId: 'rolId',
    departamentoId: 'departamentoId',
    esInterno: 'esInterno',
    ultimoAcceso: 'ultimoAcceso',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const EstadoTicketScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    esEstadoFinal: 'esEstadoFinal',
    ordenSecuencia: 'ordenSecuencia',
    createdAt: 'createdAt'
  };

  export type EstadoTicketScalarFieldEnum = (typeof EstadoTicketScalarFieldEnum)[keyof typeof EstadoTicketScalarFieldEnum]


  export const PrioridadScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    nivel: 'nivel',
    createdAt: 'createdAt'
  };

  export type PrioridadScalarFieldEnum = (typeof PrioridadScalarFieldEnum)[keyof typeof PrioridadScalarFieldEnum]


  export const SlaPrioridadScalarFieldEnum: {
    prioridadId: 'prioridadId',
    departamentoId: 'departamentoId',
    tiempoRespuestaHoras: 'tiempoRespuestaHoras',
    tiempoResolucionHoras: 'tiempoResolucionHoras',
    createdAt: 'createdAt'
  };

  export type SlaPrioridadScalarFieldEnum = (typeof SlaPrioridadScalarFieldEnum)[keyof typeof SlaPrioridadScalarFieldEnum]


  export const TicketScalarFieldEnum: {
    id: 'id',
    numeroTicket: 'numeroTicket',
    asunto: 'asunto',
    descripcion: 'descripcion',
    solicitanteId: 'solicitanteId',
    asignadoA: 'asignadoA',
    departamentoId: 'departamentoId',
    prioridadId: 'prioridadId',
    estadoId: 'estadoId',
    fechaVencimiento: 'fechaVencimiento',
    fechaResolucion: 'fechaResolucion',
    fechaCierre: 'fechaCierre',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TicketScalarFieldEnum = (typeof TicketScalarFieldEnum)[keyof typeof TicketScalarFieldEnum]


  export const HistorialTicketScalarFieldEnum: {
    id: 'id',
    ticketId: 'ticketId',
    usuarioId: 'usuarioId',
    tipoAccion: 'tipoAccion',
    campoModificado: 'campoModificado',
    valorAnterior: 'valorAnterior',
    valorNuevo: 'valorNuevo',
    comentario: 'comentario',
    createdAt: 'createdAt'
  };

  export type HistorialTicketScalarFieldEnum = (typeof HistorialTicketScalarFieldEnum)[keyof typeof HistorialTicketScalarFieldEnum]


  export const ComentarioTicketScalarFieldEnum: {
    id: 'id',
    ticketId: 'ticketId',
    usuarioId: 'usuarioId',
    comentario: 'comentario',
    esInterno: 'esInterno',
    esSolucion: 'esSolucion',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ComentarioTicketScalarFieldEnum = (typeof ComentarioTicketScalarFieldEnum)[keyof typeof ComentarioTicketScalarFieldEnum]


  export const ArchivoAdjuntoScalarFieldEnum: {
    id: 'id',
    ticketId: 'ticketId',
    comentarioId: 'comentarioId',
    nombreOriginal: 'nombreOriginal',
    nombreAlmacenado: 'nombreAlmacenado',
    rutaArchivo: 'rutaArchivo',
    tamanoArchivo: 'tamanoArchivo',
    tipoMime: 'tipoMime',
    subidoPor: 'subidoPor',
    createdAt: 'createdAt'
  };

  export type ArchivoAdjuntoScalarFieldEnum = (typeof ArchivoAdjuntoScalarFieldEnum)[keyof typeof ArchivoAdjuntoScalarFieldEnum]


  export const DerivacionTicketScalarFieldEnum: {
    id: 'id',
    ticketId: 'ticketId',
    departamentoOrigenId: 'departamentoOrigenId',
    departamentoDestinoId: 'departamentoDestinoId',
    motivo: 'motivo',
    derivadoPor: 'derivadoPor',
    createdAt: 'createdAt'
  };

  export type DerivacionTicketScalarFieldEnum = (typeof DerivacionTicketScalarFieldEnum)[keyof typeof DerivacionTicketScalarFieldEnum]


  export const EncuestaScalarFieldEnum: {
    id: 'id',
    ticketId: 'ticketId',
    calificacion: 'calificacion',
    comentario: 'comentario',
    enviadoPor: 'enviadoPor',
    fechaEnvio: 'fechaEnvio',
    fechaRespuesta: 'fechaRespuesta'
  };

  export type EncuestaScalarFieldEnum = (typeof EncuestaScalarFieldEnum)[keyof typeof EncuestaScalarFieldEnum]


  export const NotificacionScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    ticketId: 'ticketId',
    tipo: 'tipo',
    titulo: 'titulo',
    mensaje: 'mensaje',
    leido: 'leido',
    correoEnviado: 'correoEnviado',
    fechaEnvioCorreo: 'fechaEnvioCorreo',
    createdAt: 'createdAt'
  };

  export type NotificacionScalarFieldEnum = (typeof NotificacionScalarFieldEnum)[keyof typeof NotificacionScalarFieldEnum]


  export const UsuarioEnCopiaScalarFieldEnum: {
    ticketId: 'ticketId',
    usuarioId: 'usuarioId',
    agregadoPor: 'agregadoPor',
    createdAt: 'createdAt'
  };

  export type UsuarioEnCopiaScalarFieldEnum = (typeof UsuarioEnCopiaScalarFieldEnum)[keyof typeof UsuarioEnCopiaScalarFieldEnum]


  export const ConfiguracionSistemaScalarFieldEnum: {
    id: 'id',
    claveConfiguracion: 'claveConfiguracion',
    valorConfiguracion: 'valorConfiguracion',
    tipoDato: 'tipoDato',
    actualizadoPor: 'actualizadoPor',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ConfiguracionSistemaScalarFieldEnum = (typeof ConfiguracionSistemaScalarFieldEnum)[keyof typeof ConfiguracionSistemaScalarFieldEnum]


  export const PasswordResetTokenScalarFieldEnum: {
    id: 'id',
    email: 'email',
    token: 'token',
    expiresAt: 'expiresAt',
    used: 'used',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PasswordResetTokenScalarFieldEnum = (typeof PasswordResetTokenScalarFieldEnum)[keyof typeof PasswordResetTokenScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type DepartamentoWhereInput = {
    AND?: DepartamentoWhereInput | DepartamentoWhereInput[]
    OR?: DepartamentoWhereInput[]
    NOT?: DepartamentoWhereInput | DepartamentoWhereInput[]
    id?: IntFilter<"Departamento"> | number
    nombre?: StringFilter<"Departamento"> | string
    createdAt?: DateTimeFilter<"Departamento"> | Date | string
    usuarios?: UsuarioListRelationFilter
    tickets?: TicketListRelationFilter
    derivacionesOrigen?: DerivacionTicketListRelationFilter
    derivacionesDestino?: DerivacionTicketListRelationFilter
    slaPrioridades?: SlaPrioridadListRelationFilter
  }

  export type DepartamentoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    createdAt?: SortOrder
    usuarios?: UsuarioOrderByRelationAggregateInput
    tickets?: TicketOrderByRelationAggregateInput
    derivacionesOrigen?: DerivacionTicketOrderByRelationAggregateInput
    derivacionesDestino?: DerivacionTicketOrderByRelationAggregateInput
    slaPrioridades?: SlaPrioridadOrderByRelationAggregateInput
  }

  export type DepartamentoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DepartamentoWhereInput | DepartamentoWhereInput[]
    OR?: DepartamentoWhereInput[]
    NOT?: DepartamentoWhereInput | DepartamentoWhereInput[]
    nombre?: StringFilter<"Departamento"> | string
    createdAt?: DateTimeFilter<"Departamento"> | Date | string
    usuarios?: UsuarioListRelationFilter
    tickets?: TicketListRelationFilter
    derivacionesOrigen?: DerivacionTicketListRelationFilter
    derivacionesDestino?: DerivacionTicketListRelationFilter
    slaPrioridades?: SlaPrioridadListRelationFilter
  }, "id">

  export type DepartamentoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    createdAt?: SortOrder
    _count?: DepartamentoCountOrderByAggregateInput
    _avg?: DepartamentoAvgOrderByAggregateInput
    _max?: DepartamentoMaxOrderByAggregateInput
    _min?: DepartamentoMinOrderByAggregateInput
    _sum?: DepartamentoSumOrderByAggregateInput
  }

  export type DepartamentoScalarWhereWithAggregatesInput = {
    AND?: DepartamentoScalarWhereWithAggregatesInput | DepartamentoScalarWhereWithAggregatesInput[]
    OR?: DepartamentoScalarWhereWithAggregatesInput[]
    NOT?: DepartamentoScalarWhereWithAggregatesInput | DepartamentoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Departamento"> | number
    nombre?: StringWithAggregatesFilter<"Departamento"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Departamento"> | Date | string
  }

  export type RolWhereInput = {
    AND?: RolWhereInput | RolWhereInput[]
    OR?: RolWhereInput[]
    NOT?: RolWhereInput | RolWhereInput[]
    id?: IntFilter<"Rol"> | number
    nombre?: StringFilter<"Rol"> | string
    permisos?: JsonNullableFilter<"Rol">
    createdAt?: DateTimeFilter<"Rol"> | Date | string
    usuarios?: UsuarioListRelationFilter
  }

  export type RolOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    permisos?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    usuarios?: UsuarioOrderByRelationAggregateInput
  }

  export type RolWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RolWhereInput | RolWhereInput[]
    OR?: RolWhereInput[]
    NOT?: RolWhereInput | RolWhereInput[]
    nombre?: StringFilter<"Rol"> | string
    permisos?: JsonNullableFilter<"Rol">
    createdAt?: DateTimeFilter<"Rol"> | Date | string
    usuarios?: UsuarioListRelationFilter
  }, "id">

  export type RolOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    permisos?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: RolCountOrderByAggregateInput
    _avg?: RolAvgOrderByAggregateInput
    _max?: RolMaxOrderByAggregateInput
    _min?: RolMinOrderByAggregateInput
    _sum?: RolSumOrderByAggregateInput
  }

  export type RolScalarWhereWithAggregatesInput = {
    AND?: RolScalarWhereWithAggregatesInput | RolScalarWhereWithAggregatesInput[]
    OR?: RolScalarWhereWithAggregatesInput[]
    NOT?: RolScalarWhereWithAggregatesInput | RolScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Rol"> | number
    nombre?: StringWithAggregatesFilter<"Rol"> | string
    permisos?: JsonNullableWithAggregatesFilter<"Rol">
    createdAt?: DateTimeWithAggregatesFilter<"Rol"> | Date | string
  }

  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: IntFilter<"Usuario"> | number
    primerNombre?: StringFilter<"Usuario"> | string
    segundoNombre?: StringNullableFilter<"Usuario"> | string | null
    primerApellido?: StringFilter<"Usuario"> | string
    segundoApellido?: StringFilter<"Usuario"> | string
    correo?: StringFilter<"Usuario"> | string
    hashContrasena?: StringFilter<"Usuario"> | string
    rolId?: IntFilter<"Usuario"> | number
    departamentoId?: IntFilter<"Usuario"> | number
    esInterno?: BoolFilter<"Usuario"> | boolean
    ultimoAcceso?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    createdAt?: DateTimeFilter<"Usuario"> | Date | string
    updatedAt?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    rol?: XOR<RolScalarRelationFilter, RolWhereInput>
    departamento?: XOR<DepartamentoScalarRelationFilter, DepartamentoWhereInput>
    ticketsCreados?: TicketListRelationFilter
    ticketsAsignados?: TicketListRelationFilter
    comentarios?: ComentarioTicketListRelationFilter
    historial?: HistorialTicketListRelationFilter
    archivosSubidos?: ArchivoAdjuntoListRelationFilter
    derivaciones?: DerivacionTicketListRelationFilter
    encuestas?: EncuestaListRelationFilter
    notificaciones?: NotificacionListRelationFilter
    usuariosEnCopia?: UsuarioEnCopiaListRelationFilter
    configuraciones?: ConfiguracionSistemaListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    primerNombre?: SortOrder
    segundoNombre?: SortOrderInput | SortOrder
    primerApellido?: SortOrder
    segundoApellido?: SortOrder
    correo?: SortOrder
    hashContrasena?: SortOrder
    rolId?: SortOrder
    departamentoId?: SortOrder
    esInterno?: SortOrder
    ultimoAcceso?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    rol?: RolOrderByWithRelationInput
    departamento?: DepartamentoOrderByWithRelationInput
    ticketsCreados?: TicketOrderByRelationAggregateInput
    ticketsAsignados?: TicketOrderByRelationAggregateInput
    comentarios?: ComentarioTicketOrderByRelationAggregateInput
    historial?: HistorialTicketOrderByRelationAggregateInput
    archivosSubidos?: ArchivoAdjuntoOrderByRelationAggregateInput
    derivaciones?: DerivacionTicketOrderByRelationAggregateInput
    encuestas?: EncuestaOrderByRelationAggregateInput
    notificaciones?: NotificacionOrderByRelationAggregateInput
    usuariosEnCopia?: UsuarioEnCopiaOrderByRelationAggregateInput
    configuraciones?: ConfiguracionSistemaOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    correo?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    primerNombre?: StringFilter<"Usuario"> | string
    segundoNombre?: StringNullableFilter<"Usuario"> | string | null
    primerApellido?: StringFilter<"Usuario"> | string
    segundoApellido?: StringFilter<"Usuario"> | string
    hashContrasena?: StringFilter<"Usuario"> | string
    rolId?: IntFilter<"Usuario"> | number
    departamentoId?: IntFilter<"Usuario"> | number
    esInterno?: BoolFilter<"Usuario"> | boolean
    ultimoAcceso?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    createdAt?: DateTimeFilter<"Usuario"> | Date | string
    updatedAt?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    rol?: XOR<RolScalarRelationFilter, RolWhereInput>
    departamento?: XOR<DepartamentoScalarRelationFilter, DepartamentoWhereInput>
    ticketsCreados?: TicketListRelationFilter
    ticketsAsignados?: TicketListRelationFilter
    comentarios?: ComentarioTicketListRelationFilter
    historial?: HistorialTicketListRelationFilter
    archivosSubidos?: ArchivoAdjuntoListRelationFilter
    derivaciones?: DerivacionTicketListRelationFilter
    encuestas?: EncuestaListRelationFilter
    notificaciones?: NotificacionListRelationFilter
    usuariosEnCopia?: UsuarioEnCopiaListRelationFilter
    configuraciones?: ConfiguracionSistemaListRelationFilter
  }, "id" | "correo">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    primerNombre?: SortOrder
    segundoNombre?: SortOrderInput | SortOrder
    primerApellido?: SortOrder
    segundoApellido?: SortOrder
    correo?: SortOrder
    hashContrasena?: SortOrder
    rolId?: SortOrder
    departamentoId?: SortOrder
    esInterno?: SortOrder
    ultimoAcceso?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Usuario"> | number
    primerNombre?: StringWithAggregatesFilter<"Usuario"> | string
    segundoNombre?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    primerApellido?: StringWithAggregatesFilter<"Usuario"> | string
    segundoApellido?: StringWithAggregatesFilter<"Usuario"> | string
    correo?: StringWithAggregatesFilter<"Usuario"> | string
    hashContrasena?: StringWithAggregatesFilter<"Usuario"> | string
    rolId?: IntWithAggregatesFilter<"Usuario"> | number
    departamentoId?: IntWithAggregatesFilter<"Usuario"> | number
    esInterno?: BoolWithAggregatesFilter<"Usuario"> | boolean
    ultimoAcceso?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
  }

  export type EstadoTicketWhereInput = {
    AND?: EstadoTicketWhereInput | EstadoTicketWhereInput[]
    OR?: EstadoTicketWhereInput[]
    NOT?: EstadoTicketWhereInput | EstadoTicketWhereInput[]
    id?: IntFilter<"EstadoTicket"> | number
    nombre?: StringFilter<"EstadoTicket"> | string
    esEstadoFinal?: BoolFilter<"EstadoTicket"> | boolean
    ordenSecuencia?: IntFilter<"EstadoTicket"> | number
    createdAt?: DateTimeFilter<"EstadoTicket"> | Date | string
    tickets?: TicketListRelationFilter
  }

  export type EstadoTicketOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    esEstadoFinal?: SortOrder
    ordenSecuencia?: SortOrder
    createdAt?: SortOrder
    tickets?: TicketOrderByRelationAggregateInput
  }

  export type EstadoTicketWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EstadoTicketWhereInput | EstadoTicketWhereInput[]
    OR?: EstadoTicketWhereInput[]
    NOT?: EstadoTicketWhereInput | EstadoTicketWhereInput[]
    nombre?: StringFilter<"EstadoTicket"> | string
    esEstadoFinal?: BoolFilter<"EstadoTicket"> | boolean
    ordenSecuencia?: IntFilter<"EstadoTicket"> | number
    createdAt?: DateTimeFilter<"EstadoTicket"> | Date | string
    tickets?: TicketListRelationFilter
  }, "id">

  export type EstadoTicketOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    esEstadoFinal?: SortOrder
    ordenSecuencia?: SortOrder
    createdAt?: SortOrder
    _count?: EstadoTicketCountOrderByAggregateInput
    _avg?: EstadoTicketAvgOrderByAggregateInput
    _max?: EstadoTicketMaxOrderByAggregateInput
    _min?: EstadoTicketMinOrderByAggregateInput
    _sum?: EstadoTicketSumOrderByAggregateInput
  }

  export type EstadoTicketScalarWhereWithAggregatesInput = {
    AND?: EstadoTicketScalarWhereWithAggregatesInput | EstadoTicketScalarWhereWithAggregatesInput[]
    OR?: EstadoTicketScalarWhereWithAggregatesInput[]
    NOT?: EstadoTicketScalarWhereWithAggregatesInput | EstadoTicketScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EstadoTicket"> | number
    nombre?: StringWithAggregatesFilter<"EstadoTicket"> | string
    esEstadoFinal?: BoolWithAggregatesFilter<"EstadoTicket"> | boolean
    ordenSecuencia?: IntWithAggregatesFilter<"EstadoTicket"> | number
    createdAt?: DateTimeWithAggregatesFilter<"EstadoTicket"> | Date | string
  }

  export type PrioridadWhereInput = {
    AND?: PrioridadWhereInput | PrioridadWhereInput[]
    OR?: PrioridadWhereInput[]
    NOT?: PrioridadWhereInput | PrioridadWhereInput[]
    id?: IntFilter<"Prioridad"> | number
    nombre?: StringFilter<"Prioridad"> | string
    nivel?: IntFilter<"Prioridad"> | number
    createdAt?: DateTimeFilter<"Prioridad"> | Date | string
    tickets?: TicketListRelationFilter
    slas?: SlaPrioridadListRelationFilter
  }

  export type PrioridadOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    nivel?: SortOrder
    createdAt?: SortOrder
    tickets?: TicketOrderByRelationAggregateInput
    slas?: SlaPrioridadOrderByRelationAggregateInput
  }

  export type PrioridadWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PrioridadWhereInput | PrioridadWhereInput[]
    OR?: PrioridadWhereInput[]
    NOT?: PrioridadWhereInput | PrioridadWhereInput[]
    nombre?: StringFilter<"Prioridad"> | string
    nivel?: IntFilter<"Prioridad"> | number
    createdAt?: DateTimeFilter<"Prioridad"> | Date | string
    tickets?: TicketListRelationFilter
    slas?: SlaPrioridadListRelationFilter
  }, "id">

  export type PrioridadOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    nivel?: SortOrder
    createdAt?: SortOrder
    _count?: PrioridadCountOrderByAggregateInput
    _avg?: PrioridadAvgOrderByAggregateInput
    _max?: PrioridadMaxOrderByAggregateInput
    _min?: PrioridadMinOrderByAggregateInput
    _sum?: PrioridadSumOrderByAggregateInput
  }

  export type PrioridadScalarWhereWithAggregatesInput = {
    AND?: PrioridadScalarWhereWithAggregatesInput | PrioridadScalarWhereWithAggregatesInput[]
    OR?: PrioridadScalarWhereWithAggregatesInput[]
    NOT?: PrioridadScalarWhereWithAggregatesInput | PrioridadScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Prioridad"> | number
    nombre?: StringWithAggregatesFilter<"Prioridad"> | string
    nivel?: IntWithAggregatesFilter<"Prioridad"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Prioridad"> | Date | string
  }

  export type SlaPrioridadWhereInput = {
    AND?: SlaPrioridadWhereInput | SlaPrioridadWhereInput[]
    OR?: SlaPrioridadWhereInput[]
    NOT?: SlaPrioridadWhereInput | SlaPrioridadWhereInput[]
    prioridadId?: IntFilter<"SlaPrioridad"> | number
    departamentoId?: IntFilter<"SlaPrioridad"> | number
    tiempoRespuestaHoras?: IntFilter<"SlaPrioridad"> | number
    tiempoResolucionHoras?: IntFilter<"SlaPrioridad"> | number
    createdAt?: DateTimeFilter<"SlaPrioridad"> | Date | string
    prioridad?: XOR<PrioridadScalarRelationFilter, PrioridadWhereInput>
    departamento?: XOR<DepartamentoScalarRelationFilter, DepartamentoWhereInput>
  }

  export type SlaPrioridadOrderByWithRelationInput = {
    prioridadId?: SortOrder
    departamentoId?: SortOrder
    tiempoRespuestaHoras?: SortOrder
    tiempoResolucionHoras?: SortOrder
    createdAt?: SortOrder
    prioridad?: PrioridadOrderByWithRelationInput
    departamento?: DepartamentoOrderByWithRelationInput
  }

  export type SlaPrioridadWhereUniqueInput = Prisma.AtLeast<{
    prioridadId_departamentoId?: SlaPrioridadPrioridadIdDepartamentoIdCompoundUniqueInput
    AND?: SlaPrioridadWhereInput | SlaPrioridadWhereInput[]
    OR?: SlaPrioridadWhereInput[]
    NOT?: SlaPrioridadWhereInput | SlaPrioridadWhereInput[]
    prioridadId?: IntFilter<"SlaPrioridad"> | number
    departamentoId?: IntFilter<"SlaPrioridad"> | number
    tiempoRespuestaHoras?: IntFilter<"SlaPrioridad"> | number
    tiempoResolucionHoras?: IntFilter<"SlaPrioridad"> | number
    createdAt?: DateTimeFilter<"SlaPrioridad"> | Date | string
    prioridad?: XOR<PrioridadScalarRelationFilter, PrioridadWhereInput>
    departamento?: XOR<DepartamentoScalarRelationFilter, DepartamentoWhereInput>
  }, "prioridadId_departamentoId">

  export type SlaPrioridadOrderByWithAggregationInput = {
    prioridadId?: SortOrder
    departamentoId?: SortOrder
    tiempoRespuestaHoras?: SortOrder
    tiempoResolucionHoras?: SortOrder
    createdAt?: SortOrder
    _count?: SlaPrioridadCountOrderByAggregateInput
    _avg?: SlaPrioridadAvgOrderByAggregateInput
    _max?: SlaPrioridadMaxOrderByAggregateInput
    _min?: SlaPrioridadMinOrderByAggregateInput
    _sum?: SlaPrioridadSumOrderByAggregateInput
  }

  export type SlaPrioridadScalarWhereWithAggregatesInput = {
    AND?: SlaPrioridadScalarWhereWithAggregatesInput | SlaPrioridadScalarWhereWithAggregatesInput[]
    OR?: SlaPrioridadScalarWhereWithAggregatesInput[]
    NOT?: SlaPrioridadScalarWhereWithAggregatesInput | SlaPrioridadScalarWhereWithAggregatesInput[]
    prioridadId?: IntWithAggregatesFilter<"SlaPrioridad"> | number
    departamentoId?: IntWithAggregatesFilter<"SlaPrioridad"> | number
    tiempoRespuestaHoras?: IntWithAggregatesFilter<"SlaPrioridad"> | number
    tiempoResolucionHoras?: IntWithAggregatesFilter<"SlaPrioridad"> | number
    createdAt?: DateTimeWithAggregatesFilter<"SlaPrioridad"> | Date | string
  }

  export type TicketWhereInput = {
    AND?: TicketWhereInput | TicketWhereInput[]
    OR?: TicketWhereInput[]
    NOT?: TicketWhereInput | TicketWhereInput[]
    id?: IntFilter<"Ticket"> | number
    numeroTicket?: StringFilter<"Ticket"> | string
    asunto?: StringFilter<"Ticket"> | string
    descripcion?: StringFilter<"Ticket"> | string
    solicitanteId?: IntFilter<"Ticket"> | number
    asignadoA?: IntNullableFilter<"Ticket"> | number | null
    departamentoId?: IntFilter<"Ticket"> | number
    prioridadId?: IntFilter<"Ticket"> | number
    estadoId?: IntFilter<"Ticket"> | number
    fechaVencimiento?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    fechaResolucion?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    fechaCierre?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    createdAt?: DateTimeFilter<"Ticket"> | Date | string
    updatedAt?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    solicitante?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    asignado?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    departamento?: XOR<DepartamentoScalarRelationFilter, DepartamentoWhereInput>
    prioridad?: XOR<PrioridadScalarRelationFilter, PrioridadWhereInput>
    estado?: XOR<EstadoTicketScalarRelationFilter, EstadoTicketWhereInput>
    comentarios?: ComentarioTicketListRelationFilter
    historial?: HistorialTicketListRelationFilter
    archivos?: ArchivoAdjuntoListRelationFilter
    derivaciones?: DerivacionTicketListRelationFilter
    encuesta?: XOR<EncuestaNullableScalarRelationFilter, EncuestaWhereInput> | null
    notificaciones?: NotificacionListRelationFilter
    usuariosEnCopia?: UsuarioEnCopiaListRelationFilter
  }

  export type TicketOrderByWithRelationInput = {
    id?: SortOrder
    numeroTicket?: SortOrder
    asunto?: SortOrder
    descripcion?: SortOrder
    solicitanteId?: SortOrder
    asignadoA?: SortOrderInput | SortOrder
    departamentoId?: SortOrder
    prioridadId?: SortOrder
    estadoId?: SortOrder
    fechaVencimiento?: SortOrderInput | SortOrder
    fechaResolucion?: SortOrderInput | SortOrder
    fechaCierre?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    solicitante?: UsuarioOrderByWithRelationInput
    asignado?: UsuarioOrderByWithRelationInput
    departamento?: DepartamentoOrderByWithRelationInput
    prioridad?: PrioridadOrderByWithRelationInput
    estado?: EstadoTicketOrderByWithRelationInput
    comentarios?: ComentarioTicketOrderByRelationAggregateInput
    historial?: HistorialTicketOrderByRelationAggregateInput
    archivos?: ArchivoAdjuntoOrderByRelationAggregateInput
    derivaciones?: DerivacionTicketOrderByRelationAggregateInput
    encuesta?: EncuestaOrderByWithRelationInput
    notificaciones?: NotificacionOrderByRelationAggregateInput
    usuariosEnCopia?: UsuarioEnCopiaOrderByRelationAggregateInput
  }

  export type TicketWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    numeroTicket?: string
    AND?: TicketWhereInput | TicketWhereInput[]
    OR?: TicketWhereInput[]
    NOT?: TicketWhereInput | TicketWhereInput[]
    asunto?: StringFilter<"Ticket"> | string
    descripcion?: StringFilter<"Ticket"> | string
    solicitanteId?: IntFilter<"Ticket"> | number
    asignadoA?: IntNullableFilter<"Ticket"> | number | null
    departamentoId?: IntFilter<"Ticket"> | number
    prioridadId?: IntFilter<"Ticket"> | number
    estadoId?: IntFilter<"Ticket"> | number
    fechaVencimiento?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    fechaResolucion?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    fechaCierre?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    createdAt?: DateTimeFilter<"Ticket"> | Date | string
    updatedAt?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    solicitante?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    asignado?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    departamento?: XOR<DepartamentoScalarRelationFilter, DepartamentoWhereInput>
    prioridad?: XOR<PrioridadScalarRelationFilter, PrioridadWhereInput>
    estado?: XOR<EstadoTicketScalarRelationFilter, EstadoTicketWhereInput>
    comentarios?: ComentarioTicketListRelationFilter
    historial?: HistorialTicketListRelationFilter
    archivos?: ArchivoAdjuntoListRelationFilter
    derivaciones?: DerivacionTicketListRelationFilter
    encuesta?: XOR<EncuestaNullableScalarRelationFilter, EncuestaWhereInput> | null
    notificaciones?: NotificacionListRelationFilter
    usuariosEnCopia?: UsuarioEnCopiaListRelationFilter
  }, "id" | "numeroTicket">

  export type TicketOrderByWithAggregationInput = {
    id?: SortOrder
    numeroTicket?: SortOrder
    asunto?: SortOrder
    descripcion?: SortOrder
    solicitanteId?: SortOrder
    asignadoA?: SortOrderInput | SortOrder
    departamentoId?: SortOrder
    prioridadId?: SortOrder
    estadoId?: SortOrder
    fechaVencimiento?: SortOrderInput | SortOrder
    fechaResolucion?: SortOrderInput | SortOrder
    fechaCierre?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: TicketCountOrderByAggregateInput
    _avg?: TicketAvgOrderByAggregateInput
    _max?: TicketMaxOrderByAggregateInput
    _min?: TicketMinOrderByAggregateInput
    _sum?: TicketSumOrderByAggregateInput
  }

  export type TicketScalarWhereWithAggregatesInput = {
    AND?: TicketScalarWhereWithAggregatesInput | TicketScalarWhereWithAggregatesInput[]
    OR?: TicketScalarWhereWithAggregatesInput[]
    NOT?: TicketScalarWhereWithAggregatesInput | TicketScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Ticket"> | number
    numeroTicket?: StringWithAggregatesFilter<"Ticket"> | string
    asunto?: StringWithAggregatesFilter<"Ticket"> | string
    descripcion?: StringWithAggregatesFilter<"Ticket"> | string
    solicitanteId?: IntWithAggregatesFilter<"Ticket"> | number
    asignadoA?: IntNullableWithAggregatesFilter<"Ticket"> | number | null
    departamentoId?: IntWithAggregatesFilter<"Ticket"> | number
    prioridadId?: IntWithAggregatesFilter<"Ticket"> | number
    estadoId?: IntWithAggregatesFilter<"Ticket"> | number
    fechaVencimiento?: DateTimeNullableWithAggregatesFilter<"Ticket"> | Date | string | null
    fechaResolucion?: DateTimeNullableWithAggregatesFilter<"Ticket"> | Date | string | null
    fechaCierre?: DateTimeNullableWithAggregatesFilter<"Ticket"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Ticket"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Ticket"> | Date | string | null
  }

  export type HistorialTicketWhereInput = {
    AND?: HistorialTicketWhereInput | HistorialTicketWhereInput[]
    OR?: HistorialTicketWhereInput[]
    NOT?: HistorialTicketWhereInput | HistorialTicketWhereInput[]
    id?: IntFilter<"HistorialTicket"> | number
    ticketId?: IntFilter<"HistorialTicket"> | number
    usuarioId?: IntFilter<"HistorialTicket"> | number
    tipoAccion?: StringFilter<"HistorialTicket"> | string
    campoModificado?: StringNullableFilter<"HistorialTicket"> | string | null
    valorAnterior?: StringNullableFilter<"HistorialTicket"> | string | null
    valorNuevo?: StringNullableFilter<"HistorialTicket"> | string | null
    comentario?: StringNullableFilter<"HistorialTicket"> | string | null
    createdAt?: DateTimeFilter<"HistorialTicket"> | Date | string
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }

  export type HistorialTicketOrderByWithRelationInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
    tipoAccion?: SortOrder
    campoModificado?: SortOrderInput | SortOrder
    valorAnterior?: SortOrderInput | SortOrder
    valorNuevo?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    ticket?: TicketOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type HistorialTicketWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HistorialTicketWhereInput | HistorialTicketWhereInput[]
    OR?: HistorialTicketWhereInput[]
    NOT?: HistorialTicketWhereInput | HistorialTicketWhereInput[]
    ticketId?: IntFilter<"HistorialTicket"> | number
    usuarioId?: IntFilter<"HistorialTicket"> | number
    tipoAccion?: StringFilter<"HistorialTicket"> | string
    campoModificado?: StringNullableFilter<"HistorialTicket"> | string | null
    valorAnterior?: StringNullableFilter<"HistorialTicket"> | string | null
    valorNuevo?: StringNullableFilter<"HistorialTicket"> | string | null
    comentario?: StringNullableFilter<"HistorialTicket"> | string | null
    createdAt?: DateTimeFilter<"HistorialTicket"> | Date | string
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }, "id">

  export type HistorialTicketOrderByWithAggregationInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
    tipoAccion?: SortOrder
    campoModificado?: SortOrderInput | SortOrder
    valorAnterior?: SortOrderInput | SortOrder
    valorNuevo?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: HistorialTicketCountOrderByAggregateInput
    _avg?: HistorialTicketAvgOrderByAggregateInput
    _max?: HistorialTicketMaxOrderByAggregateInput
    _min?: HistorialTicketMinOrderByAggregateInput
    _sum?: HistorialTicketSumOrderByAggregateInput
  }

  export type HistorialTicketScalarWhereWithAggregatesInput = {
    AND?: HistorialTicketScalarWhereWithAggregatesInput | HistorialTicketScalarWhereWithAggregatesInput[]
    OR?: HistorialTicketScalarWhereWithAggregatesInput[]
    NOT?: HistorialTicketScalarWhereWithAggregatesInput | HistorialTicketScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"HistorialTicket"> | number
    ticketId?: IntWithAggregatesFilter<"HistorialTicket"> | number
    usuarioId?: IntWithAggregatesFilter<"HistorialTicket"> | number
    tipoAccion?: StringWithAggregatesFilter<"HistorialTicket"> | string
    campoModificado?: StringNullableWithAggregatesFilter<"HistorialTicket"> | string | null
    valorAnterior?: StringNullableWithAggregatesFilter<"HistorialTicket"> | string | null
    valorNuevo?: StringNullableWithAggregatesFilter<"HistorialTicket"> | string | null
    comentario?: StringNullableWithAggregatesFilter<"HistorialTicket"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"HistorialTicket"> | Date | string
  }

  export type ComentarioTicketWhereInput = {
    AND?: ComentarioTicketWhereInput | ComentarioTicketWhereInput[]
    OR?: ComentarioTicketWhereInput[]
    NOT?: ComentarioTicketWhereInput | ComentarioTicketWhereInput[]
    id?: IntFilter<"ComentarioTicket"> | number
    ticketId?: IntFilter<"ComentarioTicket"> | number
    usuarioId?: IntFilter<"ComentarioTicket"> | number
    comentario?: StringFilter<"ComentarioTicket"> | string
    esInterno?: BoolFilter<"ComentarioTicket"> | boolean
    esSolucion?: BoolFilter<"ComentarioTicket"> | boolean
    createdAt?: DateTimeFilter<"ComentarioTicket"> | Date | string
    updatedAt?: DateTimeNullableFilter<"ComentarioTicket"> | Date | string | null
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    archivos?: ArchivoAdjuntoListRelationFilter
  }

  export type ComentarioTicketOrderByWithRelationInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
    comentario?: SortOrder
    esInterno?: SortOrder
    esSolucion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    ticket?: TicketOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
    archivos?: ArchivoAdjuntoOrderByRelationAggregateInput
  }

  export type ComentarioTicketWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ComentarioTicketWhereInput | ComentarioTicketWhereInput[]
    OR?: ComentarioTicketWhereInput[]
    NOT?: ComentarioTicketWhereInput | ComentarioTicketWhereInput[]
    ticketId?: IntFilter<"ComentarioTicket"> | number
    usuarioId?: IntFilter<"ComentarioTicket"> | number
    comentario?: StringFilter<"ComentarioTicket"> | string
    esInterno?: BoolFilter<"ComentarioTicket"> | boolean
    esSolucion?: BoolFilter<"ComentarioTicket"> | boolean
    createdAt?: DateTimeFilter<"ComentarioTicket"> | Date | string
    updatedAt?: DateTimeNullableFilter<"ComentarioTicket"> | Date | string | null
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    archivos?: ArchivoAdjuntoListRelationFilter
  }, "id">

  export type ComentarioTicketOrderByWithAggregationInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
    comentario?: SortOrder
    esInterno?: SortOrder
    esSolucion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: ComentarioTicketCountOrderByAggregateInput
    _avg?: ComentarioTicketAvgOrderByAggregateInput
    _max?: ComentarioTicketMaxOrderByAggregateInput
    _min?: ComentarioTicketMinOrderByAggregateInput
    _sum?: ComentarioTicketSumOrderByAggregateInput
  }

  export type ComentarioTicketScalarWhereWithAggregatesInput = {
    AND?: ComentarioTicketScalarWhereWithAggregatesInput | ComentarioTicketScalarWhereWithAggregatesInput[]
    OR?: ComentarioTicketScalarWhereWithAggregatesInput[]
    NOT?: ComentarioTicketScalarWhereWithAggregatesInput | ComentarioTicketScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ComentarioTicket"> | number
    ticketId?: IntWithAggregatesFilter<"ComentarioTicket"> | number
    usuarioId?: IntWithAggregatesFilter<"ComentarioTicket"> | number
    comentario?: StringWithAggregatesFilter<"ComentarioTicket"> | string
    esInterno?: BoolWithAggregatesFilter<"ComentarioTicket"> | boolean
    esSolucion?: BoolWithAggregatesFilter<"ComentarioTicket"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ComentarioTicket"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"ComentarioTicket"> | Date | string | null
  }

  export type ArchivoAdjuntoWhereInput = {
    AND?: ArchivoAdjuntoWhereInput | ArchivoAdjuntoWhereInput[]
    OR?: ArchivoAdjuntoWhereInput[]
    NOT?: ArchivoAdjuntoWhereInput | ArchivoAdjuntoWhereInput[]
    id?: IntFilter<"ArchivoAdjunto"> | number
    ticketId?: IntFilter<"ArchivoAdjunto"> | number
    comentarioId?: IntNullableFilter<"ArchivoAdjunto"> | number | null
    nombreOriginal?: StringFilter<"ArchivoAdjunto"> | string
    nombreAlmacenado?: StringFilter<"ArchivoAdjunto"> | string
    rutaArchivo?: StringFilter<"ArchivoAdjunto"> | string
    tamanoArchivo?: IntFilter<"ArchivoAdjunto"> | number
    tipoMime?: StringFilter<"ArchivoAdjunto"> | string
    subidoPor?: IntFilter<"ArchivoAdjunto"> | number
    createdAt?: DateTimeFilter<"ArchivoAdjunto"> | Date | string
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    comentario?: XOR<ComentarioTicketNullableScalarRelationFilter, ComentarioTicketWhereInput> | null
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }

  export type ArchivoAdjuntoOrderByWithRelationInput = {
    id?: SortOrder
    ticketId?: SortOrder
    comentarioId?: SortOrderInput | SortOrder
    nombreOriginal?: SortOrder
    nombreAlmacenado?: SortOrder
    rutaArchivo?: SortOrder
    tamanoArchivo?: SortOrder
    tipoMime?: SortOrder
    subidoPor?: SortOrder
    createdAt?: SortOrder
    ticket?: TicketOrderByWithRelationInput
    comentario?: ComentarioTicketOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type ArchivoAdjuntoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ArchivoAdjuntoWhereInput | ArchivoAdjuntoWhereInput[]
    OR?: ArchivoAdjuntoWhereInput[]
    NOT?: ArchivoAdjuntoWhereInput | ArchivoAdjuntoWhereInput[]
    ticketId?: IntFilter<"ArchivoAdjunto"> | number
    comentarioId?: IntNullableFilter<"ArchivoAdjunto"> | number | null
    nombreOriginal?: StringFilter<"ArchivoAdjunto"> | string
    nombreAlmacenado?: StringFilter<"ArchivoAdjunto"> | string
    rutaArchivo?: StringFilter<"ArchivoAdjunto"> | string
    tamanoArchivo?: IntFilter<"ArchivoAdjunto"> | number
    tipoMime?: StringFilter<"ArchivoAdjunto"> | string
    subidoPor?: IntFilter<"ArchivoAdjunto"> | number
    createdAt?: DateTimeFilter<"ArchivoAdjunto"> | Date | string
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    comentario?: XOR<ComentarioTicketNullableScalarRelationFilter, ComentarioTicketWhereInput> | null
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }, "id">

  export type ArchivoAdjuntoOrderByWithAggregationInput = {
    id?: SortOrder
    ticketId?: SortOrder
    comentarioId?: SortOrderInput | SortOrder
    nombreOriginal?: SortOrder
    nombreAlmacenado?: SortOrder
    rutaArchivo?: SortOrder
    tamanoArchivo?: SortOrder
    tipoMime?: SortOrder
    subidoPor?: SortOrder
    createdAt?: SortOrder
    _count?: ArchivoAdjuntoCountOrderByAggregateInput
    _avg?: ArchivoAdjuntoAvgOrderByAggregateInput
    _max?: ArchivoAdjuntoMaxOrderByAggregateInput
    _min?: ArchivoAdjuntoMinOrderByAggregateInput
    _sum?: ArchivoAdjuntoSumOrderByAggregateInput
  }

  export type ArchivoAdjuntoScalarWhereWithAggregatesInput = {
    AND?: ArchivoAdjuntoScalarWhereWithAggregatesInput | ArchivoAdjuntoScalarWhereWithAggregatesInput[]
    OR?: ArchivoAdjuntoScalarWhereWithAggregatesInput[]
    NOT?: ArchivoAdjuntoScalarWhereWithAggregatesInput | ArchivoAdjuntoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ArchivoAdjunto"> | number
    ticketId?: IntWithAggregatesFilter<"ArchivoAdjunto"> | number
    comentarioId?: IntNullableWithAggregatesFilter<"ArchivoAdjunto"> | number | null
    nombreOriginal?: StringWithAggregatesFilter<"ArchivoAdjunto"> | string
    nombreAlmacenado?: StringWithAggregatesFilter<"ArchivoAdjunto"> | string
    rutaArchivo?: StringWithAggregatesFilter<"ArchivoAdjunto"> | string
    tamanoArchivo?: IntWithAggregatesFilter<"ArchivoAdjunto"> | number
    tipoMime?: StringWithAggregatesFilter<"ArchivoAdjunto"> | string
    subidoPor?: IntWithAggregatesFilter<"ArchivoAdjunto"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ArchivoAdjunto"> | Date | string
  }

  export type DerivacionTicketWhereInput = {
    AND?: DerivacionTicketWhereInput | DerivacionTicketWhereInput[]
    OR?: DerivacionTicketWhereInput[]
    NOT?: DerivacionTicketWhereInput | DerivacionTicketWhereInput[]
    id?: IntFilter<"DerivacionTicket"> | number
    ticketId?: IntFilter<"DerivacionTicket"> | number
    departamentoOrigenId?: IntFilter<"DerivacionTicket"> | number
    departamentoDestinoId?: IntFilter<"DerivacionTicket"> | number
    motivo?: StringNullableFilter<"DerivacionTicket"> | string | null
    derivadoPor?: IntFilter<"DerivacionTicket"> | number
    createdAt?: DateTimeFilter<"DerivacionTicket"> | Date | string
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    departamentoOrigen?: XOR<DepartamentoScalarRelationFilter, DepartamentoWhereInput>
    departamentoDestino?: XOR<DepartamentoScalarRelationFilter, DepartamentoWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }

  export type DerivacionTicketOrderByWithRelationInput = {
    id?: SortOrder
    ticketId?: SortOrder
    departamentoOrigenId?: SortOrder
    departamentoDestinoId?: SortOrder
    motivo?: SortOrderInput | SortOrder
    derivadoPor?: SortOrder
    createdAt?: SortOrder
    ticket?: TicketOrderByWithRelationInput
    departamentoOrigen?: DepartamentoOrderByWithRelationInput
    departamentoDestino?: DepartamentoOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type DerivacionTicketWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DerivacionTicketWhereInput | DerivacionTicketWhereInput[]
    OR?: DerivacionTicketWhereInput[]
    NOT?: DerivacionTicketWhereInput | DerivacionTicketWhereInput[]
    ticketId?: IntFilter<"DerivacionTicket"> | number
    departamentoOrigenId?: IntFilter<"DerivacionTicket"> | number
    departamentoDestinoId?: IntFilter<"DerivacionTicket"> | number
    motivo?: StringNullableFilter<"DerivacionTicket"> | string | null
    derivadoPor?: IntFilter<"DerivacionTicket"> | number
    createdAt?: DateTimeFilter<"DerivacionTicket"> | Date | string
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    departamentoOrigen?: XOR<DepartamentoScalarRelationFilter, DepartamentoWhereInput>
    departamentoDestino?: XOR<DepartamentoScalarRelationFilter, DepartamentoWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }, "id">

  export type DerivacionTicketOrderByWithAggregationInput = {
    id?: SortOrder
    ticketId?: SortOrder
    departamentoOrigenId?: SortOrder
    departamentoDestinoId?: SortOrder
    motivo?: SortOrderInput | SortOrder
    derivadoPor?: SortOrder
    createdAt?: SortOrder
    _count?: DerivacionTicketCountOrderByAggregateInput
    _avg?: DerivacionTicketAvgOrderByAggregateInput
    _max?: DerivacionTicketMaxOrderByAggregateInput
    _min?: DerivacionTicketMinOrderByAggregateInput
    _sum?: DerivacionTicketSumOrderByAggregateInput
  }

  export type DerivacionTicketScalarWhereWithAggregatesInput = {
    AND?: DerivacionTicketScalarWhereWithAggregatesInput | DerivacionTicketScalarWhereWithAggregatesInput[]
    OR?: DerivacionTicketScalarWhereWithAggregatesInput[]
    NOT?: DerivacionTicketScalarWhereWithAggregatesInput | DerivacionTicketScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DerivacionTicket"> | number
    ticketId?: IntWithAggregatesFilter<"DerivacionTicket"> | number
    departamentoOrigenId?: IntWithAggregatesFilter<"DerivacionTicket"> | number
    departamentoDestinoId?: IntWithAggregatesFilter<"DerivacionTicket"> | number
    motivo?: StringNullableWithAggregatesFilter<"DerivacionTicket"> | string | null
    derivadoPor?: IntWithAggregatesFilter<"DerivacionTicket"> | number
    createdAt?: DateTimeWithAggregatesFilter<"DerivacionTicket"> | Date | string
  }

  export type EncuestaWhereInput = {
    AND?: EncuestaWhereInput | EncuestaWhereInput[]
    OR?: EncuestaWhereInput[]
    NOT?: EncuestaWhereInput | EncuestaWhereInput[]
    id?: IntFilter<"Encuesta"> | number
    ticketId?: IntFilter<"Encuesta"> | number
    calificacion?: IntNullableFilter<"Encuesta"> | number | null
    comentario?: StringNullableFilter<"Encuesta"> | string | null
    enviadoPor?: IntNullableFilter<"Encuesta"> | number | null
    fechaEnvio?: DateTimeFilter<"Encuesta"> | Date | string
    fechaRespuesta?: DateTimeNullableFilter<"Encuesta"> | Date | string | null
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }

  export type EncuestaOrderByWithRelationInput = {
    id?: SortOrder
    ticketId?: SortOrder
    calificacion?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    enviadoPor?: SortOrderInput | SortOrder
    fechaEnvio?: SortOrder
    fechaRespuesta?: SortOrderInput | SortOrder
    ticket?: TicketOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type EncuestaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    ticketId?: number
    AND?: EncuestaWhereInput | EncuestaWhereInput[]
    OR?: EncuestaWhereInput[]
    NOT?: EncuestaWhereInput | EncuestaWhereInput[]
    calificacion?: IntNullableFilter<"Encuesta"> | number | null
    comentario?: StringNullableFilter<"Encuesta"> | string | null
    enviadoPor?: IntNullableFilter<"Encuesta"> | number | null
    fechaEnvio?: DateTimeFilter<"Encuesta"> | Date | string
    fechaRespuesta?: DateTimeNullableFilter<"Encuesta"> | Date | string | null
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }, "id" | "ticketId">

  export type EncuestaOrderByWithAggregationInput = {
    id?: SortOrder
    ticketId?: SortOrder
    calificacion?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    enviadoPor?: SortOrderInput | SortOrder
    fechaEnvio?: SortOrder
    fechaRespuesta?: SortOrderInput | SortOrder
    _count?: EncuestaCountOrderByAggregateInput
    _avg?: EncuestaAvgOrderByAggregateInput
    _max?: EncuestaMaxOrderByAggregateInput
    _min?: EncuestaMinOrderByAggregateInput
    _sum?: EncuestaSumOrderByAggregateInput
  }

  export type EncuestaScalarWhereWithAggregatesInput = {
    AND?: EncuestaScalarWhereWithAggregatesInput | EncuestaScalarWhereWithAggregatesInput[]
    OR?: EncuestaScalarWhereWithAggregatesInput[]
    NOT?: EncuestaScalarWhereWithAggregatesInput | EncuestaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Encuesta"> | number
    ticketId?: IntWithAggregatesFilter<"Encuesta"> | number
    calificacion?: IntNullableWithAggregatesFilter<"Encuesta"> | number | null
    comentario?: StringNullableWithAggregatesFilter<"Encuesta"> | string | null
    enviadoPor?: IntNullableWithAggregatesFilter<"Encuesta"> | number | null
    fechaEnvio?: DateTimeWithAggregatesFilter<"Encuesta"> | Date | string
    fechaRespuesta?: DateTimeNullableWithAggregatesFilter<"Encuesta"> | Date | string | null
  }

  export type NotificacionWhereInput = {
    AND?: NotificacionWhereInput | NotificacionWhereInput[]
    OR?: NotificacionWhereInput[]
    NOT?: NotificacionWhereInput | NotificacionWhereInput[]
    id?: IntFilter<"Notificacion"> | number
    usuarioId?: IntFilter<"Notificacion"> | number
    ticketId?: IntNullableFilter<"Notificacion"> | number | null
    tipo?: StringFilter<"Notificacion"> | string
    titulo?: StringFilter<"Notificacion"> | string
    mensaje?: StringFilter<"Notificacion"> | string
    leido?: BoolFilter<"Notificacion"> | boolean
    correoEnviado?: BoolFilter<"Notificacion"> | boolean
    fechaEnvioCorreo?: DateTimeNullableFilter<"Notificacion"> | Date | string | null
    createdAt?: DateTimeFilter<"Notificacion"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    ticket?: XOR<TicketNullableScalarRelationFilter, TicketWhereInput> | null
  }

  export type NotificacionOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    ticketId?: SortOrderInput | SortOrder
    tipo?: SortOrder
    titulo?: SortOrder
    mensaje?: SortOrder
    leido?: SortOrder
    correoEnviado?: SortOrder
    fechaEnvioCorreo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    ticket?: TicketOrderByWithRelationInput
  }

  export type NotificacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: NotificacionWhereInput | NotificacionWhereInput[]
    OR?: NotificacionWhereInput[]
    NOT?: NotificacionWhereInput | NotificacionWhereInput[]
    usuarioId?: IntFilter<"Notificacion"> | number
    ticketId?: IntNullableFilter<"Notificacion"> | number | null
    tipo?: StringFilter<"Notificacion"> | string
    titulo?: StringFilter<"Notificacion"> | string
    mensaje?: StringFilter<"Notificacion"> | string
    leido?: BoolFilter<"Notificacion"> | boolean
    correoEnviado?: BoolFilter<"Notificacion"> | boolean
    fechaEnvioCorreo?: DateTimeNullableFilter<"Notificacion"> | Date | string | null
    createdAt?: DateTimeFilter<"Notificacion"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    ticket?: XOR<TicketNullableScalarRelationFilter, TicketWhereInput> | null
  }, "id">

  export type NotificacionOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    ticketId?: SortOrderInput | SortOrder
    tipo?: SortOrder
    titulo?: SortOrder
    mensaje?: SortOrder
    leido?: SortOrder
    correoEnviado?: SortOrder
    fechaEnvioCorreo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: NotificacionCountOrderByAggregateInput
    _avg?: NotificacionAvgOrderByAggregateInput
    _max?: NotificacionMaxOrderByAggregateInput
    _min?: NotificacionMinOrderByAggregateInput
    _sum?: NotificacionSumOrderByAggregateInput
  }

  export type NotificacionScalarWhereWithAggregatesInput = {
    AND?: NotificacionScalarWhereWithAggregatesInput | NotificacionScalarWhereWithAggregatesInput[]
    OR?: NotificacionScalarWhereWithAggregatesInput[]
    NOT?: NotificacionScalarWhereWithAggregatesInput | NotificacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Notificacion"> | number
    usuarioId?: IntWithAggregatesFilter<"Notificacion"> | number
    ticketId?: IntNullableWithAggregatesFilter<"Notificacion"> | number | null
    tipo?: StringWithAggregatesFilter<"Notificacion"> | string
    titulo?: StringWithAggregatesFilter<"Notificacion"> | string
    mensaje?: StringWithAggregatesFilter<"Notificacion"> | string
    leido?: BoolWithAggregatesFilter<"Notificacion"> | boolean
    correoEnviado?: BoolWithAggregatesFilter<"Notificacion"> | boolean
    fechaEnvioCorreo?: DateTimeNullableWithAggregatesFilter<"Notificacion"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Notificacion"> | Date | string
  }

  export type UsuarioEnCopiaWhereInput = {
    AND?: UsuarioEnCopiaWhereInput | UsuarioEnCopiaWhereInput[]
    OR?: UsuarioEnCopiaWhereInput[]
    NOT?: UsuarioEnCopiaWhereInput | UsuarioEnCopiaWhereInput[]
    ticketId?: IntFilter<"UsuarioEnCopia"> | number
    usuarioId?: IntFilter<"UsuarioEnCopia"> | number
    agregadoPor?: IntFilter<"UsuarioEnCopia"> | number
    createdAt?: DateTimeFilter<"UsuarioEnCopia"> | Date | string
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }

  export type UsuarioEnCopiaOrderByWithRelationInput = {
    ticketId?: SortOrder
    usuarioId?: SortOrder
    agregadoPor?: SortOrder
    createdAt?: SortOrder
    ticket?: TicketOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type UsuarioEnCopiaWhereUniqueInput = Prisma.AtLeast<{
    ticketId_usuarioId?: UsuarioEnCopiaTicketIdUsuarioIdCompoundUniqueInput
    AND?: UsuarioEnCopiaWhereInput | UsuarioEnCopiaWhereInput[]
    OR?: UsuarioEnCopiaWhereInput[]
    NOT?: UsuarioEnCopiaWhereInput | UsuarioEnCopiaWhereInput[]
    ticketId?: IntFilter<"UsuarioEnCopia"> | number
    usuarioId?: IntFilter<"UsuarioEnCopia"> | number
    agregadoPor?: IntFilter<"UsuarioEnCopia"> | number
    createdAt?: DateTimeFilter<"UsuarioEnCopia"> | Date | string
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }, "ticketId_usuarioId">

  export type UsuarioEnCopiaOrderByWithAggregationInput = {
    ticketId?: SortOrder
    usuarioId?: SortOrder
    agregadoPor?: SortOrder
    createdAt?: SortOrder
    _count?: UsuarioEnCopiaCountOrderByAggregateInput
    _avg?: UsuarioEnCopiaAvgOrderByAggregateInput
    _max?: UsuarioEnCopiaMaxOrderByAggregateInput
    _min?: UsuarioEnCopiaMinOrderByAggregateInput
    _sum?: UsuarioEnCopiaSumOrderByAggregateInput
  }

  export type UsuarioEnCopiaScalarWhereWithAggregatesInput = {
    AND?: UsuarioEnCopiaScalarWhereWithAggregatesInput | UsuarioEnCopiaScalarWhereWithAggregatesInput[]
    OR?: UsuarioEnCopiaScalarWhereWithAggregatesInput[]
    NOT?: UsuarioEnCopiaScalarWhereWithAggregatesInput | UsuarioEnCopiaScalarWhereWithAggregatesInput[]
    ticketId?: IntWithAggregatesFilter<"UsuarioEnCopia"> | number
    usuarioId?: IntWithAggregatesFilter<"UsuarioEnCopia"> | number
    agregadoPor?: IntWithAggregatesFilter<"UsuarioEnCopia"> | number
    createdAt?: DateTimeWithAggregatesFilter<"UsuarioEnCopia"> | Date | string
  }

  export type ConfiguracionSistemaWhereInput = {
    AND?: ConfiguracionSistemaWhereInput | ConfiguracionSistemaWhereInput[]
    OR?: ConfiguracionSistemaWhereInput[]
    NOT?: ConfiguracionSistemaWhereInput | ConfiguracionSistemaWhereInput[]
    id?: IntFilter<"ConfiguracionSistema"> | number
    claveConfiguracion?: StringFilter<"ConfiguracionSistema"> | string
    valorConfiguracion?: StringFilter<"ConfiguracionSistema"> | string
    tipoDato?: StringFilter<"ConfiguracionSistema"> | string
    actualizadoPor?: IntFilter<"ConfiguracionSistema"> | number
    createdAt?: DateTimeFilter<"ConfiguracionSistema"> | Date | string
    updatedAt?: DateTimeNullableFilter<"ConfiguracionSistema"> | Date | string | null
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }

  export type ConfiguracionSistemaOrderByWithRelationInput = {
    id?: SortOrder
    claveConfiguracion?: SortOrder
    valorConfiguracion?: SortOrder
    tipoDato?: SortOrder
    actualizadoPor?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type ConfiguracionSistemaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    claveConfiguracion?: string
    AND?: ConfiguracionSistemaWhereInput | ConfiguracionSistemaWhereInput[]
    OR?: ConfiguracionSistemaWhereInput[]
    NOT?: ConfiguracionSistemaWhereInput | ConfiguracionSistemaWhereInput[]
    valorConfiguracion?: StringFilter<"ConfiguracionSistema"> | string
    tipoDato?: StringFilter<"ConfiguracionSistema"> | string
    actualizadoPor?: IntFilter<"ConfiguracionSistema"> | number
    createdAt?: DateTimeFilter<"ConfiguracionSistema"> | Date | string
    updatedAt?: DateTimeNullableFilter<"ConfiguracionSistema"> | Date | string | null
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }, "id" | "claveConfiguracion">

  export type ConfiguracionSistemaOrderByWithAggregationInput = {
    id?: SortOrder
    claveConfiguracion?: SortOrder
    valorConfiguracion?: SortOrder
    tipoDato?: SortOrder
    actualizadoPor?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: ConfiguracionSistemaCountOrderByAggregateInput
    _avg?: ConfiguracionSistemaAvgOrderByAggregateInput
    _max?: ConfiguracionSistemaMaxOrderByAggregateInput
    _min?: ConfiguracionSistemaMinOrderByAggregateInput
    _sum?: ConfiguracionSistemaSumOrderByAggregateInput
  }

  export type ConfiguracionSistemaScalarWhereWithAggregatesInput = {
    AND?: ConfiguracionSistemaScalarWhereWithAggregatesInput | ConfiguracionSistemaScalarWhereWithAggregatesInput[]
    OR?: ConfiguracionSistemaScalarWhereWithAggregatesInput[]
    NOT?: ConfiguracionSistemaScalarWhereWithAggregatesInput | ConfiguracionSistemaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ConfiguracionSistema"> | number
    claveConfiguracion?: StringWithAggregatesFilter<"ConfiguracionSistema"> | string
    valorConfiguracion?: StringWithAggregatesFilter<"ConfiguracionSistema"> | string
    tipoDato?: StringWithAggregatesFilter<"ConfiguracionSistema"> | string
    actualizadoPor?: IntWithAggregatesFilter<"ConfiguracionSistema"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ConfiguracionSistema"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"ConfiguracionSistema"> | Date | string | null
  }

  export type PasswordResetTokenWhereInput = {
    AND?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    OR?: PasswordResetTokenWhereInput[]
    NOT?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    id?: StringFilter<"PasswordResetToken"> | string
    email?: StringFilter<"PasswordResetToken"> | string
    token?: StringFilter<"PasswordResetToken"> | string
    expiresAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    used?: BoolFilter<"PasswordResetToken"> | boolean
    createdAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    updatedAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
  }

  export type PasswordResetTokenOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    used?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PasswordResetTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    OR?: PasswordResetTokenWhereInput[]
    NOT?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    email?: StringFilter<"PasswordResetToken"> | string
    expiresAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    used?: BoolFilter<"PasswordResetToken"> | boolean
    createdAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    updatedAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
  }, "id" | "token">

  export type PasswordResetTokenOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    used?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PasswordResetTokenCountOrderByAggregateInput
    _max?: PasswordResetTokenMaxOrderByAggregateInput
    _min?: PasswordResetTokenMinOrderByAggregateInput
  }

  export type PasswordResetTokenScalarWhereWithAggregatesInput = {
    AND?: PasswordResetTokenScalarWhereWithAggregatesInput | PasswordResetTokenScalarWhereWithAggregatesInput[]
    OR?: PasswordResetTokenScalarWhereWithAggregatesInput[]
    NOT?: PasswordResetTokenScalarWhereWithAggregatesInput | PasswordResetTokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PasswordResetToken"> | string
    email?: StringWithAggregatesFilter<"PasswordResetToken"> | string
    token?: StringWithAggregatesFilter<"PasswordResetToken"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"PasswordResetToken"> | Date | string
    used?: BoolWithAggregatesFilter<"PasswordResetToken"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"PasswordResetToken"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PasswordResetToken"> | Date | string
  }

  export type DepartamentoCreateInput = {
    nombre: string
    createdAt?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutDepartamentoInput
    tickets?: TicketCreateNestedManyWithoutDepartamentoInput
    derivacionesOrigen?: DerivacionTicketCreateNestedManyWithoutDepartamentoOrigenInput
    derivacionesDestino?: DerivacionTicketCreateNestedManyWithoutDepartamentoDestinoInput
    slaPrioridades?: SlaPrioridadCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUncheckedCreateInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutDepartamentoInput
    tickets?: TicketUncheckedCreateNestedManyWithoutDepartamentoInput
    derivacionesOrigen?: DerivacionTicketUncheckedCreateNestedManyWithoutDepartamentoOrigenInput
    derivacionesDestino?: DerivacionTicketUncheckedCreateNestedManyWithoutDepartamentoDestinoInput
    slaPrioridades?: SlaPrioridadUncheckedCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutDepartamentoNestedInput
    tickets?: TicketUpdateManyWithoutDepartamentoNestedInput
    derivacionesOrigen?: DerivacionTicketUpdateManyWithoutDepartamentoOrigenNestedInput
    derivacionesDestino?: DerivacionTicketUpdateManyWithoutDepartamentoDestinoNestedInput
    slaPrioridades?: SlaPrioridadUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutDepartamentoNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutDepartamentoNestedInput
    derivacionesOrigen?: DerivacionTicketUncheckedUpdateManyWithoutDepartamentoOrigenNestedInput
    derivacionesDestino?: DerivacionTicketUncheckedUpdateManyWithoutDepartamentoDestinoNestedInput
    slaPrioridades?: SlaPrioridadUncheckedUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoCreateManyInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
  }

  export type DepartamentoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepartamentoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolCreateInput = {
    nombre: string
    permisos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutRolInput
  }

  export type RolUncheckedCreateInput = {
    id?: number
    nombre: string
    permisos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutRolInput
  }

  export type RolUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    permisos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutRolNestedInput
  }

  export type RolUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    permisos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutRolNestedInput
  }

  export type RolCreateManyInput = {
    id?: number
    nombre: string
    permisos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type RolUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    permisos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    permisos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioCreateInput = {
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    rol: RolCreateNestedOneWithoutUsuariosInput
    departamento: DepartamentoCreateNestedOneWithoutUsuariosInput
    ticketsCreados?: TicketCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticketsCreados?: TicketUncheckedCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketUncheckedCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaUncheckedCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutUsuariosNestedInput
    ticketsCreados?: TicketUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketsCreados?: TicketUncheckedUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUncheckedUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUncheckedUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type UsuarioUpdateManyMutationInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EstadoTicketCreateInput = {
    nombre: string
    esEstadoFinal?: boolean
    ordenSecuencia: number
    createdAt?: Date | string
    tickets?: TicketCreateNestedManyWithoutEstadoInput
  }

  export type EstadoTicketUncheckedCreateInput = {
    id?: number
    nombre: string
    esEstadoFinal?: boolean
    ordenSecuencia: number
    createdAt?: Date | string
    tickets?: TicketUncheckedCreateNestedManyWithoutEstadoInput
  }

  export type EstadoTicketUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    esEstadoFinal?: BoolFieldUpdateOperationsInput | boolean
    ordenSecuencia?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tickets?: TicketUpdateManyWithoutEstadoNestedInput
  }

  export type EstadoTicketUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    esEstadoFinal?: BoolFieldUpdateOperationsInput | boolean
    ordenSecuencia?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tickets?: TicketUncheckedUpdateManyWithoutEstadoNestedInput
  }

  export type EstadoTicketCreateManyInput = {
    id?: number
    nombre: string
    esEstadoFinal?: boolean
    ordenSecuencia: number
    createdAt?: Date | string
  }

  export type EstadoTicketUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    esEstadoFinal?: BoolFieldUpdateOperationsInput | boolean
    ordenSecuencia?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EstadoTicketUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    esEstadoFinal?: BoolFieldUpdateOperationsInput | boolean
    ordenSecuencia?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PrioridadCreateInput = {
    nombre: string
    nivel: number
    createdAt?: Date | string
    tickets?: TicketCreateNestedManyWithoutPrioridadInput
    slas?: SlaPrioridadCreateNestedManyWithoutPrioridadInput
  }

  export type PrioridadUncheckedCreateInput = {
    id?: number
    nombre: string
    nivel: number
    createdAt?: Date | string
    tickets?: TicketUncheckedCreateNestedManyWithoutPrioridadInput
    slas?: SlaPrioridadUncheckedCreateNestedManyWithoutPrioridadInput
  }

  export type PrioridadUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tickets?: TicketUpdateManyWithoutPrioridadNestedInput
    slas?: SlaPrioridadUpdateManyWithoutPrioridadNestedInput
  }

  export type PrioridadUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tickets?: TicketUncheckedUpdateManyWithoutPrioridadNestedInput
    slas?: SlaPrioridadUncheckedUpdateManyWithoutPrioridadNestedInput
  }

  export type PrioridadCreateManyInput = {
    id?: number
    nombre: string
    nivel: number
    createdAt?: Date | string
  }

  export type PrioridadUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PrioridadUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SlaPrioridadCreateInput = {
    tiempoRespuestaHoras: number
    tiempoResolucionHoras: number
    createdAt?: Date | string
    prioridad: PrioridadCreateNestedOneWithoutSlasInput
    departamento: DepartamentoCreateNestedOneWithoutSlaPrioridadesInput
  }

  export type SlaPrioridadUncheckedCreateInput = {
    prioridadId: number
    departamentoId: number
    tiempoRespuestaHoras: number
    tiempoResolucionHoras: number
    createdAt?: Date | string
  }

  export type SlaPrioridadUpdateInput = {
    tiempoRespuestaHoras?: IntFieldUpdateOperationsInput | number
    tiempoResolucionHoras?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    prioridad?: PrioridadUpdateOneRequiredWithoutSlasNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutSlaPrioridadesNestedInput
  }

  export type SlaPrioridadUncheckedUpdateInput = {
    prioridadId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    tiempoRespuestaHoras?: IntFieldUpdateOperationsInput | number
    tiempoResolucionHoras?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SlaPrioridadCreateManyInput = {
    prioridadId: number
    departamentoId: number
    tiempoRespuestaHoras: number
    tiempoResolucionHoras: number
    createdAt?: Date | string
  }

  export type SlaPrioridadUpdateManyMutationInput = {
    tiempoRespuestaHoras?: IntFieldUpdateOperationsInput | number
    tiempoResolucionHoras?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SlaPrioridadUncheckedUpdateManyInput = {
    prioridadId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    tiempoRespuestaHoras?: IntFieldUpdateOperationsInput | number
    tiempoResolucionHoras?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketCreateInput = {
    numeroTicket: string
    asunto: string
    descripcion: string
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    solicitante: UsuarioCreateNestedOneWithoutTicketsCreadosInput
    asignado?: UsuarioCreateNestedOneWithoutTicketsAsignadosInput
    departamento: DepartamentoCreateNestedOneWithoutTicketsInput
    prioridad: PrioridadCreateNestedOneWithoutTicketsInput
    estado: EstadoTicketCreateNestedOneWithoutTicketsInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaUncheckedCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketUpdateInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    solicitante?: UsuarioUpdateOneRequiredWithoutTicketsCreadosNestedInput
    asignado?: UsuarioUpdateOneWithoutTicketsAsignadosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutTicketsNestedInput
    prioridad?: PrioridadUpdateOneRequiredWithoutTicketsNestedInput
    estado?: EstadoTicketUpdateOneRequiredWithoutTicketsNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUncheckedUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketCreateManyInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type TicketUpdateManyMutationInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HistorialTicketCreateInput = {
    tipoAccion: string
    campoModificado?: string | null
    valorAnterior?: string | null
    valorNuevo?: string | null
    comentario?: string | null
    createdAt?: Date | string
    ticket: TicketCreateNestedOneWithoutHistorialInput
    usuario: UsuarioCreateNestedOneWithoutHistorialInput
  }

  export type HistorialTicketUncheckedCreateInput = {
    id?: number
    ticketId: number
    usuarioId: number
    tipoAccion: string
    campoModificado?: string | null
    valorAnterior?: string | null
    valorNuevo?: string | null
    comentario?: string | null
    createdAt?: Date | string
  }

  export type HistorialTicketUpdateInput = {
    tipoAccion?: StringFieldUpdateOperationsInput | string
    campoModificado?: NullableStringFieldUpdateOperationsInput | string | null
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket?: TicketUpdateOneRequiredWithoutHistorialNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutHistorialNestedInput
  }

  export type HistorialTicketUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    tipoAccion?: StringFieldUpdateOperationsInput | string
    campoModificado?: NullableStringFieldUpdateOperationsInput | string | null
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialTicketCreateManyInput = {
    id?: number
    ticketId: number
    usuarioId: number
    tipoAccion: string
    campoModificado?: string | null
    valorAnterior?: string | null
    valorNuevo?: string | null
    comentario?: string | null
    createdAt?: Date | string
  }

  export type HistorialTicketUpdateManyMutationInput = {
    tipoAccion?: StringFieldUpdateOperationsInput | string
    campoModificado?: NullableStringFieldUpdateOperationsInput | string | null
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialTicketUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    tipoAccion?: StringFieldUpdateOperationsInput | string
    campoModificado?: NullableStringFieldUpdateOperationsInput | string | null
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioTicketCreateInput = {
    comentario: string
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticket: TicketCreateNestedOneWithoutComentariosInput
    usuario: UsuarioCreateNestedOneWithoutComentariosInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutComentarioInput
  }

  export type ComentarioTicketUncheckedCreateInput = {
    id?: number
    ticketId: number
    usuarioId: number
    comentario: string
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutComentarioInput
  }

  export type ComentarioTicketUpdateInput = {
    comentario?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    esSolucion?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticket?: TicketUpdateOneRequiredWithoutComentariosNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutComentariosNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutComentarioNestedInput
  }

  export type ComentarioTicketUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    comentario?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    esSolucion?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutComentarioNestedInput
  }

  export type ComentarioTicketCreateManyInput = {
    id?: number
    ticketId: number
    usuarioId: number
    comentario: string
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type ComentarioTicketUpdateManyMutationInput = {
    comentario?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    esSolucion?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ComentarioTicketUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    comentario?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    esSolucion?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ArchivoAdjuntoCreateInput = {
    nombreOriginal: string
    nombreAlmacenado: string
    rutaArchivo: string
    tamanoArchivo: number
    tipoMime: string
    createdAt?: Date | string
    ticket: TicketCreateNestedOneWithoutArchivosInput
    comentario?: ComentarioTicketCreateNestedOneWithoutArchivosInput
    usuario: UsuarioCreateNestedOneWithoutArchivosSubidosInput
  }

  export type ArchivoAdjuntoUncheckedCreateInput = {
    id?: number
    ticketId: number
    comentarioId?: number | null
    nombreOriginal: string
    nombreAlmacenado: string
    rutaArchivo: string
    tamanoArchivo: number
    tipoMime: string
    subidoPor: number
    createdAt?: Date | string
  }

  export type ArchivoAdjuntoUpdateInput = {
    nombreOriginal?: StringFieldUpdateOperationsInput | string
    nombreAlmacenado?: StringFieldUpdateOperationsInput | string
    rutaArchivo?: StringFieldUpdateOperationsInput | string
    tamanoArchivo?: IntFieldUpdateOperationsInput | number
    tipoMime?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket?: TicketUpdateOneRequiredWithoutArchivosNestedInput
    comentario?: ComentarioTicketUpdateOneWithoutArchivosNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutArchivosSubidosNestedInput
  }

  export type ArchivoAdjuntoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    comentarioId?: NullableIntFieldUpdateOperationsInput | number | null
    nombreOriginal?: StringFieldUpdateOperationsInput | string
    nombreAlmacenado?: StringFieldUpdateOperationsInput | string
    rutaArchivo?: StringFieldUpdateOperationsInput | string
    tamanoArchivo?: IntFieldUpdateOperationsInput | number
    tipoMime?: StringFieldUpdateOperationsInput | string
    subidoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArchivoAdjuntoCreateManyInput = {
    id?: number
    ticketId: number
    comentarioId?: number | null
    nombreOriginal: string
    nombreAlmacenado: string
    rutaArchivo: string
    tamanoArchivo: number
    tipoMime: string
    subidoPor: number
    createdAt?: Date | string
  }

  export type ArchivoAdjuntoUpdateManyMutationInput = {
    nombreOriginal?: StringFieldUpdateOperationsInput | string
    nombreAlmacenado?: StringFieldUpdateOperationsInput | string
    rutaArchivo?: StringFieldUpdateOperationsInput | string
    tamanoArchivo?: IntFieldUpdateOperationsInput | number
    tipoMime?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArchivoAdjuntoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    comentarioId?: NullableIntFieldUpdateOperationsInput | number | null
    nombreOriginal?: StringFieldUpdateOperationsInput | string
    nombreAlmacenado?: StringFieldUpdateOperationsInput | string
    rutaArchivo?: StringFieldUpdateOperationsInput | string
    tamanoArchivo?: IntFieldUpdateOperationsInput | number
    tipoMime?: StringFieldUpdateOperationsInput | string
    subidoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DerivacionTicketCreateInput = {
    motivo?: string | null
    createdAt?: Date | string
    ticket: TicketCreateNestedOneWithoutDerivacionesInput
    departamentoOrigen: DepartamentoCreateNestedOneWithoutDerivacionesOrigenInput
    departamentoDestino: DepartamentoCreateNestedOneWithoutDerivacionesDestinoInput
    usuario: UsuarioCreateNestedOneWithoutDerivacionesInput
  }

  export type DerivacionTicketUncheckedCreateInput = {
    id?: number
    ticketId: number
    departamentoOrigenId: number
    departamentoDestinoId: number
    motivo?: string | null
    derivadoPor: number
    createdAt?: Date | string
  }

  export type DerivacionTicketUpdateInput = {
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket?: TicketUpdateOneRequiredWithoutDerivacionesNestedInput
    departamentoOrigen?: DepartamentoUpdateOneRequiredWithoutDerivacionesOrigenNestedInput
    departamentoDestino?: DepartamentoUpdateOneRequiredWithoutDerivacionesDestinoNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutDerivacionesNestedInput
  }

  export type DerivacionTicketUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    departamentoOrigenId?: IntFieldUpdateOperationsInput | number
    departamentoDestinoId?: IntFieldUpdateOperationsInput | number
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    derivadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DerivacionTicketCreateManyInput = {
    id?: number
    ticketId: number
    departamentoOrigenId: number
    departamentoDestinoId: number
    motivo?: string | null
    derivadoPor: number
    createdAt?: Date | string
  }

  export type DerivacionTicketUpdateManyMutationInput = {
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DerivacionTicketUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    departamentoOrigenId?: IntFieldUpdateOperationsInput | number
    departamentoDestinoId?: IntFieldUpdateOperationsInput | number
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    derivadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EncuestaCreateInput = {
    calificacion?: number | null
    comentario?: string | null
    fechaEnvio?: Date | string
    fechaRespuesta?: Date | string | null
    ticket: TicketCreateNestedOneWithoutEncuestaInput
    usuario?: UsuarioCreateNestedOneWithoutEncuestasInput
  }

  export type EncuestaUncheckedCreateInput = {
    id?: number
    ticketId: number
    calificacion?: number | null
    comentario?: string | null
    enviadoPor?: number | null
    fechaEnvio?: Date | string
    fechaRespuesta?: Date | string | null
  }

  export type EncuestaUpdateInput = {
    calificacion?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticket?: TicketUpdateOneRequiredWithoutEncuestaNestedInput
    usuario?: UsuarioUpdateOneWithoutEncuestasNestedInput
  }

  export type EncuestaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    calificacion?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    enviadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EncuestaCreateManyInput = {
    id?: number
    ticketId: number
    calificacion?: number | null
    comentario?: string | null
    enviadoPor?: number | null
    fechaEnvio?: Date | string
    fechaRespuesta?: Date | string | null
  }

  export type EncuestaUpdateManyMutationInput = {
    calificacion?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EncuestaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    calificacion?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    enviadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificacionCreateInput = {
    tipo: string
    titulo: string
    mensaje: string
    leido?: boolean
    correoEnviado?: boolean
    fechaEnvioCorreo?: Date | string | null
    createdAt?: Date | string
    usuario: UsuarioCreateNestedOneWithoutNotificacionesInput
    ticket?: TicketCreateNestedOneWithoutNotificacionesInput
  }

  export type NotificacionUncheckedCreateInput = {
    id?: number
    usuarioId: number
    ticketId?: number | null
    tipo: string
    titulo: string
    mensaje: string
    leido?: boolean
    correoEnviado?: boolean
    fechaEnvioCorreo?: Date | string | null
    createdAt?: Date | string
  }

  export type NotificacionUpdateInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: StringFieldUpdateOperationsInput | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    correoEnviado?: BoolFieldUpdateOperationsInput | boolean
    fechaEnvioCorreo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutNotificacionesNestedInput
    ticket?: TicketUpdateOneWithoutNotificacionesNestedInput
  }

  export type NotificacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    ticketId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: StringFieldUpdateOperationsInput | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    correoEnviado?: BoolFieldUpdateOperationsInput | boolean
    fechaEnvioCorreo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionCreateManyInput = {
    id?: number
    usuarioId: number
    ticketId?: number | null
    tipo: string
    titulo: string
    mensaje: string
    leido?: boolean
    correoEnviado?: boolean
    fechaEnvioCorreo?: Date | string | null
    createdAt?: Date | string
  }

  export type NotificacionUpdateManyMutationInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: StringFieldUpdateOperationsInput | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    correoEnviado?: BoolFieldUpdateOperationsInput | boolean
    fechaEnvioCorreo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    ticketId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: StringFieldUpdateOperationsInput | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    correoEnviado?: BoolFieldUpdateOperationsInput | boolean
    fechaEnvioCorreo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioEnCopiaCreateInput = {
    agregadoPor: number
    createdAt?: Date | string
    ticket: TicketCreateNestedOneWithoutUsuariosEnCopiaInput
    usuario: UsuarioCreateNestedOneWithoutUsuariosEnCopiaInput
  }

  export type UsuarioEnCopiaUncheckedCreateInput = {
    ticketId: number
    usuarioId: number
    agregadoPor: number
    createdAt?: Date | string
  }

  export type UsuarioEnCopiaUpdateInput = {
    agregadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket?: TicketUpdateOneRequiredWithoutUsuariosEnCopiaNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutUsuariosEnCopiaNestedInput
  }

  export type UsuarioEnCopiaUncheckedUpdateInput = {
    ticketId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    agregadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioEnCopiaCreateManyInput = {
    ticketId: number
    usuarioId: number
    agregadoPor: number
    createdAt?: Date | string
  }

  export type UsuarioEnCopiaUpdateManyMutationInput = {
    agregadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioEnCopiaUncheckedUpdateManyInput = {
    ticketId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    agregadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracionSistemaCreateInput = {
    claveConfiguracion: string
    valorConfiguracion: string
    tipoDato: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    usuario: UsuarioCreateNestedOneWithoutConfiguracionesInput
  }

  export type ConfiguracionSistemaUncheckedCreateInput = {
    id?: number
    claveConfiguracion: string
    valorConfiguracion: string
    tipoDato: string
    actualizadoPor: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type ConfiguracionSistemaUpdateInput = {
    claveConfiguracion?: StringFieldUpdateOperationsInput | string
    valorConfiguracion?: StringFieldUpdateOperationsInput | string
    tipoDato?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario?: UsuarioUpdateOneRequiredWithoutConfiguracionesNestedInput
  }

  export type ConfiguracionSistemaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    claveConfiguracion?: StringFieldUpdateOperationsInput | string
    valorConfiguracion?: StringFieldUpdateOperationsInput | string
    tipoDato?: StringFieldUpdateOperationsInput | string
    actualizadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ConfiguracionSistemaCreateManyInput = {
    id?: number
    claveConfiguracion: string
    valorConfiguracion: string
    tipoDato: string
    actualizadoPor: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type ConfiguracionSistemaUpdateManyMutationInput = {
    claveConfiguracion?: StringFieldUpdateOperationsInput | string
    valorConfiguracion?: StringFieldUpdateOperationsInput | string
    tipoDato?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ConfiguracionSistemaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    claveConfiguracion?: StringFieldUpdateOperationsInput | string
    valorConfiguracion?: StringFieldUpdateOperationsInput | string
    tipoDato?: StringFieldUpdateOperationsInput | string
    actualizadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PasswordResetTokenCreateInput = {
    id?: string
    email: string
    token: string
    expiresAt: Date | string
    used?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PasswordResetTokenUncheckedCreateInput = {
    id?: string
    email: string
    token: string
    expiresAt: Date | string
    used?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PasswordResetTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    used?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordResetTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    used?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordResetTokenCreateManyInput = {
    id?: string
    email: string
    token: string
    expiresAt: Date | string
    used?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PasswordResetTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    used?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordResetTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    used?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UsuarioListRelationFilter = {
    every?: UsuarioWhereInput
    some?: UsuarioWhereInput
    none?: UsuarioWhereInput
  }

  export type TicketListRelationFilter = {
    every?: TicketWhereInput
    some?: TicketWhereInput
    none?: TicketWhereInput
  }

  export type DerivacionTicketListRelationFilter = {
    every?: DerivacionTicketWhereInput
    some?: DerivacionTicketWhereInput
    none?: DerivacionTicketWhereInput
  }

  export type SlaPrioridadListRelationFilter = {
    every?: SlaPrioridadWhereInput
    some?: SlaPrioridadWhereInput
    none?: SlaPrioridadWhereInput
  }

  export type UsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TicketOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DerivacionTicketOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SlaPrioridadOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DepartamentoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    createdAt?: SortOrder
  }

  export type DepartamentoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DepartamentoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    createdAt?: SortOrder
  }

  export type DepartamentoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    createdAt?: SortOrder
  }

  export type DepartamentoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type RolCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    permisos?: SortOrder
    createdAt?: SortOrder
  }

  export type RolAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RolMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    createdAt?: SortOrder
  }

  export type RolMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    createdAt?: SortOrder
  }

  export type RolSumOrderByAggregateInput = {
    id?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type RolScalarRelationFilter = {
    is?: RolWhereInput
    isNot?: RolWhereInput
  }

  export type DepartamentoScalarRelationFilter = {
    is?: DepartamentoWhereInput
    isNot?: DepartamentoWhereInput
  }

  export type ComentarioTicketListRelationFilter = {
    every?: ComentarioTicketWhereInput
    some?: ComentarioTicketWhereInput
    none?: ComentarioTicketWhereInput
  }

  export type HistorialTicketListRelationFilter = {
    every?: HistorialTicketWhereInput
    some?: HistorialTicketWhereInput
    none?: HistorialTicketWhereInput
  }

  export type ArchivoAdjuntoListRelationFilter = {
    every?: ArchivoAdjuntoWhereInput
    some?: ArchivoAdjuntoWhereInput
    none?: ArchivoAdjuntoWhereInput
  }

  export type EncuestaListRelationFilter = {
    every?: EncuestaWhereInput
    some?: EncuestaWhereInput
    none?: EncuestaWhereInput
  }

  export type NotificacionListRelationFilter = {
    every?: NotificacionWhereInput
    some?: NotificacionWhereInput
    none?: NotificacionWhereInput
  }

  export type UsuarioEnCopiaListRelationFilter = {
    every?: UsuarioEnCopiaWhereInput
    some?: UsuarioEnCopiaWhereInput
    none?: UsuarioEnCopiaWhereInput
  }

  export type ConfiguracionSistemaListRelationFilter = {
    every?: ConfiguracionSistemaWhereInput
    some?: ConfiguracionSistemaWhereInput
    none?: ConfiguracionSistemaWhereInput
  }

  export type ComentarioTicketOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HistorialTicketOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ArchivoAdjuntoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EncuestaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioEnCopiaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ConfiguracionSistemaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    primerNombre?: SortOrder
    segundoNombre?: SortOrder
    primerApellido?: SortOrder
    segundoApellido?: SortOrder
    correo?: SortOrder
    hashContrasena?: SortOrder
    rolId?: SortOrder
    departamentoId?: SortOrder
    esInterno?: SortOrder
    ultimoAcceso?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
    rolId?: SortOrder
    departamentoId?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    primerNombre?: SortOrder
    segundoNombre?: SortOrder
    primerApellido?: SortOrder
    segundoApellido?: SortOrder
    correo?: SortOrder
    hashContrasena?: SortOrder
    rolId?: SortOrder
    departamentoId?: SortOrder
    esInterno?: SortOrder
    ultimoAcceso?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    primerNombre?: SortOrder
    segundoNombre?: SortOrder
    primerApellido?: SortOrder
    segundoApellido?: SortOrder
    correo?: SortOrder
    hashContrasena?: SortOrder
    rolId?: SortOrder
    departamentoId?: SortOrder
    esInterno?: SortOrder
    ultimoAcceso?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id?: SortOrder
    rolId?: SortOrder
    departamentoId?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EstadoTicketCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    esEstadoFinal?: SortOrder
    ordenSecuencia?: SortOrder
    createdAt?: SortOrder
  }

  export type EstadoTicketAvgOrderByAggregateInput = {
    id?: SortOrder
    ordenSecuencia?: SortOrder
  }

  export type EstadoTicketMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    esEstadoFinal?: SortOrder
    ordenSecuencia?: SortOrder
    createdAt?: SortOrder
  }

  export type EstadoTicketMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    esEstadoFinal?: SortOrder
    ordenSecuencia?: SortOrder
    createdAt?: SortOrder
  }

  export type EstadoTicketSumOrderByAggregateInput = {
    id?: SortOrder
    ordenSecuencia?: SortOrder
  }

  export type PrioridadCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    nivel?: SortOrder
    createdAt?: SortOrder
  }

  export type PrioridadAvgOrderByAggregateInput = {
    id?: SortOrder
    nivel?: SortOrder
  }

  export type PrioridadMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    nivel?: SortOrder
    createdAt?: SortOrder
  }

  export type PrioridadMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    nivel?: SortOrder
    createdAt?: SortOrder
  }

  export type PrioridadSumOrderByAggregateInput = {
    id?: SortOrder
    nivel?: SortOrder
  }

  export type PrioridadScalarRelationFilter = {
    is?: PrioridadWhereInput
    isNot?: PrioridadWhereInput
  }

  export type SlaPrioridadPrioridadIdDepartamentoIdCompoundUniqueInput = {
    prioridadId: number
    departamentoId: number
  }

  export type SlaPrioridadCountOrderByAggregateInput = {
    prioridadId?: SortOrder
    departamentoId?: SortOrder
    tiempoRespuestaHoras?: SortOrder
    tiempoResolucionHoras?: SortOrder
    createdAt?: SortOrder
  }

  export type SlaPrioridadAvgOrderByAggregateInput = {
    prioridadId?: SortOrder
    departamentoId?: SortOrder
    tiempoRespuestaHoras?: SortOrder
    tiempoResolucionHoras?: SortOrder
  }

  export type SlaPrioridadMaxOrderByAggregateInput = {
    prioridadId?: SortOrder
    departamentoId?: SortOrder
    tiempoRespuestaHoras?: SortOrder
    tiempoResolucionHoras?: SortOrder
    createdAt?: SortOrder
  }

  export type SlaPrioridadMinOrderByAggregateInput = {
    prioridadId?: SortOrder
    departamentoId?: SortOrder
    tiempoRespuestaHoras?: SortOrder
    tiempoResolucionHoras?: SortOrder
    createdAt?: SortOrder
  }

  export type SlaPrioridadSumOrderByAggregateInput = {
    prioridadId?: SortOrder
    departamentoId?: SortOrder
    tiempoRespuestaHoras?: SortOrder
    tiempoResolucionHoras?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UsuarioScalarRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type UsuarioNullableScalarRelationFilter = {
    is?: UsuarioWhereInput | null
    isNot?: UsuarioWhereInput | null
  }

  export type EstadoTicketScalarRelationFilter = {
    is?: EstadoTicketWhereInput
    isNot?: EstadoTicketWhereInput
  }

  export type EncuestaNullableScalarRelationFilter = {
    is?: EncuestaWhereInput | null
    isNot?: EncuestaWhereInput | null
  }

  export type TicketCountOrderByAggregateInput = {
    id?: SortOrder
    numeroTicket?: SortOrder
    asunto?: SortOrder
    descripcion?: SortOrder
    solicitanteId?: SortOrder
    asignadoA?: SortOrder
    departamentoId?: SortOrder
    prioridadId?: SortOrder
    estadoId?: SortOrder
    fechaVencimiento?: SortOrder
    fechaResolucion?: SortOrder
    fechaCierre?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TicketAvgOrderByAggregateInput = {
    id?: SortOrder
    solicitanteId?: SortOrder
    asignadoA?: SortOrder
    departamentoId?: SortOrder
    prioridadId?: SortOrder
    estadoId?: SortOrder
  }

  export type TicketMaxOrderByAggregateInput = {
    id?: SortOrder
    numeroTicket?: SortOrder
    asunto?: SortOrder
    descripcion?: SortOrder
    solicitanteId?: SortOrder
    asignadoA?: SortOrder
    departamentoId?: SortOrder
    prioridadId?: SortOrder
    estadoId?: SortOrder
    fechaVencimiento?: SortOrder
    fechaResolucion?: SortOrder
    fechaCierre?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TicketMinOrderByAggregateInput = {
    id?: SortOrder
    numeroTicket?: SortOrder
    asunto?: SortOrder
    descripcion?: SortOrder
    solicitanteId?: SortOrder
    asignadoA?: SortOrder
    departamentoId?: SortOrder
    prioridadId?: SortOrder
    estadoId?: SortOrder
    fechaVencimiento?: SortOrder
    fechaResolucion?: SortOrder
    fechaCierre?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TicketSumOrderByAggregateInput = {
    id?: SortOrder
    solicitanteId?: SortOrder
    asignadoA?: SortOrder
    departamentoId?: SortOrder
    prioridadId?: SortOrder
    estadoId?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type TicketScalarRelationFilter = {
    is?: TicketWhereInput
    isNot?: TicketWhereInput
  }

  export type HistorialTicketCountOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
    tipoAccion?: SortOrder
    campoModificado?: SortOrder
    valorAnterior?: SortOrder
    valorNuevo?: SortOrder
    comentario?: SortOrder
    createdAt?: SortOrder
  }

  export type HistorialTicketAvgOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
  }

  export type HistorialTicketMaxOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
    tipoAccion?: SortOrder
    campoModificado?: SortOrder
    valorAnterior?: SortOrder
    valorNuevo?: SortOrder
    comentario?: SortOrder
    createdAt?: SortOrder
  }

  export type HistorialTicketMinOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
    tipoAccion?: SortOrder
    campoModificado?: SortOrder
    valorAnterior?: SortOrder
    valorNuevo?: SortOrder
    comentario?: SortOrder
    createdAt?: SortOrder
  }

  export type HistorialTicketSumOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
  }

  export type ComentarioTicketCountOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
    comentario?: SortOrder
    esInterno?: SortOrder
    esSolucion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ComentarioTicketAvgOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
  }

  export type ComentarioTicketMaxOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
    comentario?: SortOrder
    esInterno?: SortOrder
    esSolucion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ComentarioTicketMinOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
    comentario?: SortOrder
    esInterno?: SortOrder
    esSolucion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ComentarioTicketSumOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    usuarioId?: SortOrder
  }

  export type ComentarioTicketNullableScalarRelationFilter = {
    is?: ComentarioTicketWhereInput | null
    isNot?: ComentarioTicketWhereInput | null
  }

  export type ArchivoAdjuntoCountOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    comentarioId?: SortOrder
    nombreOriginal?: SortOrder
    nombreAlmacenado?: SortOrder
    rutaArchivo?: SortOrder
    tamanoArchivo?: SortOrder
    tipoMime?: SortOrder
    subidoPor?: SortOrder
    createdAt?: SortOrder
  }

  export type ArchivoAdjuntoAvgOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    comentarioId?: SortOrder
    tamanoArchivo?: SortOrder
    subidoPor?: SortOrder
  }

  export type ArchivoAdjuntoMaxOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    comentarioId?: SortOrder
    nombreOriginal?: SortOrder
    nombreAlmacenado?: SortOrder
    rutaArchivo?: SortOrder
    tamanoArchivo?: SortOrder
    tipoMime?: SortOrder
    subidoPor?: SortOrder
    createdAt?: SortOrder
  }

  export type ArchivoAdjuntoMinOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    comentarioId?: SortOrder
    nombreOriginal?: SortOrder
    nombreAlmacenado?: SortOrder
    rutaArchivo?: SortOrder
    tamanoArchivo?: SortOrder
    tipoMime?: SortOrder
    subidoPor?: SortOrder
    createdAt?: SortOrder
  }

  export type ArchivoAdjuntoSumOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    comentarioId?: SortOrder
    tamanoArchivo?: SortOrder
    subidoPor?: SortOrder
  }

  export type DerivacionTicketCountOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    departamentoOrigenId?: SortOrder
    departamentoDestinoId?: SortOrder
    motivo?: SortOrder
    derivadoPor?: SortOrder
    createdAt?: SortOrder
  }

  export type DerivacionTicketAvgOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    departamentoOrigenId?: SortOrder
    departamentoDestinoId?: SortOrder
    derivadoPor?: SortOrder
  }

  export type DerivacionTicketMaxOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    departamentoOrigenId?: SortOrder
    departamentoDestinoId?: SortOrder
    motivo?: SortOrder
    derivadoPor?: SortOrder
    createdAt?: SortOrder
  }

  export type DerivacionTicketMinOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    departamentoOrigenId?: SortOrder
    departamentoDestinoId?: SortOrder
    motivo?: SortOrder
    derivadoPor?: SortOrder
    createdAt?: SortOrder
  }

  export type DerivacionTicketSumOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    departamentoOrigenId?: SortOrder
    departamentoDestinoId?: SortOrder
    derivadoPor?: SortOrder
  }

  export type EncuestaCountOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    calificacion?: SortOrder
    comentario?: SortOrder
    enviadoPor?: SortOrder
    fechaEnvio?: SortOrder
    fechaRespuesta?: SortOrder
  }

  export type EncuestaAvgOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    calificacion?: SortOrder
    enviadoPor?: SortOrder
  }

  export type EncuestaMaxOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    calificacion?: SortOrder
    comentario?: SortOrder
    enviadoPor?: SortOrder
    fechaEnvio?: SortOrder
    fechaRespuesta?: SortOrder
  }

  export type EncuestaMinOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    calificacion?: SortOrder
    comentario?: SortOrder
    enviadoPor?: SortOrder
    fechaEnvio?: SortOrder
    fechaRespuesta?: SortOrder
  }

  export type EncuestaSumOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    calificacion?: SortOrder
    enviadoPor?: SortOrder
  }

  export type TicketNullableScalarRelationFilter = {
    is?: TicketWhereInput | null
    isNot?: TicketWhereInput | null
  }

  export type NotificacionCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    ticketId?: SortOrder
    tipo?: SortOrder
    titulo?: SortOrder
    mensaje?: SortOrder
    leido?: SortOrder
    correoEnviado?: SortOrder
    fechaEnvioCorreo?: SortOrder
    createdAt?: SortOrder
  }

  export type NotificacionAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    ticketId?: SortOrder
  }

  export type NotificacionMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    ticketId?: SortOrder
    tipo?: SortOrder
    titulo?: SortOrder
    mensaje?: SortOrder
    leido?: SortOrder
    correoEnviado?: SortOrder
    fechaEnvioCorreo?: SortOrder
    createdAt?: SortOrder
  }

  export type NotificacionMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    ticketId?: SortOrder
    tipo?: SortOrder
    titulo?: SortOrder
    mensaje?: SortOrder
    leido?: SortOrder
    correoEnviado?: SortOrder
    fechaEnvioCorreo?: SortOrder
    createdAt?: SortOrder
  }

  export type NotificacionSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    ticketId?: SortOrder
  }

  export type UsuarioEnCopiaTicketIdUsuarioIdCompoundUniqueInput = {
    ticketId: number
    usuarioId: number
  }

  export type UsuarioEnCopiaCountOrderByAggregateInput = {
    ticketId?: SortOrder
    usuarioId?: SortOrder
    agregadoPor?: SortOrder
    createdAt?: SortOrder
  }

  export type UsuarioEnCopiaAvgOrderByAggregateInput = {
    ticketId?: SortOrder
    usuarioId?: SortOrder
    agregadoPor?: SortOrder
  }

  export type UsuarioEnCopiaMaxOrderByAggregateInput = {
    ticketId?: SortOrder
    usuarioId?: SortOrder
    agregadoPor?: SortOrder
    createdAt?: SortOrder
  }

  export type UsuarioEnCopiaMinOrderByAggregateInput = {
    ticketId?: SortOrder
    usuarioId?: SortOrder
    agregadoPor?: SortOrder
    createdAt?: SortOrder
  }

  export type UsuarioEnCopiaSumOrderByAggregateInput = {
    ticketId?: SortOrder
    usuarioId?: SortOrder
    agregadoPor?: SortOrder
  }

  export type ConfiguracionSistemaCountOrderByAggregateInput = {
    id?: SortOrder
    claveConfiguracion?: SortOrder
    valorConfiguracion?: SortOrder
    tipoDato?: SortOrder
    actualizadoPor?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfiguracionSistemaAvgOrderByAggregateInput = {
    id?: SortOrder
    actualizadoPor?: SortOrder
  }

  export type ConfiguracionSistemaMaxOrderByAggregateInput = {
    id?: SortOrder
    claveConfiguracion?: SortOrder
    valorConfiguracion?: SortOrder
    tipoDato?: SortOrder
    actualizadoPor?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfiguracionSistemaMinOrderByAggregateInput = {
    id?: SortOrder
    claveConfiguracion?: SortOrder
    valorConfiguracion?: SortOrder
    tipoDato?: SortOrder
    actualizadoPor?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfiguracionSistemaSumOrderByAggregateInput = {
    id?: SortOrder
    actualizadoPor?: SortOrder
  }

  export type PasswordResetTokenCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    used?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PasswordResetTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    used?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PasswordResetTokenMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    used?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsuarioCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<UsuarioCreateWithoutDepartamentoInput, UsuarioUncheckedCreateWithoutDepartamentoInput> | UsuarioCreateWithoutDepartamentoInput[] | UsuarioUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutDepartamentoInput | UsuarioCreateOrConnectWithoutDepartamentoInput[]
    createMany?: UsuarioCreateManyDepartamentoInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type TicketCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<TicketCreateWithoutDepartamentoInput, TicketUncheckedCreateWithoutDepartamentoInput> | TicketCreateWithoutDepartamentoInput[] | TicketUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutDepartamentoInput | TicketCreateOrConnectWithoutDepartamentoInput[]
    createMany?: TicketCreateManyDepartamentoInputEnvelope
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
  }

  export type DerivacionTicketCreateNestedManyWithoutDepartamentoOrigenInput = {
    create?: XOR<DerivacionTicketCreateWithoutDepartamentoOrigenInput, DerivacionTicketUncheckedCreateWithoutDepartamentoOrigenInput> | DerivacionTicketCreateWithoutDepartamentoOrigenInput[] | DerivacionTicketUncheckedCreateWithoutDepartamentoOrigenInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutDepartamentoOrigenInput | DerivacionTicketCreateOrConnectWithoutDepartamentoOrigenInput[]
    createMany?: DerivacionTicketCreateManyDepartamentoOrigenInputEnvelope
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
  }

  export type DerivacionTicketCreateNestedManyWithoutDepartamentoDestinoInput = {
    create?: XOR<DerivacionTicketCreateWithoutDepartamentoDestinoInput, DerivacionTicketUncheckedCreateWithoutDepartamentoDestinoInput> | DerivacionTicketCreateWithoutDepartamentoDestinoInput[] | DerivacionTicketUncheckedCreateWithoutDepartamentoDestinoInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutDepartamentoDestinoInput | DerivacionTicketCreateOrConnectWithoutDepartamentoDestinoInput[]
    createMany?: DerivacionTicketCreateManyDepartamentoDestinoInputEnvelope
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
  }

  export type SlaPrioridadCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<SlaPrioridadCreateWithoutDepartamentoInput, SlaPrioridadUncheckedCreateWithoutDepartamentoInput> | SlaPrioridadCreateWithoutDepartamentoInput[] | SlaPrioridadUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: SlaPrioridadCreateOrConnectWithoutDepartamentoInput | SlaPrioridadCreateOrConnectWithoutDepartamentoInput[]
    createMany?: SlaPrioridadCreateManyDepartamentoInputEnvelope
    connect?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<UsuarioCreateWithoutDepartamentoInput, UsuarioUncheckedCreateWithoutDepartamentoInput> | UsuarioCreateWithoutDepartamentoInput[] | UsuarioUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutDepartamentoInput | UsuarioCreateOrConnectWithoutDepartamentoInput[]
    createMany?: UsuarioCreateManyDepartamentoInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type TicketUncheckedCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<TicketCreateWithoutDepartamentoInput, TicketUncheckedCreateWithoutDepartamentoInput> | TicketCreateWithoutDepartamentoInput[] | TicketUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutDepartamentoInput | TicketCreateOrConnectWithoutDepartamentoInput[]
    createMany?: TicketCreateManyDepartamentoInputEnvelope
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
  }

  export type DerivacionTicketUncheckedCreateNestedManyWithoutDepartamentoOrigenInput = {
    create?: XOR<DerivacionTicketCreateWithoutDepartamentoOrigenInput, DerivacionTicketUncheckedCreateWithoutDepartamentoOrigenInput> | DerivacionTicketCreateWithoutDepartamentoOrigenInput[] | DerivacionTicketUncheckedCreateWithoutDepartamentoOrigenInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutDepartamentoOrigenInput | DerivacionTicketCreateOrConnectWithoutDepartamentoOrigenInput[]
    createMany?: DerivacionTicketCreateManyDepartamentoOrigenInputEnvelope
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
  }

  export type DerivacionTicketUncheckedCreateNestedManyWithoutDepartamentoDestinoInput = {
    create?: XOR<DerivacionTicketCreateWithoutDepartamentoDestinoInput, DerivacionTicketUncheckedCreateWithoutDepartamentoDestinoInput> | DerivacionTicketCreateWithoutDepartamentoDestinoInput[] | DerivacionTicketUncheckedCreateWithoutDepartamentoDestinoInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutDepartamentoDestinoInput | DerivacionTicketCreateOrConnectWithoutDepartamentoDestinoInput[]
    createMany?: DerivacionTicketCreateManyDepartamentoDestinoInputEnvelope
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
  }

  export type SlaPrioridadUncheckedCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<SlaPrioridadCreateWithoutDepartamentoInput, SlaPrioridadUncheckedCreateWithoutDepartamentoInput> | SlaPrioridadCreateWithoutDepartamentoInput[] | SlaPrioridadUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: SlaPrioridadCreateOrConnectWithoutDepartamentoInput | SlaPrioridadCreateOrConnectWithoutDepartamentoInput[]
    createMany?: SlaPrioridadCreateManyDepartamentoInputEnvelope
    connect?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UsuarioUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<UsuarioCreateWithoutDepartamentoInput, UsuarioUncheckedCreateWithoutDepartamentoInput> | UsuarioCreateWithoutDepartamentoInput[] | UsuarioUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutDepartamentoInput | UsuarioCreateOrConnectWithoutDepartamentoInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutDepartamentoInput | UsuarioUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: UsuarioCreateManyDepartamentoInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutDepartamentoInput | UsuarioUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutDepartamentoInput | UsuarioUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type TicketUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<TicketCreateWithoutDepartamentoInput, TicketUncheckedCreateWithoutDepartamentoInput> | TicketCreateWithoutDepartamentoInput[] | TicketUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutDepartamentoInput | TicketCreateOrConnectWithoutDepartamentoInput[]
    upsert?: TicketUpsertWithWhereUniqueWithoutDepartamentoInput | TicketUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: TicketCreateManyDepartamentoInputEnvelope
    set?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    disconnect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    delete?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    update?: TicketUpdateWithWhereUniqueWithoutDepartamentoInput | TicketUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: TicketUpdateManyWithWhereWithoutDepartamentoInput | TicketUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: TicketScalarWhereInput | TicketScalarWhereInput[]
  }

  export type DerivacionTicketUpdateManyWithoutDepartamentoOrigenNestedInput = {
    create?: XOR<DerivacionTicketCreateWithoutDepartamentoOrigenInput, DerivacionTicketUncheckedCreateWithoutDepartamentoOrigenInput> | DerivacionTicketCreateWithoutDepartamentoOrigenInput[] | DerivacionTicketUncheckedCreateWithoutDepartamentoOrigenInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutDepartamentoOrigenInput | DerivacionTicketCreateOrConnectWithoutDepartamentoOrigenInput[]
    upsert?: DerivacionTicketUpsertWithWhereUniqueWithoutDepartamentoOrigenInput | DerivacionTicketUpsertWithWhereUniqueWithoutDepartamentoOrigenInput[]
    createMany?: DerivacionTicketCreateManyDepartamentoOrigenInputEnvelope
    set?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    disconnect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    delete?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    update?: DerivacionTicketUpdateWithWhereUniqueWithoutDepartamentoOrigenInput | DerivacionTicketUpdateWithWhereUniqueWithoutDepartamentoOrigenInput[]
    updateMany?: DerivacionTicketUpdateManyWithWhereWithoutDepartamentoOrigenInput | DerivacionTicketUpdateManyWithWhereWithoutDepartamentoOrigenInput[]
    deleteMany?: DerivacionTicketScalarWhereInput | DerivacionTicketScalarWhereInput[]
  }

  export type DerivacionTicketUpdateManyWithoutDepartamentoDestinoNestedInput = {
    create?: XOR<DerivacionTicketCreateWithoutDepartamentoDestinoInput, DerivacionTicketUncheckedCreateWithoutDepartamentoDestinoInput> | DerivacionTicketCreateWithoutDepartamentoDestinoInput[] | DerivacionTicketUncheckedCreateWithoutDepartamentoDestinoInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutDepartamentoDestinoInput | DerivacionTicketCreateOrConnectWithoutDepartamentoDestinoInput[]
    upsert?: DerivacionTicketUpsertWithWhereUniqueWithoutDepartamentoDestinoInput | DerivacionTicketUpsertWithWhereUniqueWithoutDepartamentoDestinoInput[]
    createMany?: DerivacionTicketCreateManyDepartamentoDestinoInputEnvelope
    set?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    disconnect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    delete?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    update?: DerivacionTicketUpdateWithWhereUniqueWithoutDepartamentoDestinoInput | DerivacionTicketUpdateWithWhereUniqueWithoutDepartamentoDestinoInput[]
    updateMany?: DerivacionTicketUpdateManyWithWhereWithoutDepartamentoDestinoInput | DerivacionTicketUpdateManyWithWhereWithoutDepartamentoDestinoInput[]
    deleteMany?: DerivacionTicketScalarWhereInput | DerivacionTicketScalarWhereInput[]
  }

  export type SlaPrioridadUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<SlaPrioridadCreateWithoutDepartamentoInput, SlaPrioridadUncheckedCreateWithoutDepartamentoInput> | SlaPrioridadCreateWithoutDepartamentoInput[] | SlaPrioridadUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: SlaPrioridadCreateOrConnectWithoutDepartamentoInput | SlaPrioridadCreateOrConnectWithoutDepartamentoInput[]
    upsert?: SlaPrioridadUpsertWithWhereUniqueWithoutDepartamentoInput | SlaPrioridadUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: SlaPrioridadCreateManyDepartamentoInputEnvelope
    set?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    disconnect?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    delete?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    connect?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    update?: SlaPrioridadUpdateWithWhereUniqueWithoutDepartamentoInput | SlaPrioridadUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: SlaPrioridadUpdateManyWithWhereWithoutDepartamentoInput | SlaPrioridadUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: SlaPrioridadScalarWhereInput | SlaPrioridadScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UsuarioUncheckedUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<UsuarioCreateWithoutDepartamentoInput, UsuarioUncheckedCreateWithoutDepartamentoInput> | UsuarioCreateWithoutDepartamentoInput[] | UsuarioUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutDepartamentoInput | UsuarioCreateOrConnectWithoutDepartamentoInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutDepartamentoInput | UsuarioUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: UsuarioCreateManyDepartamentoInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutDepartamentoInput | UsuarioUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutDepartamentoInput | UsuarioUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type TicketUncheckedUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<TicketCreateWithoutDepartamentoInput, TicketUncheckedCreateWithoutDepartamentoInput> | TicketCreateWithoutDepartamentoInput[] | TicketUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutDepartamentoInput | TicketCreateOrConnectWithoutDepartamentoInput[]
    upsert?: TicketUpsertWithWhereUniqueWithoutDepartamentoInput | TicketUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: TicketCreateManyDepartamentoInputEnvelope
    set?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    disconnect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    delete?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    update?: TicketUpdateWithWhereUniqueWithoutDepartamentoInput | TicketUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: TicketUpdateManyWithWhereWithoutDepartamentoInput | TicketUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: TicketScalarWhereInput | TicketScalarWhereInput[]
  }

  export type DerivacionTicketUncheckedUpdateManyWithoutDepartamentoOrigenNestedInput = {
    create?: XOR<DerivacionTicketCreateWithoutDepartamentoOrigenInput, DerivacionTicketUncheckedCreateWithoutDepartamentoOrigenInput> | DerivacionTicketCreateWithoutDepartamentoOrigenInput[] | DerivacionTicketUncheckedCreateWithoutDepartamentoOrigenInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutDepartamentoOrigenInput | DerivacionTicketCreateOrConnectWithoutDepartamentoOrigenInput[]
    upsert?: DerivacionTicketUpsertWithWhereUniqueWithoutDepartamentoOrigenInput | DerivacionTicketUpsertWithWhereUniqueWithoutDepartamentoOrigenInput[]
    createMany?: DerivacionTicketCreateManyDepartamentoOrigenInputEnvelope
    set?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    disconnect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    delete?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    update?: DerivacionTicketUpdateWithWhereUniqueWithoutDepartamentoOrigenInput | DerivacionTicketUpdateWithWhereUniqueWithoutDepartamentoOrigenInput[]
    updateMany?: DerivacionTicketUpdateManyWithWhereWithoutDepartamentoOrigenInput | DerivacionTicketUpdateManyWithWhereWithoutDepartamentoOrigenInput[]
    deleteMany?: DerivacionTicketScalarWhereInput | DerivacionTicketScalarWhereInput[]
  }

  export type DerivacionTicketUncheckedUpdateManyWithoutDepartamentoDestinoNestedInput = {
    create?: XOR<DerivacionTicketCreateWithoutDepartamentoDestinoInput, DerivacionTicketUncheckedCreateWithoutDepartamentoDestinoInput> | DerivacionTicketCreateWithoutDepartamentoDestinoInput[] | DerivacionTicketUncheckedCreateWithoutDepartamentoDestinoInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutDepartamentoDestinoInput | DerivacionTicketCreateOrConnectWithoutDepartamentoDestinoInput[]
    upsert?: DerivacionTicketUpsertWithWhereUniqueWithoutDepartamentoDestinoInput | DerivacionTicketUpsertWithWhereUniqueWithoutDepartamentoDestinoInput[]
    createMany?: DerivacionTicketCreateManyDepartamentoDestinoInputEnvelope
    set?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    disconnect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    delete?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    update?: DerivacionTicketUpdateWithWhereUniqueWithoutDepartamentoDestinoInput | DerivacionTicketUpdateWithWhereUniqueWithoutDepartamentoDestinoInput[]
    updateMany?: DerivacionTicketUpdateManyWithWhereWithoutDepartamentoDestinoInput | DerivacionTicketUpdateManyWithWhereWithoutDepartamentoDestinoInput[]
    deleteMany?: DerivacionTicketScalarWhereInput | DerivacionTicketScalarWhereInput[]
  }

  export type SlaPrioridadUncheckedUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<SlaPrioridadCreateWithoutDepartamentoInput, SlaPrioridadUncheckedCreateWithoutDepartamentoInput> | SlaPrioridadCreateWithoutDepartamentoInput[] | SlaPrioridadUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: SlaPrioridadCreateOrConnectWithoutDepartamentoInput | SlaPrioridadCreateOrConnectWithoutDepartamentoInput[]
    upsert?: SlaPrioridadUpsertWithWhereUniqueWithoutDepartamentoInput | SlaPrioridadUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: SlaPrioridadCreateManyDepartamentoInputEnvelope
    set?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    disconnect?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    delete?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    connect?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    update?: SlaPrioridadUpdateWithWhereUniqueWithoutDepartamentoInput | SlaPrioridadUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: SlaPrioridadUpdateManyWithWhereWithoutDepartamentoInput | SlaPrioridadUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: SlaPrioridadScalarWhereInput | SlaPrioridadScalarWhereInput[]
  }

  export type UsuarioCreateNestedManyWithoutRolInput = {
    create?: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput> | UsuarioCreateWithoutRolInput[] | UsuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolInput | UsuarioCreateOrConnectWithoutRolInput[]
    createMany?: UsuarioCreateManyRolInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutRolInput = {
    create?: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput> | UsuarioCreateWithoutRolInput[] | UsuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolInput | UsuarioCreateOrConnectWithoutRolInput[]
    createMany?: UsuarioCreateManyRolInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type UsuarioUpdateManyWithoutRolNestedInput = {
    create?: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput> | UsuarioCreateWithoutRolInput[] | UsuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolInput | UsuarioCreateOrConnectWithoutRolInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutRolInput | UsuarioUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: UsuarioCreateManyRolInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutRolInput | UsuarioUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutRolInput | UsuarioUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutRolNestedInput = {
    create?: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput> | UsuarioCreateWithoutRolInput[] | UsuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolInput | UsuarioCreateOrConnectWithoutRolInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutRolInput | UsuarioUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: UsuarioCreateManyRolInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutRolInput | UsuarioUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutRolInput | UsuarioUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type RolCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<RolCreateWithoutUsuariosInput, RolUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: RolCreateOrConnectWithoutUsuariosInput
    connect?: RolWhereUniqueInput
  }

  export type DepartamentoCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<DepartamentoCreateWithoutUsuariosInput, DepartamentoUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutUsuariosInput
    connect?: DepartamentoWhereUniqueInput
  }

  export type TicketCreateNestedManyWithoutSolicitanteInput = {
    create?: XOR<TicketCreateWithoutSolicitanteInput, TicketUncheckedCreateWithoutSolicitanteInput> | TicketCreateWithoutSolicitanteInput[] | TicketUncheckedCreateWithoutSolicitanteInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutSolicitanteInput | TicketCreateOrConnectWithoutSolicitanteInput[]
    createMany?: TicketCreateManySolicitanteInputEnvelope
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
  }

  export type TicketCreateNestedManyWithoutAsignadoInput = {
    create?: XOR<TicketCreateWithoutAsignadoInput, TicketUncheckedCreateWithoutAsignadoInput> | TicketCreateWithoutAsignadoInput[] | TicketUncheckedCreateWithoutAsignadoInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutAsignadoInput | TicketCreateOrConnectWithoutAsignadoInput[]
    createMany?: TicketCreateManyAsignadoInputEnvelope
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
  }

  export type ComentarioTicketCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ComentarioTicketCreateWithoutUsuarioInput, ComentarioTicketUncheckedCreateWithoutUsuarioInput> | ComentarioTicketCreateWithoutUsuarioInput[] | ComentarioTicketUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ComentarioTicketCreateOrConnectWithoutUsuarioInput | ComentarioTicketCreateOrConnectWithoutUsuarioInput[]
    createMany?: ComentarioTicketCreateManyUsuarioInputEnvelope
    connect?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
  }

  export type HistorialTicketCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<HistorialTicketCreateWithoutUsuarioInput, HistorialTicketUncheckedCreateWithoutUsuarioInput> | HistorialTicketCreateWithoutUsuarioInput[] | HistorialTicketUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialTicketCreateOrConnectWithoutUsuarioInput | HistorialTicketCreateOrConnectWithoutUsuarioInput[]
    createMany?: HistorialTicketCreateManyUsuarioInputEnvelope
    connect?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
  }

  export type ArchivoAdjuntoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ArchivoAdjuntoCreateWithoutUsuarioInput, ArchivoAdjuntoUncheckedCreateWithoutUsuarioInput> | ArchivoAdjuntoCreateWithoutUsuarioInput[] | ArchivoAdjuntoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ArchivoAdjuntoCreateOrConnectWithoutUsuarioInput | ArchivoAdjuntoCreateOrConnectWithoutUsuarioInput[]
    createMany?: ArchivoAdjuntoCreateManyUsuarioInputEnvelope
    connect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
  }

  export type DerivacionTicketCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DerivacionTicketCreateWithoutUsuarioInput, DerivacionTicketUncheckedCreateWithoutUsuarioInput> | DerivacionTicketCreateWithoutUsuarioInput[] | DerivacionTicketUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutUsuarioInput | DerivacionTicketCreateOrConnectWithoutUsuarioInput[]
    createMany?: DerivacionTicketCreateManyUsuarioInputEnvelope
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
  }

  export type EncuestaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EncuestaCreateWithoutUsuarioInput, EncuestaUncheckedCreateWithoutUsuarioInput> | EncuestaCreateWithoutUsuarioInput[] | EncuestaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EncuestaCreateOrConnectWithoutUsuarioInput | EncuestaCreateOrConnectWithoutUsuarioInput[]
    createMany?: EncuestaCreateManyUsuarioInputEnvelope
    connect?: EncuestaWhereUniqueInput | EncuestaWhereUniqueInput[]
  }

  export type NotificacionCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<NotificacionCreateWithoutUsuarioInput, NotificacionUncheckedCreateWithoutUsuarioInput> | NotificacionCreateWithoutUsuarioInput[] | NotificacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutUsuarioInput | NotificacionCreateOrConnectWithoutUsuarioInput[]
    createMany?: NotificacionCreateManyUsuarioInputEnvelope
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
  }

  export type UsuarioEnCopiaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<UsuarioEnCopiaCreateWithoutUsuarioInput, UsuarioEnCopiaUncheckedCreateWithoutUsuarioInput> | UsuarioEnCopiaCreateWithoutUsuarioInput[] | UsuarioEnCopiaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioEnCopiaCreateOrConnectWithoutUsuarioInput | UsuarioEnCopiaCreateOrConnectWithoutUsuarioInput[]
    createMany?: UsuarioEnCopiaCreateManyUsuarioInputEnvelope
    connect?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
  }

  export type ConfiguracionSistemaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ConfiguracionSistemaCreateWithoutUsuarioInput, ConfiguracionSistemaUncheckedCreateWithoutUsuarioInput> | ConfiguracionSistemaCreateWithoutUsuarioInput[] | ConfiguracionSistemaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ConfiguracionSistemaCreateOrConnectWithoutUsuarioInput | ConfiguracionSistemaCreateOrConnectWithoutUsuarioInput[]
    createMany?: ConfiguracionSistemaCreateManyUsuarioInputEnvelope
    connect?: ConfiguracionSistemaWhereUniqueInput | ConfiguracionSistemaWhereUniqueInput[]
  }

  export type TicketUncheckedCreateNestedManyWithoutSolicitanteInput = {
    create?: XOR<TicketCreateWithoutSolicitanteInput, TicketUncheckedCreateWithoutSolicitanteInput> | TicketCreateWithoutSolicitanteInput[] | TicketUncheckedCreateWithoutSolicitanteInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutSolicitanteInput | TicketCreateOrConnectWithoutSolicitanteInput[]
    createMany?: TicketCreateManySolicitanteInputEnvelope
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
  }

  export type TicketUncheckedCreateNestedManyWithoutAsignadoInput = {
    create?: XOR<TicketCreateWithoutAsignadoInput, TicketUncheckedCreateWithoutAsignadoInput> | TicketCreateWithoutAsignadoInput[] | TicketUncheckedCreateWithoutAsignadoInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutAsignadoInput | TicketCreateOrConnectWithoutAsignadoInput[]
    createMany?: TicketCreateManyAsignadoInputEnvelope
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
  }

  export type ComentarioTicketUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ComentarioTicketCreateWithoutUsuarioInput, ComentarioTicketUncheckedCreateWithoutUsuarioInput> | ComentarioTicketCreateWithoutUsuarioInput[] | ComentarioTicketUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ComentarioTicketCreateOrConnectWithoutUsuarioInput | ComentarioTicketCreateOrConnectWithoutUsuarioInput[]
    createMany?: ComentarioTicketCreateManyUsuarioInputEnvelope
    connect?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
  }

  export type HistorialTicketUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<HistorialTicketCreateWithoutUsuarioInput, HistorialTicketUncheckedCreateWithoutUsuarioInput> | HistorialTicketCreateWithoutUsuarioInput[] | HistorialTicketUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialTicketCreateOrConnectWithoutUsuarioInput | HistorialTicketCreateOrConnectWithoutUsuarioInput[]
    createMany?: HistorialTicketCreateManyUsuarioInputEnvelope
    connect?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
  }

  export type ArchivoAdjuntoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ArchivoAdjuntoCreateWithoutUsuarioInput, ArchivoAdjuntoUncheckedCreateWithoutUsuarioInput> | ArchivoAdjuntoCreateWithoutUsuarioInput[] | ArchivoAdjuntoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ArchivoAdjuntoCreateOrConnectWithoutUsuarioInput | ArchivoAdjuntoCreateOrConnectWithoutUsuarioInput[]
    createMany?: ArchivoAdjuntoCreateManyUsuarioInputEnvelope
    connect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
  }

  export type DerivacionTicketUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DerivacionTicketCreateWithoutUsuarioInput, DerivacionTicketUncheckedCreateWithoutUsuarioInput> | DerivacionTicketCreateWithoutUsuarioInput[] | DerivacionTicketUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutUsuarioInput | DerivacionTicketCreateOrConnectWithoutUsuarioInput[]
    createMany?: DerivacionTicketCreateManyUsuarioInputEnvelope
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
  }

  export type EncuestaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EncuestaCreateWithoutUsuarioInput, EncuestaUncheckedCreateWithoutUsuarioInput> | EncuestaCreateWithoutUsuarioInput[] | EncuestaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EncuestaCreateOrConnectWithoutUsuarioInput | EncuestaCreateOrConnectWithoutUsuarioInput[]
    createMany?: EncuestaCreateManyUsuarioInputEnvelope
    connect?: EncuestaWhereUniqueInput | EncuestaWhereUniqueInput[]
  }

  export type NotificacionUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<NotificacionCreateWithoutUsuarioInput, NotificacionUncheckedCreateWithoutUsuarioInput> | NotificacionCreateWithoutUsuarioInput[] | NotificacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutUsuarioInput | NotificacionCreateOrConnectWithoutUsuarioInput[]
    createMany?: NotificacionCreateManyUsuarioInputEnvelope
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
  }

  export type UsuarioEnCopiaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<UsuarioEnCopiaCreateWithoutUsuarioInput, UsuarioEnCopiaUncheckedCreateWithoutUsuarioInput> | UsuarioEnCopiaCreateWithoutUsuarioInput[] | UsuarioEnCopiaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioEnCopiaCreateOrConnectWithoutUsuarioInput | UsuarioEnCopiaCreateOrConnectWithoutUsuarioInput[]
    createMany?: UsuarioEnCopiaCreateManyUsuarioInputEnvelope
    connect?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
  }

  export type ConfiguracionSistemaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ConfiguracionSistemaCreateWithoutUsuarioInput, ConfiguracionSistemaUncheckedCreateWithoutUsuarioInput> | ConfiguracionSistemaCreateWithoutUsuarioInput[] | ConfiguracionSistemaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ConfiguracionSistemaCreateOrConnectWithoutUsuarioInput | ConfiguracionSistemaCreateOrConnectWithoutUsuarioInput[]
    createMany?: ConfiguracionSistemaCreateManyUsuarioInputEnvelope
    connect?: ConfiguracionSistemaWhereUniqueInput | ConfiguracionSistemaWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type RolUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<RolCreateWithoutUsuariosInput, RolUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: RolCreateOrConnectWithoutUsuariosInput
    upsert?: RolUpsertWithoutUsuariosInput
    connect?: RolWhereUniqueInput
    update?: XOR<XOR<RolUpdateToOneWithWhereWithoutUsuariosInput, RolUpdateWithoutUsuariosInput>, RolUncheckedUpdateWithoutUsuariosInput>
  }

  export type DepartamentoUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<DepartamentoCreateWithoutUsuariosInput, DepartamentoUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutUsuariosInput
    upsert?: DepartamentoUpsertWithoutUsuariosInput
    connect?: DepartamentoWhereUniqueInput
    update?: XOR<XOR<DepartamentoUpdateToOneWithWhereWithoutUsuariosInput, DepartamentoUpdateWithoutUsuariosInput>, DepartamentoUncheckedUpdateWithoutUsuariosInput>
  }

  export type TicketUpdateManyWithoutSolicitanteNestedInput = {
    create?: XOR<TicketCreateWithoutSolicitanteInput, TicketUncheckedCreateWithoutSolicitanteInput> | TicketCreateWithoutSolicitanteInput[] | TicketUncheckedCreateWithoutSolicitanteInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutSolicitanteInput | TicketCreateOrConnectWithoutSolicitanteInput[]
    upsert?: TicketUpsertWithWhereUniqueWithoutSolicitanteInput | TicketUpsertWithWhereUniqueWithoutSolicitanteInput[]
    createMany?: TicketCreateManySolicitanteInputEnvelope
    set?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    disconnect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    delete?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    update?: TicketUpdateWithWhereUniqueWithoutSolicitanteInput | TicketUpdateWithWhereUniqueWithoutSolicitanteInput[]
    updateMany?: TicketUpdateManyWithWhereWithoutSolicitanteInput | TicketUpdateManyWithWhereWithoutSolicitanteInput[]
    deleteMany?: TicketScalarWhereInput | TicketScalarWhereInput[]
  }

  export type TicketUpdateManyWithoutAsignadoNestedInput = {
    create?: XOR<TicketCreateWithoutAsignadoInput, TicketUncheckedCreateWithoutAsignadoInput> | TicketCreateWithoutAsignadoInput[] | TicketUncheckedCreateWithoutAsignadoInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutAsignadoInput | TicketCreateOrConnectWithoutAsignadoInput[]
    upsert?: TicketUpsertWithWhereUniqueWithoutAsignadoInput | TicketUpsertWithWhereUniqueWithoutAsignadoInput[]
    createMany?: TicketCreateManyAsignadoInputEnvelope
    set?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    disconnect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    delete?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    update?: TicketUpdateWithWhereUniqueWithoutAsignadoInput | TicketUpdateWithWhereUniqueWithoutAsignadoInput[]
    updateMany?: TicketUpdateManyWithWhereWithoutAsignadoInput | TicketUpdateManyWithWhereWithoutAsignadoInput[]
    deleteMany?: TicketScalarWhereInput | TicketScalarWhereInput[]
  }

  export type ComentarioTicketUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ComentarioTicketCreateWithoutUsuarioInput, ComentarioTicketUncheckedCreateWithoutUsuarioInput> | ComentarioTicketCreateWithoutUsuarioInput[] | ComentarioTicketUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ComentarioTicketCreateOrConnectWithoutUsuarioInput | ComentarioTicketCreateOrConnectWithoutUsuarioInput[]
    upsert?: ComentarioTicketUpsertWithWhereUniqueWithoutUsuarioInput | ComentarioTicketUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ComentarioTicketCreateManyUsuarioInputEnvelope
    set?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    disconnect?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    delete?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    connect?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    update?: ComentarioTicketUpdateWithWhereUniqueWithoutUsuarioInput | ComentarioTicketUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ComentarioTicketUpdateManyWithWhereWithoutUsuarioInput | ComentarioTicketUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ComentarioTicketScalarWhereInput | ComentarioTicketScalarWhereInput[]
  }

  export type HistorialTicketUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<HistorialTicketCreateWithoutUsuarioInput, HistorialTicketUncheckedCreateWithoutUsuarioInput> | HistorialTicketCreateWithoutUsuarioInput[] | HistorialTicketUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialTicketCreateOrConnectWithoutUsuarioInput | HistorialTicketCreateOrConnectWithoutUsuarioInput[]
    upsert?: HistorialTicketUpsertWithWhereUniqueWithoutUsuarioInput | HistorialTicketUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: HistorialTicketCreateManyUsuarioInputEnvelope
    set?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    disconnect?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    delete?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    connect?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    update?: HistorialTicketUpdateWithWhereUniqueWithoutUsuarioInput | HistorialTicketUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: HistorialTicketUpdateManyWithWhereWithoutUsuarioInput | HistorialTicketUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: HistorialTicketScalarWhereInput | HistorialTicketScalarWhereInput[]
  }

  export type ArchivoAdjuntoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ArchivoAdjuntoCreateWithoutUsuarioInput, ArchivoAdjuntoUncheckedCreateWithoutUsuarioInput> | ArchivoAdjuntoCreateWithoutUsuarioInput[] | ArchivoAdjuntoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ArchivoAdjuntoCreateOrConnectWithoutUsuarioInput | ArchivoAdjuntoCreateOrConnectWithoutUsuarioInput[]
    upsert?: ArchivoAdjuntoUpsertWithWhereUniqueWithoutUsuarioInput | ArchivoAdjuntoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ArchivoAdjuntoCreateManyUsuarioInputEnvelope
    set?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    disconnect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    delete?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    connect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    update?: ArchivoAdjuntoUpdateWithWhereUniqueWithoutUsuarioInput | ArchivoAdjuntoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ArchivoAdjuntoUpdateManyWithWhereWithoutUsuarioInput | ArchivoAdjuntoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ArchivoAdjuntoScalarWhereInput | ArchivoAdjuntoScalarWhereInput[]
  }

  export type DerivacionTicketUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DerivacionTicketCreateWithoutUsuarioInput, DerivacionTicketUncheckedCreateWithoutUsuarioInput> | DerivacionTicketCreateWithoutUsuarioInput[] | DerivacionTicketUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutUsuarioInput | DerivacionTicketCreateOrConnectWithoutUsuarioInput[]
    upsert?: DerivacionTicketUpsertWithWhereUniqueWithoutUsuarioInput | DerivacionTicketUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DerivacionTicketCreateManyUsuarioInputEnvelope
    set?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    disconnect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    delete?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    update?: DerivacionTicketUpdateWithWhereUniqueWithoutUsuarioInput | DerivacionTicketUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DerivacionTicketUpdateManyWithWhereWithoutUsuarioInput | DerivacionTicketUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DerivacionTicketScalarWhereInput | DerivacionTicketScalarWhereInput[]
  }

  export type EncuestaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EncuestaCreateWithoutUsuarioInput, EncuestaUncheckedCreateWithoutUsuarioInput> | EncuestaCreateWithoutUsuarioInput[] | EncuestaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EncuestaCreateOrConnectWithoutUsuarioInput | EncuestaCreateOrConnectWithoutUsuarioInput[]
    upsert?: EncuestaUpsertWithWhereUniqueWithoutUsuarioInput | EncuestaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EncuestaCreateManyUsuarioInputEnvelope
    set?: EncuestaWhereUniqueInput | EncuestaWhereUniqueInput[]
    disconnect?: EncuestaWhereUniqueInput | EncuestaWhereUniqueInput[]
    delete?: EncuestaWhereUniqueInput | EncuestaWhereUniqueInput[]
    connect?: EncuestaWhereUniqueInput | EncuestaWhereUniqueInput[]
    update?: EncuestaUpdateWithWhereUniqueWithoutUsuarioInput | EncuestaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EncuestaUpdateManyWithWhereWithoutUsuarioInput | EncuestaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EncuestaScalarWhereInput | EncuestaScalarWhereInput[]
  }

  export type NotificacionUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<NotificacionCreateWithoutUsuarioInput, NotificacionUncheckedCreateWithoutUsuarioInput> | NotificacionCreateWithoutUsuarioInput[] | NotificacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutUsuarioInput | NotificacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: NotificacionUpsertWithWhereUniqueWithoutUsuarioInput | NotificacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: NotificacionCreateManyUsuarioInputEnvelope
    set?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    disconnect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    delete?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    update?: NotificacionUpdateWithWhereUniqueWithoutUsuarioInput | NotificacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: NotificacionUpdateManyWithWhereWithoutUsuarioInput | NotificacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: NotificacionScalarWhereInput | NotificacionScalarWhereInput[]
  }

  export type UsuarioEnCopiaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<UsuarioEnCopiaCreateWithoutUsuarioInput, UsuarioEnCopiaUncheckedCreateWithoutUsuarioInput> | UsuarioEnCopiaCreateWithoutUsuarioInput[] | UsuarioEnCopiaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioEnCopiaCreateOrConnectWithoutUsuarioInput | UsuarioEnCopiaCreateOrConnectWithoutUsuarioInput[]
    upsert?: UsuarioEnCopiaUpsertWithWhereUniqueWithoutUsuarioInput | UsuarioEnCopiaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: UsuarioEnCopiaCreateManyUsuarioInputEnvelope
    set?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    disconnect?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    delete?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    connect?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    update?: UsuarioEnCopiaUpdateWithWhereUniqueWithoutUsuarioInput | UsuarioEnCopiaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: UsuarioEnCopiaUpdateManyWithWhereWithoutUsuarioInput | UsuarioEnCopiaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: UsuarioEnCopiaScalarWhereInput | UsuarioEnCopiaScalarWhereInput[]
  }

  export type ConfiguracionSistemaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ConfiguracionSistemaCreateWithoutUsuarioInput, ConfiguracionSistemaUncheckedCreateWithoutUsuarioInput> | ConfiguracionSistemaCreateWithoutUsuarioInput[] | ConfiguracionSistemaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ConfiguracionSistemaCreateOrConnectWithoutUsuarioInput | ConfiguracionSistemaCreateOrConnectWithoutUsuarioInput[]
    upsert?: ConfiguracionSistemaUpsertWithWhereUniqueWithoutUsuarioInput | ConfiguracionSistemaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ConfiguracionSistemaCreateManyUsuarioInputEnvelope
    set?: ConfiguracionSistemaWhereUniqueInput | ConfiguracionSistemaWhereUniqueInput[]
    disconnect?: ConfiguracionSistemaWhereUniqueInput | ConfiguracionSistemaWhereUniqueInput[]
    delete?: ConfiguracionSistemaWhereUniqueInput | ConfiguracionSistemaWhereUniqueInput[]
    connect?: ConfiguracionSistemaWhereUniqueInput | ConfiguracionSistemaWhereUniqueInput[]
    update?: ConfiguracionSistemaUpdateWithWhereUniqueWithoutUsuarioInput | ConfiguracionSistemaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ConfiguracionSistemaUpdateManyWithWhereWithoutUsuarioInput | ConfiguracionSistemaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ConfiguracionSistemaScalarWhereInput | ConfiguracionSistemaScalarWhereInput[]
  }

  export type TicketUncheckedUpdateManyWithoutSolicitanteNestedInput = {
    create?: XOR<TicketCreateWithoutSolicitanteInput, TicketUncheckedCreateWithoutSolicitanteInput> | TicketCreateWithoutSolicitanteInput[] | TicketUncheckedCreateWithoutSolicitanteInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutSolicitanteInput | TicketCreateOrConnectWithoutSolicitanteInput[]
    upsert?: TicketUpsertWithWhereUniqueWithoutSolicitanteInput | TicketUpsertWithWhereUniqueWithoutSolicitanteInput[]
    createMany?: TicketCreateManySolicitanteInputEnvelope
    set?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    disconnect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    delete?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    update?: TicketUpdateWithWhereUniqueWithoutSolicitanteInput | TicketUpdateWithWhereUniqueWithoutSolicitanteInput[]
    updateMany?: TicketUpdateManyWithWhereWithoutSolicitanteInput | TicketUpdateManyWithWhereWithoutSolicitanteInput[]
    deleteMany?: TicketScalarWhereInput | TicketScalarWhereInput[]
  }

  export type TicketUncheckedUpdateManyWithoutAsignadoNestedInput = {
    create?: XOR<TicketCreateWithoutAsignadoInput, TicketUncheckedCreateWithoutAsignadoInput> | TicketCreateWithoutAsignadoInput[] | TicketUncheckedCreateWithoutAsignadoInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutAsignadoInput | TicketCreateOrConnectWithoutAsignadoInput[]
    upsert?: TicketUpsertWithWhereUniqueWithoutAsignadoInput | TicketUpsertWithWhereUniqueWithoutAsignadoInput[]
    createMany?: TicketCreateManyAsignadoInputEnvelope
    set?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    disconnect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    delete?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    update?: TicketUpdateWithWhereUniqueWithoutAsignadoInput | TicketUpdateWithWhereUniqueWithoutAsignadoInput[]
    updateMany?: TicketUpdateManyWithWhereWithoutAsignadoInput | TicketUpdateManyWithWhereWithoutAsignadoInput[]
    deleteMany?: TicketScalarWhereInput | TicketScalarWhereInput[]
  }

  export type ComentarioTicketUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ComentarioTicketCreateWithoutUsuarioInput, ComentarioTicketUncheckedCreateWithoutUsuarioInput> | ComentarioTicketCreateWithoutUsuarioInput[] | ComentarioTicketUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ComentarioTicketCreateOrConnectWithoutUsuarioInput | ComentarioTicketCreateOrConnectWithoutUsuarioInput[]
    upsert?: ComentarioTicketUpsertWithWhereUniqueWithoutUsuarioInput | ComentarioTicketUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ComentarioTicketCreateManyUsuarioInputEnvelope
    set?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    disconnect?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    delete?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    connect?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    update?: ComentarioTicketUpdateWithWhereUniqueWithoutUsuarioInput | ComentarioTicketUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ComentarioTicketUpdateManyWithWhereWithoutUsuarioInput | ComentarioTicketUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ComentarioTicketScalarWhereInput | ComentarioTicketScalarWhereInput[]
  }

  export type HistorialTicketUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<HistorialTicketCreateWithoutUsuarioInput, HistorialTicketUncheckedCreateWithoutUsuarioInput> | HistorialTicketCreateWithoutUsuarioInput[] | HistorialTicketUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialTicketCreateOrConnectWithoutUsuarioInput | HistorialTicketCreateOrConnectWithoutUsuarioInput[]
    upsert?: HistorialTicketUpsertWithWhereUniqueWithoutUsuarioInput | HistorialTicketUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: HistorialTicketCreateManyUsuarioInputEnvelope
    set?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    disconnect?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    delete?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    connect?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    update?: HistorialTicketUpdateWithWhereUniqueWithoutUsuarioInput | HistorialTicketUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: HistorialTicketUpdateManyWithWhereWithoutUsuarioInput | HistorialTicketUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: HistorialTicketScalarWhereInput | HistorialTicketScalarWhereInput[]
  }

  export type ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ArchivoAdjuntoCreateWithoutUsuarioInput, ArchivoAdjuntoUncheckedCreateWithoutUsuarioInput> | ArchivoAdjuntoCreateWithoutUsuarioInput[] | ArchivoAdjuntoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ArchivoAdjuntoCreateOrConnectWithoutUsuarioInput | ArchivoAdjuntoCreateOrConnectWithoutUsuarioInput[]
    upsert?: ArchivoAdjuntoUpsertWithWhereUniqueWithoutUsuarioInput | ArchivoAdjuntoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ArchivoAdjuntoCreateManyUsuarioInputEnvelope
    set?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    disconnect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    delete?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    connect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    update?: ArchivoAdjuntoUpdateWithWhereUniqueWithoutUsuarioInput | ArchivoAdjuntoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ArchivoAdjuntoUpdateManyWithWhereWithoutUsuarioInput | ArchivoAdjuntoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ArchivoAdjuntoScalarWhereInput | ArchivoAdjuntoScalarWhereInput[]
  }

  export type DerivacionTicketUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DerivacionTicketCreateWithoutUsuarioInput, DerivacionTicketUncheckedCreateWithoutUsuarioInput> | DerivacionTicketCreateWithoutUsuarioInput[] | DerivacionTicketUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutUsuarioInput | DerivacionTicketCreateOrConnectWithoutUsuarioInput[]
    upsert?: DerivacionTicketUpsertWithWhereUniqueWithoutUsuarioInput | DerivacionTicketUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DerivacionTicketCreateManyUsuarioInputEnvelope
    set?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    disconnect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    delete?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    update?: DerivacionTicketUpdateWithWhereUniqueWithoutUsuarioInput | DerivacionTicketUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DerivacionTicketUpdateManyWithWhereWithoutUsuarioInput | DerivacionTicketUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DerivacionTicketScalarWhereInput | DerivacionTicketScalarWhereInput[]
  }

  export type EncuestaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EncuestaCreateWithoutUsuarioInput, EncuestaUncheckedCreateWithoutUsuarioInput> | EncuestaCreateWithoutUsuarioInput[] | EncuestaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EncuestaCreateOrConnectWithoutUsuarioInput | EncuestaCreateOrConnectWithoutUsuarioInput[]
    upsert?: EncuestaUpsertWithWhereUniqueWithoutUsuarioInput | EncuestaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EncuestaCreateManyUsuarioInputEnvelope
    set?: EncuestaWhereUniqueInput | EncuestaWhereUniqueInput[]
    disconnect?: EncuestaWhereUniqueInput | EncuestaWhereUniqueInput[]
    delete?: EncuestaWhereUniqueInput | EncuestaWhereUniqueInput[]
    connect?: EncuestaWhereUniqueInput | EncuestaWhereUniqueInput[]
    update?: EncuestaUpdateWithWhereUniqueWithoutUsuarioInput | EncuestaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EncuestaUpdateManyWithWhereWithoutUsuarioInput | EncuestaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EncuestaScalarWhereInput | EncuestaScalarWhereInput[]
  }

  export type NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<NotificacionCreateWithoutUsuarioInput, NotificacionUncheckedCreateWithoutUsuarioInput> | NotificacionCreateWithoutUsuarioInput[] | NotificacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutUsuarioInput | NotificacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: NotificacionUpsertWithWhereUniqueWithoutUsuarioInput | NotificacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: NotificacionCreateManyUsuarioInputEnvelope
    set?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    disconnect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    delete?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    update?: NotificacionUpdateWithWhereUniqueWithoutUsuarioInput | NotificacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: NotificacionUpdateManyWithWhereWithoutUsuarioInput | NotificacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: NotificacionScalarWhereInput | NotificacionScalarWhereInput[]
  }

  export type UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<UsuarioEnCopiaCreateWithoutUsuarioInput, UsuarioEnCopiaUncheckedCreateWithoutUsuarioInput> | UsuarioEnCopiaCreateWithoutUsuarioInput[] | UsuarioEnCopiaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioEnCopiaCreateOrConnectWithoutUsuarioInput | UsuarioEnCopiaCreateOrConnectWithoutUsuarioInput[]
    upsert?: UsuarioEnCopiaUpsertWithWhereUniqueWithoutUsuarioInput | UsuarioEnCopiaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: UsuarioEnCopiaCreateManyUsuarioInputEnvelope
    set?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    disconnect?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    delete?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    connect?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    update?: UsuarioEnCopiaUpdateWithWhereUniqueWithoutUsuarioInput | UsuarioEnCopiaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: UsuarioEnCopiaUpdateManyWithWhereWithoutUsuarioInput | UsuarioEnCopiaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: UsuarioEnCopiaScalarWhereInput | UsuarioEnCopiaScalarWhereInput[]
  }

  export type ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ConfiguracionSistemaCreateWithoutUsuarioInput, ConfiguracionSistemaUncheckedCreateWithoutUsuarioInput> | ConfiguracionSistemaCreateWithoutUsuarioInput[] | ConfiguracionSistemaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ConfiguracionSistemaCreateOrConnectWithoutUsuarioInput | ConfiguracionSistemaCreateOrConnectWithoutUsuarioInput[]
    upsert?: ConfiguracionSistemaUpsertWithWhereUniqueWithoutUsuarioInput | ConfiguracionSistemaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ConfiguracionSistemaCreateManyUsuarioInputEnvelope
    set?: ConfiguracionSistemaWhereUniqueInput | ConfiguracionSistemaWhereUniqueInput[]
    disconnect?: ConfiguracionSistemaWhereUniqueInput | ConfiguracionSistemaWhereUniqueInput[]
    delete?: ConfiguracionSistemaWhereUniqueInput | ConfiguracionSistemaWhereUniqueInput[]
    connect?: ConfiguracionSistemaWhereUniqueInput | ConfiguracionSistemaWhereUniqueInput[]
    update?: ConfiguracionSistemaUpdateWithWhereUniqueWithoutUsuarioInput | ConfiguracionSistemaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ConfiguracionSistemaUpdateManyWithWhereWithoutUsuarioInput | ConfiguracionSistemaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ConfiguracionSistemaScalarWhereInput | ConfiguracionSistemaScalarWhereInput[]
  }

  export type TicketCreateNestedManyWithoutEstadoInput = {
    create?: XOR<TicketCreateWithoutEstadoInput, TicketUncheckedCreateWithoutEstadoInput> | TicketCreateWithoutEstadoInput[] | TicketUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutEstadoInput | TicketCreateOrConnectWithoutEstadoInput[]
    createMany?: TicketCreateManyEstadoInputEnvelope
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
  }

  export type TicketUncheckedCreateNestedManyWithoutEstadoInput = {
    create?: XOR<TicketCreateWithoutEstadoInput, TicketUncheckedCreateWithoutEstadoInput> | TicketCreateWithoutEstadoInput[] | TicketUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutEstadoInput | TicketCreateOrConnectWithoutEstadoInput[]
    createMany?: TicketCreateManyEstadoInputEnvelope
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
  }

  export type TicketUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<TicketCreateWithoutEstadoInput, TicketUncheckedCreateWithoutEstadoInput> | TicketCreateWithoutEstadoInput[] | TicketUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutEstadoInput | TicketCreateOrConnectWithoutEstadoInput[]
    upsert?: TicketUpsertWithWhereUniqueWithoutEstadoInput | TicketUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: TicketCreateManyEstadoInputEnvelope
    set?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    disconnect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    delete?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    update?: TicketUpdateWithWhereUniqueWithoutEstadoInput | TicketUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: TicketUpdateManyWithWhereWithoutEstadoInput | TicketUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: TicketScalarWhereInput | TicketScalarWhereInput[]
  }

  export type TicketUncheckedUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<TicketCreateWithoutEstadoInput, TicketUncheckedCreateWithoutEstadoInput> | TicketCreateWithoutEstadoInput[] | TicketUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutEstadoInput | TicketCreateOrConnectWithoutEstadoInput[]
    upsert?: TicketUpsertWithWhereUniqueWithoutEstadoInput | TicketUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: TicketCreateManyEstadoInputEnvelope
    set?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    disconnect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    delete?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    update?: TicketUpdateWithWhereUniqueWithoutEstadoInput | TicketUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: TicketUpdateManyWithWhereWithoutEstadoInput | TicketUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: TicketScalarWhereInput | TicketScalarWhereInput[]
  }

  export type TicketCreateNestedManyWithoutPrioridadInput = {
    create?: XOR<TicketCreateWithoutPrioridadInput, TicketUncheckedCreateWithoutPrioridadInput> | TicketCreateWithoutPrioridadInput[] | TicketUncheckedCreateWithoutPrioridadInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutPrioridadInput | TicketCreateOrConnectWithoutPrioridadInput[]
    createMany?: TicketCreateManyPrioridadInputEnvelope
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
  }

  export type SlaPrioridadCreateNestedManyWithoutPrioridadInput = {
    create?: XOR<SlaPrioridadCreateWithoutPrioridadInput, SlaPrioridadUncheckedCreateWithoutPrioridadInput> | SlaPrioridadCreateWithoutPrioridadInput[] | SlaPrioridadUncheckedCreateWithoutPrioridadInput[]
    connectOrCreate?: SlaPrioridadCreateOrConnectWithoutPrioridadInput | SlaPrioridadCreateOrConnectWithoutPrioridadInput[]
    createMany?: SlaPrioridadCreateManyPrioridadInputEnvelope
    connect?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
  }

  export type TicketUncheckedCreateNestedManyWithoutPrioridadInput = {
    create?: XOR<TicketCreateWithoutPrioridadInput, TicketUncheckedCreateWithoutPrioridadInput> | TicketCreateWithoutPrioridadInput[] | TicketUncheckedCreateWithoutPrioridadInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutPrioridadInput | TicketCreateOrConnectWithoutPrioridadInput[]
    createMany?: TicketCreateManyPrioridadInputEnvelope
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
  }

  export type SlaPrioridadUncheckedCreateNestedManyWithoutPrioridadInput = {
    create?: XOR<SlaPrioridadCreateWithoutPrioridadInput, SlaPrioridadUncheckedCreateWithoutPrioridadInput> | SlaPrioridadCreateWithoutPrioridadInput[] | SlaPrioridadUncheckedCreateWithoutPrioridadInput[]
    connectOrCreate?: SlaPrioridadCreateOrConnectWithoutPrioridadInput | SlaPrioridadCreateOrConnectWithoutPrioridadInput[]
    createMany?: SlaPrioridadCreateManyPrioridadInputEnvelope
    connect?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
  }

  export type TicketUpdateManyWithoutPrioridadNestedInput = {
    create?: XOR<TicketCreateWithoutPrioridadInput, TicketUncheckedCreateWithoutPrioridadInput> | TicketCreateWithoutPrioridadInput[] | TicketUncheckedCreateWithoutPrioridadInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutPrioridadInput | TicketCreateOrConnectWithoutPrioridadInput[]
    upsert?: TicketUpsertWithWhereUniqueWithoutPrioridadInput | TicketUpsertWithWhereUniqueWithoutPrioridadInput[]
    createMany?: TicketCreateManyPrioridadInputEnvelope
    set?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    disconnect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    delete?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    update?: TicketUpdateWithWhereUniqueWithoutPrioridadInput | TicketUpdateWithWhereUniqueWithoutPrioridadInput[]
    updateMany?: TicketUpdateManyWithWhereWithoutPrioridadInput | TicketUpdateManyWithWhereWithoutPrioridadInput[]
    deleteMany?: TicketScalarWhereInput | TicketScalarWhereInput[]
  }

  export type SlaPrioridadUpdateManyWithoutPrioridadNestedInput = {
    create?: XOR<SlaPrioridadCreateWithoutPrioridadInput, SlaPrioridadUncheckedCreateWithoutPrioridadInput> | SlaPrioridadCreateWithoutPrioridadInput[] | SlaPrioridadUncheckedCreateWithoutPrioridadInput[]
    connectOrCreate?: SlaPrioridadCreateOrConnectWithoutPrioridadInput | SlaPrioridadCreateOrConnectWithoutPrioridadInput[]
    upsert?: SlaPrioridadUpsertWithWhereUniqueWithoutPrioridadInput | SlaPrioridadUpsertWithWhereUniqueWithoutPrioridadInput[]
    createMany?: SlaPrioridadCreateManyPrioridadInputEnvelope
    set?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    disconnect?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    delete?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    connect?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    update?: SlaPrioridadUpdateWithWhereUniqueWithoutPrioridadInput | SlaPrioridadUpdateWithWhereUniqueWithoutPrioridadInput[]
    updateMany?: SlaPrioridadUpdateManyWithWhereWithoutPrioridadInput | SlaPrioridadUpdateManyWithWhereWithoutPrioridadInput[]
    deleteMany?: SlaPrioridadScalarWhereInput | SlaPrioridadScalarWhereInput[]
  }

  export type TicketUncheckedUpdateManyWithoutPrioridadNestedInput = {
    create?: XOR<TicketCreateWithoutPrioridadInput, TicketUncheckedCreateWithoutPrioridadInput> | TicketCreateWithoutPrioridadInput[] | TicketUncheckedCreateWithoutPrioridadInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutPrioridadInput | TicketCreateOrConnectWithoutPrioridadInput[]
    upsert?: TicketUpsertWithWhereUniqueWithoutPrioridadInput | TicketUpsertWithWhereUniqueWithoutPrioridadInput[]
    createMany?: TicketCreateManyPrioridadInputEnvelope
    set?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    disconnect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    delete?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    update?: TicketUpdateWithWhereUniqueWithoutPrioridadInput | TicketUpdateWithWhereUniqueWithoutPrioridadInput[]
    updateMany?: TicketUpdateManyWithWhereWithoutPrioridadInput | TicketUpdateManyWithWhereWithoutPrioridadInput[]
    deleteMany?: TicketScalarWhereInput | TicketScalarWhereInput[]
  }

  export type SlaPrioridadUncheckedUpdateManyWithoutPrioridadNestedInput = {
    create?: XOR<SlaPrioridadCreateWithoutPrioridadInput, SlaPrioridadUncheckedCreateWithoutPrioridadInput> | SlaPrioridadCreateWithoutPrioridadInput[] | SlaPrioridadUncheckedCreateWithoutPrioridadInput[]
    connectOrCreate?: SlaPrioridadCreateOrConnectWithoutPrioridadInput | SlaPrioridadCreateOrConnectWithoutPrioridadInput[]
    upsert?: SlaPrioridadUpsertWithWhereUniqueWithoutPrioridadInput | SlaPrioridadUpsertWithWhereUniqueWithoutPrioridadInput[]
    createMany?: SlaPrioridadCreateManyPrioridadInputEnvelope
    set?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    disconnect?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    delete?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    connect?: SlaPrioridadWhereUniqueInput | SlaPrioridadWhereUniqueInput[]
    update?: SlaPrioridadUpdateWithWhereUniqueWithoutPrioridadInput | SlaPrioridadUpdateWithWhereUniqueWithoutPrioridadInput[]
    updateMany?: SlaPrioridadUpdateManyWithWhereWithoutPrioridadInput | SlaPrioridadUpdateManyWithWhereWithoutPrioridadInput[]
    deleteMany?: SlaPrioridadScalarWhereInput | SlaPrioridadScalarWhereInput[]
  }

  export type PrioridadCreateNestedOneWithoutSlasInput = {
    create?: XOR<PrioridadCreateWithoutSlasInput, PrioridadUncheckedCreateWithoutSlasInput>
    connectOrCreate?: PrioridadCreateOrConnectWithoutSlasInput
    connect?: PrioridadWhereUniqueInput
  }

  export type DepartamentoCreateNestedOneWithoutSlaPrioridadesInput = {
    create?: XOR<DepartamentoCreateWithoutSlaPrioridadesInput, DepartamentoUncheckedCreateWithoutSlaPrioridadesInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutSlaPrioridadesInput
    connect?: DepartamentoWhereUniqueInput
  }

  export type PrioridadUpdateOneRequiredWithoutSlasNestedInput = {
    create?: XOR<PrioridadCreateWithoutSlasInput, PrioridadUncheckedCreateWithoutSlasInput>
    connectOrCreate?: PrioridadCreateOrConnectWithoutSlasInput
    upsert?: PrioridadUpsertWithoutSlasInput
    connect?: PrioridadWhereUniqueInput
    update?: XOR<XOR<PrioridadUpdateToOneWithWhereWithoutSlasInput, PrioridadUpdateWithoutSlasInput>, PrioridadUncheckedUpdateWithoutSlasInput>
  }

  export type DepartamentoUpdateOneRequiredWithoutSlaPrioridadesNestedInput = {
    create?: XOR<DepartamentoCreateWithoutSlaPrioridadesInput, DepartamentoUncheckedCreateWithoutSlaPrioridadesInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutSlaPrioridadesInput
    upsert?: DepartamentoUpsertWithoutSlaPrioridadesInput
    connect?: DepartamentoWhereUniqueInput
    update?: XOR<XOR<DepartamentoUpdateToOneWithWhereWithoutSlaPrioridadesInput, DepartamentoUpdateWithoutSlaPrioridadesInput>, DepartamentoUncheckedUpdateWithoutSlaPrioridadesInput>
  }

  export type UsuarioCreateNestedOneWithoutTicketsCreadosInput = {
    create?: XOR<UsuarioCreateWithoutTicketsCreadosInput, UsuarioUncheckedCreateWithoutTicketsCreadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutTicketsCreadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutTicketsAsignadosInput = {
    create?: XOR<UsuarioCreateWithoutTicketsAsignadosInput, UsuarioUncheckedCreateWithoutTicketsAsignadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutTicketsAsignadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type DepartamentoCreateNestedOneWithoutTicketsInput = {
    create?: XOR<DepartamentoCreateWithoutTicketsInput, DepartamentoUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutTicketsInput
    connect?: DepartamentoWhereUniqueInput
  }

  export type PrioridadCreateNestedOneWithoutTicketsInput = {
    create?: XOR<PrioridadCreateWithoutTicketsInput, PrioridadUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: PrioridadCreateOrConnectWithoutTicketsInput
    connect?: PrioridadWhereUniqueInput
  }

  export type EstadoTicketCreateNestedOneWithoutTicketsInput = {
    create?: XOR<EstadoTicketCreateWithoutTicketsInput, EstadoTicketUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: EstadoTicketCreateOrConnectWithoutTicketsInput
    connect?: EstadoTicketWhereUniqueInput
  }

  export type ComentarioTicketCreateNestedManyWithoutTicketInput = {
    create?: XOR<ComentarioTicketCreateWithoutTicketInput, ComentarioTicketUncheckedCreateWithoutTicketInput> | ComentarioTicketCreateWithoutTicketInput[] | ComentarioTicketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: ComentarioTicketCreateOrConnectWithoutTicketInput | ComentarioTicketCreateOrConnectWithoutTicketInput[]
    createMany?: ComentarioTicketCreateManyTicketInputEnvelope
    connect?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
  }

  export type HistorialTicketCreateNestedManyWithoutTicketInput = {
    create?: XOR<HistorialTicketCreateWithoutTicketInput, HistorialTicketUncheckedCreateWithoutTicketInput> | HistorialTicketCreateWithoutTicketInput[] | HistorialTicketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: HistorialTicketCreateOrConnectWithoutTicketInput | HistorialTicketCreateOrConnectWithoutTicketInput[]
    createMany?: HistorialTicketCreateManyTicketInputEnvelope
    connect?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
  }

  export type ArchivoAdjuntoCreateNestedManyWithoutTicketInput = {
    create?: XOR<ArchivoAdjuntoCreateWithoutTicketInput, ArchivoAdjuntoUncheckedCreateWithoutTicketInput> | ArchivoAdjuntoCreateWithoutTicketInput[] | ArchivoAdjuntoUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: ArchivoAdjuntoCreateOrConnectWithoutTicketInput | ArchivoAdjuntoCreateOrConnectWithoutTicketInput[]
    createMany?: ArchivoAdjuntoCreateManyTicketInputEnvelope
    connect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
  }

  export type DerivacionTicketCreateNestedManyWithoutTicketInput = {
    create?: XOR<DerivacionTicketCreateWithoutTicketInput, DerivacionTicketUncheckedCreateWithoutTicketInput> | DerivacionTicketCreateWithoutTicketInput[] | DerivacionTicketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutTicketInput | DerivacionTicketCreateOrConnectWithoutTicketInput[]
    createMany?: DerivacionTicketCreateManyTicketInputEnvelope
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
  }

  export type EncuestaCreateNestedOneWithoutTicketInput = {
    create?: XOR<EncuestaCreateWithoutTicketInput, EncuestaUncheckedCreateWithoutTicketInput>
    connectOrCreate?: EncuestaCreateOrConnectWithoutTicketInput
    connect?: EncuestaWhereUniqueInput
  }

  export type NotificacionCreateNestedManyWithoutTicketInput = {
    create?: XOR<NotificacionCreateWithoutTicketInput, NotificacionUncheckedCreateWithoutTicketInput> | NotificacionCreateWithoutTicketInput[] | NotificacionUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutTicketInput | NotificacionCreateOrConnectWithoutTicketInput[]
    createMany?: NotificacionCreateManyTicketInputEnvelope
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
  }

  export type UsuarioEnCopiaCreateNestedManyWithoutTicketInput = {
    create?: XOR<UsuarioEnCopiaCreateWithoutTicketInput, UsuarioEnCopiaUncheckedCreateWithoutTicketInput> | UsuarioEnCopiaCreateWithoutTicketInput[] | UsuarioEnCopiaUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: UsuarioEnCopiaCreateOrConnectWithoutTicketInput | UsuarioEnCopiaCreateOrConnectWithoutTicketInput[]
    createMany?: UsuarioEnCopiaCreateManyTicketInputEnvelope
    connect?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
  }

  export type ComentarioTicketUncheckedCreateNestedManyWithoutTicketInput = {
    create?: XOR<ComentarioTicketCreateWithoutTicketInput, ComentarioTicketUncheckedCreateWithoutTicketInput> | ComentarioTicketCreateWithoutTicketInput[] | ComentarioTicketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: ComentarioTicketCreateOrConnectWithoutTicketInput | ComentarioTicketCreateOrConnectWithoutTicketInput[]
    createMany?: ComentarioTicketCreateManyTicketInputEnvelope
    connect?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
  }

  export type HistorialTicketUncheckedCreateNestedManyWithoutTicketInput = {
    create?: XOR<HistorialTicketCreateWithoutTicketInput, HistorialTicketUncheckedCreateWithoutTicketInput> | HistorialTicketCreateWithoutTicketInput[] | HistorialTicketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: HistorialTicketCreateOrConnectWithoutTicketInput | HistorialTicketCreateOrConnectWithoutTicketInput[]
    createMany?: HistorialTicketCreateManyTicketInputEnvelope
    connect?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
  }

  export type ArchivoAdjuntoUncheckedCreateNestedManyWithoutTicketInput = {
    create?: XOR<ArchivoAdjuntoCreateWithoutTicketInput, ArchivoAdjuntoUncheckedCreateWithoutTicketInput> | ArchivoAdjuntoCreateWithoutTicketInput[] | ArchivoAdjuntoUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: ArchivoAdjuntoCreateOrConnectWithoutTicketInput | ArchivoAdjuntoCreateOrConnectWithoutTicketInput[]
    createMany?: ArchivoAdjuntoCreateManyTicketInputEnvelope
    connect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
  }

  export type DerivacionTicketUncheckedCreateNestedManyWithoutTicketInput = {
    create?: XOR<DerivacionTicketCreateWithoutTicketInput, DerivacionTicketUncheckedCreateWithoutTicketInput> | DerivacionTicketCreateWithoutTicketInput[] | DerivacionTicketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutTicketInput | DerivacionTicketCreateOrConnectWithoutTicketInput[]
    createMany?: DerivacionTicketCreateManyTicketInputEnvelope
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
  }

  export type EncuestaUncheckedCreateNestedOneWithoutTicketInput = {
    create?: XOR<EncuestaCreateWithoutTicketInput, EncuestaUncheckedCreateWithoutTicketInput>
    connectOrCreate?: EncuestaCreateOrConnectWithoutTicketInput
    connect?: EncuestaWhereUniqueInput
  }

  export type NotificacionUncheckedCreateNestedManyWithoutTicketInput = {
    create?: XOR<NotificacionCreateWithoutTicketInput, NotificacionUncheckedCreateWithoutTicketInput> | NotificacionCreateWithoutTicketInput[] | NotificacionUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutTicketInput | NotificacionCreateOrConnectWithoutTicketInput[]
    createMany?: NotificacionCreateManyTicketInputEnvelope
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
  }

  export type UsuarioEnCopiaUncheckedCreateNestedManyWithoutTicketInput = {
    create?: XOR<UsuarioEnCopiaCreateWithoutTicketInput, UsuarioEnCopiaUncheckedCreateWithoutTicketInput> | UsuarioEnCopiaCreateWithoutTicketInput[] | UsuarioEnCopiaUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: UsuarioEnCopiaCreateOrConnectWithoutTicketInput | UsuarioEnCopiaCreateOrConnectWithoutTicketInput[]
    createMany?: UsuarioEnCopiaCreateManyTicketInputEnvelope
    connect?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
  }

  export type UsuarioUpdateOneRequiredWithoutTicketsCreadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutTicketsCreadosInput, UsuarioUncheckedCreateWithoutTicketsCreadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutTicketsCreadosInput
    upsert?: UsuarioUpsertWithoutTicketsCreadosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutTicketsCreadosInput, UsuarioUpdateWithoutTicketsCreadosInput>, UsuarioUncheckedUpdateWithoutTicketsCreadosInput>
  }

  export type UsuarioUpdateOneWithoutTicketsAsignadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutTicketsAsignadosInput, UsuarioUncheckedCreateWithoutTicketsAsignadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutTicketsAsignadosInput
    upsert?: UsuarioUpsertWithoutTicketsAsignadosInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutTicketsAsignadosInput, UsuarioUpdateWithoutTicketsAsignadosInput>, UsuarioUncheckedUpdateWithoutTicketsAsignadosInput>
  }

  export type DepartamentoUpdateOneRequiredWithoutTicketsNestedInput = {
    create?: XOR<DepartamentoCreateWithoutTicketsInput, DepartamentoUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutTicketsInput
    upsert?: DepartamentoUpsertWithoutTicketsInput
    connect?: DepartamentoWhereUniqueInput
    update?: XOR<XOR<DepartamentoUpdateToOneWithWhereWithoutTicketsInput, DepartamentoUpdateWithoutTicketsInput>, DepartamentoUncheckedUpdateWithoutTicketsInput>
  }

  export type PrioridadUpdateOneRequiredWithoutTicketsNestedInput = {
    create?: XOR<PrioridadCreateWithoutTicketsInput, PrioridadUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: PrioridadCreateOrConnectWithoutTicketsInput
    upsert?: PrioridadUpsertWithoutTicketsInput
    connect?: PrioridadWhereUniqueInput
    update?: XOR<XOR<PrioridadUpdateToOneWithWhereWithoutTicketsInput, PrioridadUpdateWithoutTicketsInput>, PrioridadUncheckedUpdateWithoutTicketsInput>
  }

  export type EstadoTicketUpdateOneRequiredWithoutTicketsNestedInput = {
    create?: XOR<EstadoTicketCreateWithoutTicketsInput, EstadoTicketUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: EstadoTicketCreateOrConnectWithoutTicketsInput
    upsert?: EstadoTicketUpsertWithoutTicketsInput
    connect?: EstadoTicketWhereUniqueInput
    update?: XOR<XOR<EstadoTicketUpdateToOneWithWhereWithoutTicketsInput, EstadoTicketUpdateWithoutTicketsInput>, EstadoTicketUncheckedUpdateWithoutTicketsInput>
  }

  export type ComentarioTicketUpdateManyWithoutTicketNestedInput = {
    create?: XOR<ComentarioTicketCreateWithoutTicketInput, ComentarioTicketUncheckedCreateWithoutTicketInput> | ComentarioTicketCreateWithoutTicketInput[] | ComentarioTicketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: ComentarioTicketCreateOrConnectWithoutTicketInput | ComentarioTicketCreateOrConnectWithoutTicketInput[]
    upsert?: ComentarioTicketUpsertWithWhereUniqueWithoutTicketInput | ComentarioTicketUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: ComentarioTicketCreateManyTicketInputEnvelope
    set?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    disconnect?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    delete?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    connect?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    update?: ComentarioTicketUpdateWithWhereUniqueWithoutTicketInput | ComentarioTicketUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: ComentarioTicketUpdateManyWithWhereWithoutTicketInput | ComentarioTicketUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: ComentarioTicketScalarWhereInput | ComentarioTicketScalarWhereInput[]
  }

  export type HistorialTicketUpdateManyWithoutTicketNestedInput = {
    create?: XOR<HistorialTicketCreateWithoutTicketInput, HistorialTicketUncheckedCreateWithoutTicketInput> | HistorialTicketCreateWithoutTicketInput[] | HistorialTicketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: HistorialTicketCreateOrConnectWithoutTicketInput | HistorialTicketCreateOrConnectWithoutTicketInput[]
    upsert?: HistorialTicketUpsertWithWhereUniqueWithoutTicketInput | HistorialTicketUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: HistorialTicketCreateManyTicketInputEnvelope
    set?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    disconnect?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    delete?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    connect?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    update?: HistorialTicketUpdateWithWhereUniqueWithoutTicketInput | HistorialTicketUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: HistorialTicketUpdateManyWithWhereWithoutTicketInput | HistorialTicketUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: HistorialTicketScalarWhereInput | HistorialTicketScalarWhereInput[]
  }

  export type ArchivoAdjuntoUpdateManyWithoutTicketNestedInput = {
    create?: XOR<ArchivoAdjuntoCreateWithoutTicketInput, ArchivoAdjuntoUncheckedCreateWithoutTicketInput> | ArchivoAdjuntoCreateWithoutTicketInput[] | ArchivoAdjuntoUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: ArchivoAdjuntoCreateOrConnectWithoutTicketInput | ArchivoAdjuntoCreateOrConnectWithoutTicketInput[]
    upsert?: ArchivoAdjuntoUpsertWithWhereUniqueWithoutTicketInput | ArchivoAdjuntoUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: ArchivoAdjuntoCreateManyTicketInputEnvelope
    set?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    disconnect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    delete?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    connect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    update?: ArchivoAdjuntoUpdateWithWhereUniqueWithoutTicketInput | ArchivoAdjuntoUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: ArchivoAdjuntoUpdateManyWithWhereWithoutTicketInput | ArchivoAdjuntoUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: ArchivoAdjuntoScalarWhereInput | ArchivoAdjuntoScalarWhereInput[]
  }

  export type DerivacionTicketUpdateManyWithoutTicketNestedInput = {
    create?: XOR<DerivacionTicketCreateWithoutTicketInput, DerivacionTicketUncheckedCreateWithoutTicketInput> | DerivacionTicketCreateWithoutTicketInput[] | DerivacionTicketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutTicketInput | DerivacionTicketCreateOrConnectWithoutTicketInput[]
    upsert?: DerivacionTicketUpsertWithWhereUniqueWithoutTicketInput | DerivacionTicketUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: DerivacionTicketCreateManyTicketInputEnvelope
    set?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    disconnect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    delete?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    update?: DerivacionTicketUpdateWithWhereUniqueWithoutTicketInput | DerivacionTicketUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: DerivacionTicketUpdateManyWithWhereWithoutTicketInput | DerivacionTicketUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: DerivacionTicketScalarWhereInput | DerivacionTicketScalarWhereInput[]
  }

  export type EncuestaUpdateOneWithoutTicketNestedInput = {
    create?: XOR<EncuestaCreateWithoutTicketInput, EncuestaUncheckedCreateWithoutTicketInput>
    connectOrCreate?: EncuestaCreateOrConnectWithoutTicketInput
    upsert?: EncuestaUpsertWithoutTicketInput
    disconnect?: EncuestaWhereInput | boolean
    delete?: EncuestaWhereInput | boolean
    connect?: EncuestaWhereUniqueInput
    update?: XOR<XOR<EncuestaUpdateToOneWithWhereWithoutTicketInput, EncuestaUpdateWithoutTicketInput>, EncuestaUncheckedUpdateWithoutTicketInput>
  }

  export type NotificacionUpdateManyWithoutTicketNestedInput = {
    create?: XOR<NotificacionCreateWithoutTicketInput, NotificacionUncheckedCreateWithoutTicketInput> | NotificacionCreateWithoutTicketInput[] | NotificacionUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutTicketInput | NotificacionCreateOrConnectWithoutTicketInput[]
    upsert?: NotificacionUpsertWithWhereUniqueWithoutTicketInput | NotificacionUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: NotificacionCreateManyTicketInputEnvelope
    set?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    disconnect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    delete?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    update?: NotificacionUpdateWithWhereUniqueWithoutTicketInput | NotificacionUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: NotificacionUpdateManyWithWhereWithoutTicketInput | NotificacionUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: NotificacionScalarWhereInput | NotificacionScalarWhereInput[]
  }

  export type UsuarioEnCopiaUpdateManyWithoutTicketNestedInput = {
    create?: XOR<UsuarioEnCopiaCreateWithoutTicketInput, UsuarioEnCopiaUncheckedCreateWithoutTicketInput> | UsuarioEnCopiaCreateWithoutTicketInput[] | UsuarioEnCopiaUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: UsuarioEnCopiaCreateOrConnectWithoutTicketInput | UsuarioEnCopiaCreateOrConnectWithoutTicketInput[]
    upsert?: UsuarioEnCopiaUpsertWithWhereUniqueWithoutTicketInput | UsuarioEnCopiaUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: UsuarioEnCopiaCreateManyTicketInputEnvelope
    set?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    disconnect?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    delete?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    connect?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    update?: UsuarioEnCopiaUpdateWithWhereUniqueWithoutTicketInput | UsuarioEnCopiaUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: UsuarioEnCopiaUpdateManyWithWhereWithoutTicketInput | UsuarioEnCopiaUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: UsuarioEnCopiaScalarWhereInput | UsuarioEnCopiaScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ComentarioTicketUncheckedUpdateManyWithoutTicketNestedInput = {
    create?: XOR<ComentarioTicketCreateWithoutTicketInput, ComentarioTicketUncheckedCreateWithoutTicketInput> | ComentarioTicketCreateWithoutTicketInput[] | ComentarioTicketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: ComentarioTicketCreateOrConnectWithoutTicketInput | ComentarioTicketCreateOrConnectWithoutTicketInput[]
    upsert?: ComentarioTicketUpsertWithWhereUniqueWithoutTicketInput | ComentarioTicketUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: ComentarioTicketCreateManyTicketInputEnvelope
    set?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    disconnect?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    delete?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    connect?: ComentarioTicketWhereUniqueInput | ComentarioTicketWhereUniqueInput[]
    update?: ComentarioTicketUpdateWithWhereUniqueWithoutTicketInput | ComentarioTicketUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: ComentarioTicketUpdateManyWithWhereWithoutTicketInput | ComentarioTicketUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: ComentarioTicketScalarWhereInput | ComentarioTicketScalarWhereInput[]
  }

  export type HistorialTicketUncheckedUpdateManyWithoutTicketNestedInput = {
    create?: XOR<HistorialTicketCreateWithoutTicketInput, HistorialTicketUncheckedCreateWithoutTicketInput> | HistorialTicketCreateWithoutTicketInput[] | HistorialTicketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: HistorialTicketCreateOrConnectWithoutTicketInput | HistorialTicketCreateOrConnectWithoutTicketInput[]
    upsert?: HistorialTicketUpsertWithWhereUniqueWithoutTicketInput | HistorialTicketUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: HistorialTicketCreateManyTicketInputEnvelope
    set?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    disconnect?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    delete?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    connect?: HistorialTicketWhereUniqueInput | HistorialTicketWhereUniqueInput[]
    update?: HistorialTicketUpdateWithWhereUniqueWithoutTicketInput | HistorialTicketUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: HistorialTicketUpdateManyWithWhereWithoutTicketInput | HistorialTicketUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: HistorialTicketScalarWhereInput | HistorialTicketScalarWhereInput[]
  }

  export type ArchivoAdjuntoUncheckedUpdateManyWithoutTicketNestedInput = {
    create?: XOR<ArchivoAdjuntoCreateWithoutTicketInput, ArchivoAdjuntoUncheckedCreateWithoutTicketInput> | ArchivoAdjuntoCreateWithoutTicketInput[] | ArchivoAdjuntoUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: ArchivoAdjuntoCreateOrConnectWithoutTicketInput | ArchivoAdjuntoCreateOrConnectWithoutTicketInput[]
    upsert?: ArchivoAdjuntoUpsertWithWhereUniqueWithoutTicketInput | ArchivoAdjuntoUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: ArchivoAdjuntoCreateManyTicketInputEnvelope
    set?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    disconnect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    delete?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    connect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    update?: ArchivoAdjuntoUpdateWithWhereUniqueWithoutTicketInput | ArchivoAdjuntoUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: ArchivoAdjuntoUpdateManyWithWhereWithoutTicketInput | ArchivoAdjuntoUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: ArchivoAdjuntoScalarWhereInput | ArchivoAdjuntoScalarWhereInput[]
  }

  export type DerivacionTicketUncheckedUpdateManyWithoutTicketNestedInput = {
    create?: XOR<DerivacionTicketCreateWithoutTicketInput, DerivacionTicketUncheckedCreateWithoutTicketInput> | DerivacionTicketCreateWithoutTicketInput[] | DerivacionTicketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: DerivacionTicketCreateOrConnectWithoutTicketInput | DerivacionTicketCreateOrConnectWithoutTicketInput[]
    upsert?: DerivacionTicketUpsertWithWhereUniqueWithoutTicketInput | DerivacionTicketUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: DerivacionTicketCreateManyTicketInputEnvelope
    set?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    disconnect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    delete?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    connect?: DerivacionTicketWhereUniqueInput | DerivacionTicketWhereUniqueInput[]
    update?: DerivacionTicketUpdateWithWhereUniqueWithoutTicketInput | DerivacionTicketUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: DerivacionTicketUpdateManyWithWhereWithoutTicketInput | DerivacionTicketUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: DerivacionTicketScalarWhereInput | DerivacionTicketScalarWhereInput[]
  }

  export type EncuestaUncheckedUpdateOneWithoutTicketNestedInput = {
    create?: XOR<EncuestaCreateWithoutTicketInput, EncuestaUncheckedCreateWithoutTicketInput>
    connectOrCreate?: EncuestaCreateOrConnectWithoutTicketInput
    upsert?: EncuestaUpsertWithoutTicketInput
    disconnect?: EncuestaWhereInput | boolean
    delete?: EncuestaWhereInput | boolean
    connect?: EncuestaWhereUniqueInput
    update?: XOR<XOR<EncuestaUpdateToOneWithWhereWithoutTicketInput, EncuestaUpdateWithoutTicketInput>, EncuestaUncheckedUpdateWithoutTicketInput>
  }

  export type NotificacionUncheckedUpdateManyWithoutTicketNestedInput = {
    create?: XOR<NotificacionCreateWithoutTicketInput, NotificacionUncheckedCreateWithoutTicketInput> | NotificacionCreateWithoutTicketInput[] | NotificacionUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutTicketInput | NotificacionCreateOrConnectWithoutTicketInput[]
    upsert?: NotificacionUpsertWithWhereUniqueWithoutTicketInput | NotificacionUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: NotificacionCreateManyTicketInputEnvelope
    set?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    disconnect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    delete?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    update?: NotificacionUpdateWithWhereUniqueWithoutTicketInput | NotificacionUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: NotificacionUpdateManyWithWhereWithoutTicketInput | NotificacionUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: NotificacionScalarWhereInput | NotificacionScalarWhereInput[]
  }

  export type UsuarioEnCopiaUncheckedUpdateManyWithoutTicketNestedInput = {
    create?: XOR<UsuarioEnCopiaCreateWithoutTicketInput, UsuarioEnCopiaUncheckedCreateWithoutTicketInput> | UsuarioEnCopiaCreateWithoutTicketInput[] | UsuarioEnCopiaUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: UsuarioEnCopiaCreateOrConnectWithoutTicketInput | UsuarioEnCopiaCreateOrConnectWithoutTicketInput[]
    upsert?: UsuarioEnCopiaUpsertWithWhereUniqueWithoutTicketInput | UsuarioEnCopiaUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: UsuarioEnCopiaCreateManyTicketInputEnvelope
    set?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    disconnect?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    delete?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    connect?: UsuarioEnCopiaWhereUniqueInput | UsuarioEnCopiaWhereUniqueInput[]
    update?: UsuarioEnCopiaUpdateWithWhereUniqueWithoutTicketInput | UsuarioEnCopiaUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: UsuarioEnCopiaUpdateManyWithWhereWithoutTicketInput | UsuarioEnCopiaUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: UsuarioEnCopiaScalarWhereInput | UsuarioEnCopiaScalarWhereInput[]
  }

  export type TicketCreateNestedOneWithoutHistorialInput = {
    create?: XOR<TicketCreateWithoutHistorialInput, TicketUncheckedCreateWithoutHistorialInput>
    connectOrCreate?: TicketCreateOrConnectWithoutHistorialInput
    connect?: TicketWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutHistorialInput = {
    create?: XOR<UsuarioCreateWithoutHistorialInput, UsuarioUncheckedCreateWithoutHistorialInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutHistorialInput
    connect?: UsuarioWhereUniqueInput
  }

  export type TicketUpdateOneRequiredWithoutHistorialNestedInput = {
    create?: XOR<TicketCreateWithoutHistorialInput, TicketUncheckedCreateWithoutHistorialInput>
    connectOrCreate?: TicketCreateOrConnectWithoutHistorialInput
    upsert?: TicketUpsertWithoutHistorialInput
    connect?: TicketWhereUniqueInput
    update?: XOR<XOR<TicketUpdateToOneWithWhereWithoutHistorialInput, TicketUpdateWithoutHistorialInput>, TicketUncheckedUpdateWithoutHistorialInput>
  }

  export type UsuarioUpdateOneRequiredWithoutHistorialNestedInput = {
    create?: XOR<UsuarioCreateWithoutHistorialInput, UsuarioUncheckedCreateWithoutHistorialInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutHistorialInput
    upsert?: UsuarioUpsertWithoutHistorialInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutHistorialInput, UsuarioUpdateWithoutHistorialInput>, UsuarioUncheckedUpdateWithoutHistorialInput>
  }

  export type TicketCreateNestedOneWithoutComentariosInput = {
    create?: XOR<TicketCreateWithoutComentariosInput, TicketUncheckedCreateWithoutComentariosInput>
    connectOrCreate?: TicketCreateOrConnectWithoutComentariosInput
    connect?: TicketWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutComentariosInput = {
    create?: XOR<UsuarioCreateWithoutComentariosInput, UsuarioUncheckedCreateWithoutComentariosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutComentariosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type ArchivoAdjuntoCreateNestedManyWithoutComentarioInput = {
    create?: XOR<ArchivoAdjuntoCreateWithoutComentarioInput, ArchivoAdjuntoUncheckedCreateWithoutComentarioInput> | ArchivoAdjuntoCreateWithoutComentarioInput[] | ArchivoAdjuntoUncheckedCreateWithoutComentarioInput[]
    connectOrCreate?: ArchivoAdjuntoCreateOrConnectWithoutComentarioInput | ArchivoAdjuntoCreateOrConnectWithoutComentarioInput[]
    createMany?: ArchivoAdjuntoCreateManyComentarioInputEnvelope
    connect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
  }

  export type ArchivoAdjuntoUncheckedCreateNestedManyWithoutComentarioInput = {
    create?: XOR<ArchivoAdjuntoCreateWithoutComentarioInput, ArchivoAdjuntoUncheckedCreateWithoutComentarioInput> | ArchivoAdjuntoCreateWithoutComentarioInput[] | ArchivoAdjuntoUncheckedCreateWithoutComentarioInput[]
    connectOrCreate?: ArchivoAdjuntoCreateOrConnectWithoutComentarioInput | ArchivoAdjuntoCreateOrConnectWithoutComentarioInput[]
    createMany?: ArchivoAdjuntoCreateManyComentarioInputEnvelope
    connect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
  }

  export type TicketUpdateOneRequiredWithoutComentariosNestedInput = {
    create?: XOR<TicketCreateWithoutComentariosInput, TicketUncheckedCreateWithoutComentariosInput>
    connectOrCreate?: TicketCreateOrConnectWithoutComentariosInput
    upsert?: TicketUpsertWithoutComentariosInput
    connect?: TicketWhereUniqueInput
    update?: XOR<XOR<TicketUpdateToOneWithWhereWithoutComentariosInput, TicketUpdateWithoutComentariosInput>, TicketUncheckedUpdateWithoutComentariosInput>
  }

  export type UsuarioUpdateOneRequiredWithoutComentariosNestedInput = {
    create?: XOR<UsuarioCreateWithoutComentariosInput, UsuarioUncheckedCreateWithoutComentariosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutComentariosInput
    upsert?: UsuarioUpsertWithoutComentariosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutComentariosInput, UsuarioUpdateWithoutComentariosInput>, UsuarioUncheckedUpdateWithoutComentariosInput>
  }

  export type ArchivoAdjuntoUpdateManyWithoutComentarioNestedInput = {
    create?: XOR<ArchivoAdjuntoCreateWithoutComentarioInput, ArchivoAdjuntoUncheckedCreateWithoutComentarioInput> | ArchivoAdjuntoCreateWithoutComentarioInput[] | ArchivoAdjuntoUncheckedCreateWithoutComentarioInput[]
    connectOrCreate?: ArchivoAdjuntoCreateOrConnectWithoutComentarioInput | ArchivoAdjuntoCreateOrConnectWithoutComentarioInput[]
    upsert?: ArchivoAdjuntoUpsertWithWhereUniqueWithoutComentarioInput | ArchivoAdjuntoUpsertWithWhereUniqueWithoutComentarioInput[]
    createMany?: ArchivoAdjuntoCreateManyComentarioInputEnvelope
    set?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    disconnect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    delete?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    connect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    update?: ArchivoAdjuntoUpdateWithWhereUniqueWithoutComentarioInput | ArchivoAdjuntoUpdateWithWhereUniqueWithoutComentarioInput[]
    updateMany?: ArchivoAdjuntoUpdateManyWithWhereWithoutComentarioInput | ArchivoAdjuntoUpdateManyWithWhereWithoutComentarioInput[]
    deleteMany?: ArchivoAdjuntoScalarWhereInput | ArchivoAdjuntoScalarWhereInput[]
  }

  export type ArchivoAdjuntoUncheckedUpdateManyWithoutComentarioNestedInput = {
    create?: XOR<ArchivoAdjuntoCreateWithoutComentarioInput, ArchivoAdjuntoUncheckedCreateWithoutComentarioInput> | ArchivoAdjuntoCreateWithoutComentarioInput[] | ArchivoAdjuntoUncheckedCreateWithoutComentarioInput[]
    connectOrCreate?: ArchivoAdjuntoCreateOrConnectWithoutComentarioInput | ArchivoAdjuntoCreateOrConnectWithoutComentarioInput[]
    upsert?: ArchivoAdjuntoUpsertWithWhereUniqueWithoutComentarioInput | ArchivoAdjuntoUpsertWithWhereUniqueWithoutComentarioInput[]
    createMany?: ArchivoAdjuntoCreateManyComentarioInputEnvelope
    set?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    disconnect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    delete?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    connect?: ArchivoAdjuntoWhereUniqueInput | ArchivoAdjuntoWhereUniqueInput[]
    update?: ArchivoAdjuntoUpdateWithWhereUniqueWithoutComentarioInput | ArchivoAdjuntoUpdateWithWhereUniqueWithoutComentarioInput[]
    updateMany?: ArchivoAdjuntoUpdateManyWithWhereWithoutComentarioInput | ArchivoAdjuntoUpdateManyWithWhereWithoutComentarioInput[]
    deleteMany?: ArchivoAdjuntoScalarWhereInput | ArchivoAdjuntoScalarWhereInput[]
  }

  export type TicketCreateNestedOneWithoutArchivosInput = {
    create?: XOR<TicketCreateWithoutArchivosInput, TicketUncheckedCreateWithoutArchivosInput>
    connectOrCreate?: TicketCreateOrConnectWithoutArchivosInput
    connect?: TicketWhereUniqueInput
  }

  export type ComentarioTicketCreateNestedOneWithoutArchivosInput = {
    create?: XOR<ComentarioTicketCreateWithoutArchivosInput, ComentarioTicketUncheckedCreateWithoutArchivosInput>
    connectOrCreate?: ComentarioTicketCreateOrConnectWithoutArchivosInput
    connect?: ComentarioTicketWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutArchivosSubidosInput = {
    create?: XOR<UsuarioCreateWithoutArchivosSubidosInput, UsuarioUncheckedCreateWithoutArchivosSubidosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutArchivosSubidosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type TicketUpdateOneRequiredWithoutArchivosNestedInput = {
    create?: XOR<TicketCreateWithoutArchivosInput, TicketUncheckedCreateWithoutArchivosInput>
    connectOrCreate?: TicketCreateOrConnectWithoutArchivosInput
    upsert?: TicketUpsertWithoutArchivosInput
    connect?: TicketWhereUniqueInput
    update?: XOR<XOR<TicketUpdateToOneWithWhereWithoutArchivosInput, TicketUpdateWithoutArchivosInput>, TicketUncheckedUpdateWithoutArchivosInput>
  }

  export type ComentarioTicketUpdateOneWithoutArchivosNestedInput = {
    create?: XOR<ComentarioTicketCreateWithoutArchivosInput, ComentarioTicketUncheckedCreateWithoutArchivosInput>
    connectOrCreate?: ComentarioTicketCreateOrConnectWithoutArchivosInput
    upsert?: ComentarioTicketUpsertWithoutArchivosInput
    disconnect?: ComentarioTicketWhereInput | boolean
    delete?: ComentarioTicketWhereInput | boolean
    connect?: ComentarioTicketWhereUniqueInput
    update?: XOR<XOR<ComentarioTicketUpdateToOneWithWhereWithoutArchivosInput, ComentarioTicketUpdateWithoutArchivosInput>, ComentarioTicketUncheckedUpdateWithoutArchivosInput>
  }

  export type UsuarioUpdateOneRequiredWithoutArchivosSubidosNestedInput = {
    create?: XOR<UsuarioCreateWithoutArchivosSubidosInput, UsuarioUncheckedCreateWithoutArchivosSubidosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutArchivosSubidosInput
    upsert?: UsuarioUpsertWithoutArchivosSubidosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutArchivosSubidosInput, UsuarioUpdateWithoutArchivosSubidosInput>, UsuarioUncheckedUpdateWithoutArchivosSubidosInput>
  }

  export type TicketCreateNestedOneWithoutDerivacionesInput = {
    create?: XOR<TicketCreateWithoutDerivacionesInput, TicketUncheckedCreateWithoutDerivacionesInput>
    connectOrCreate?: TicketCreateOrConnectWithoutDerivacionesInput
    connect?: TicketWhereUniqueInput
  }

  export type DepartamentoCreateNestedOneWithoutDerivacionesOrigenInput = {
    create?: XOR<DepartamentoCreateWithoutDerivacionesOrigenInput, DepartamentoUncheckedCreateWithoutDerivacionesOrigenInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutDerivacionesOrigenInput
    connect?: DepartamentoWhereUniqueInput
  }

  export type DepartamentoCreateNestedOneWithoutDerivacionesDestinoInput = {
    create?: XOR<DepartamentoCreateWithoutDerivacionesDestinoInput, DepartamentoUncheckedCreateWithoutDerivacionesDestinoInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutDerivacionesDestinoInput
    connect?: DepartamentoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutDerivacionesInput = {
    create?: XOR<UsuarioCreateWithoutDerivacionesInput, UsuarioUncheckedCreateWithoutDerivacionesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDerivacionesInput
    connect?: UsuarioWhereUniqueInput
  }

  export type TicketUpdateOneRequiredWithoutDerivacionesNestedInput = {
    create?: XOR<TicketCreateWithoutDerivacionesInput, TicketUncheckedCreateWithoutDerivacionesInput>
    connectOrCreate?: TicketCreateOrConnectWithoutDerivacionesInput
    upsert?: TicketUpsertWithoutDerivacionesInput
    connect?: TicketWhereUniqueInput
    update?: XOR<XOR<TicketUpdateToOneWithWhereWithoutDerivacionesInput, TicketUpdateWithoutDerivacionesInput>, TicketUncheckedUpdateWithoutDerivacionesInput>
  }

  export type DepartamentoUpdateOneRequiredWithoutDerivacionesOrigenNestedInput = {
    create?: XOR<DepartamentoCreateWithoutDerivacionesOrigenInput, DepartamentoUncheckedCreateWithoutDerivacionesOrigenInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutDerivacionesOrigenInput
    upsert?: DepartamentoUpsertWithoutDerivacionesOrigenInput
    connect?: DepartamentoWhereUniqueInput
    update?: XOR<XOR<DepartamentoUpdateToOneWithWhereWithoutDerivacionesOrigenInput, DepartamentoUpdateWithoutDerivacionesOrigenInput>, DepartamentoUncheckedUpdateWithoutDerivacionesOrigenInput>
  }

  export type DepartamentoUpdateOneRequiredWithoutDerivacionesDestinoNestedInput = {
    create?: XOR<DepartamentoCreateWithoutDerivacionesDestinoInput, DepartamentoUncheckedCreateWithoutDerivacionesDestinoInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutDerivacionesDestinoInput
    upsert?: DepartamentoUpsertWithoutDerivacionesDestinoInput
    connect?: DepartamentoWhereUniqueInput
    update?: XOR<XOR<DepartamentoUpdateToOneWithWhereWithoutDerivacionesDestinoInput, DepartamentoUpdateWithoutDerivacionesDestinoInput>, DepartamentoUncheckedUpdateWithoutDerivacionesDestinoInput>
  }

  export type UsuarioUpdateOneRequiredWithoutDerivacionesNestedInput = {
    create?: XOR<UsuarioCreateWithoutDerivacionesInput, UsuarioUncheckedCreateWithoutDerivacionesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDerivacionesInput
    upsert?: UsuarioUpsertWithoutDerivacionesInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutDerivacionesInput, UsuarioUpdateWithoutDerivacionesInput>, UsuarioUncheckedUpdateWithoutDerivacionesInput>
  }

  export type TicketCreateNestedOneWithoutEncuestaInput = {
    create?: XOR<TicketCreateWithoutEncuestaInput, TicketUncheckedCreateWithoutEncuestaInput>
    connectOrCreate?: TicketCreateOrConnectWithoutEncuestaInput
    connect?: TicketWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutEncuestasInput = {
    create?: XOR<UsuarioCreateWithoutEncuestasInput, UsuarioUncheckedCreateWithoutEncuestasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEncuestasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type TicketUpdateOneRequiredWithoutEncuestaNestedInput = {
    create?: XOR<TicketCreateWithoutEncuestaInput, TicketUncheckedCreateWithoutEncuestaInput>
    connectOrCreate?: TicketCreateOrConnectWithoutEncuestaInput
    upsert?: TicketUpsertWithoutEncuestaInput
    connect?: TicketWhereUniqueInput
    update?: XOR<XOR<TicketUpdateToOneWithWhereWithoutEncuestaInput, TicketUpdateWithoutEncuestaInput>, TicketUncheckedUpdateWithoutEncuestaInput>
  }

  export type UsuarioUpdateOneWithoutEncuestasNestedInput = {
    create?: XOR<UsuarioCreateWithoutEncuestasInput, UsuarioUncheckedCreateWithoutEncuestasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEncuestasInput
    upsert?: UsuarioUpsertWithoutEncuestasInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutEncuestasInput, UsuarioUpdateWithoutEncuestasInput>, UsuarioUncheckedUpdateWithoutEncuestasInput>
  }

  export type UsuarioCreateNestedOneWithoutNotificacionesInput = {
    create?: XOR<UsuarioCreateWithoutNotificacionesInput, UsuarioUncheckedCreateWithoutNotificacionesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacionesInput
    connect?: UsuarioWhereUniqueInput
  }

  export type TicketCreateNestedOneWithoutNotificacionesInput = {
    create?: XOR<TicketCreateWithoutNotificacionesInput, TicketUncheckedCreateWithoutNotificacionesInput>
    connectOrCreate?: TicketCreateOrConnectWithoutNotificacionesInput
    connect?: TicketWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutNotificacionesNestedInput = {
    create?: XOR<UsuarioCreateWithoutNotificacionesInput, UsuarioUncheckedCreateWithoutNotificacionesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacionesInput
    upsert?: UsuarioUpsertWithoutNotificacionesInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutNotificacionesInput, UsuarioUpdateWithoutNotificacionesInput>, UsuarioUncheckedUpdateWithoutNotificacionesInput>
  }

  export type TicketUpdateOneWithoutNotificacionesNestedInput = {
    create?: XOR<TicketCreateWithoutNotificacionesInput, TicketUncheckedCreateWithoutNotificacionesInput>
    connectOrCreate?: TicketCreateOrConnectWithoutNotificacionesInput
    upsert?: TicketUpsertWithoutNotificacionesInput
    disconnect?: TicketWhereInput | boolean
    delete?: TicketWhereInput | boolean
    connect?: TicketWhereUniqueInput
    update?: XOR<XOR<TicketUpdateToOneWithWhereWithoutNotificacionesInput, TicketUpdateWithoutNotificacionesInput>, TicketUncheckedUpdateWithoutNotificacionesInput>
  }

  export type TicketCreateNestedOneWithoutUsuariosEnCopiaInput = {
    create?: XOR<TicketCreateWithoutUsuariosEnCopiaInput, TicketUncheckedCreateWithoutUsuariosEnCopiaInput>
    connectOrCreate?: TicketCreateOrConnectWithoutUsuariosEnCopiaInput
    connect?: TicketWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutUsuariosEnCopiaInput = {
    create?: XOR<UsuarioCreateWithoutUsuariosEnCopiaInput, UsuarioUncheckedCreateWithoutUsuariosEnCopiaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutUsuariosEnCopiaInput
    connect?: UsuarioWhereUniqueInput
  }

  export type TicketUpdateOneRequiredWithoutUsuariosEnCopiaNestedInput = {
    create?: XOR<TicketCreateWithoutUsuariosEnCopiaInput, TicketUncheckedCreateWithoutUsuariosEnCopiaInput>
    connectOrCreate?: TicketCreateOrConnectWithoutUsuariosEnCopiaInput
    upsert?: TicketUpsertWithoutUsuariosEnCopiaInput
    connect?: TicketWhereUniqueInput
    update?: XOR<XOR<TicketUpdateToOneWithWhereWithoutUsuariosEnCopiaInput, TicketUpdateWithoutUsuariosEnCopiaInput>, TicketUncheckedUpdateWithoutUsuariosEnCopiaInput>
  }

  export type UsuarioUpdateOneRequiredWithoutUsuariosEnCopiaNestedInput = {
    create?: XOR<UsuarioCreateWithoutUsuariosEnCopiaInput, UsuarioUncheckedCreateWithoutUsuariosEnCopiaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutUsuariosEnCopiaInput
    upsert?: UsuarioUpsertWithoutUsuariosEnCopiaInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutUsuariosEnCopiaInput, UsuarioUpdateWithoutUsuariosEnCopiaInput>, UsuarioUncheckedUpdateWithoutUsuariosEnCopiaInput>
  }

  export type UsuarioCreateNestedOneWithoutConfiguracionesInput = {
    create?: XOR<UsuarioCreateWithoutConfiguracionesInput, UsuarioUncheckedCreateWithoutConfiguracionesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutConfiguracionesInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutConfiguracionesNestedInput = {
    create?: XOR<UsuarioCreateWithoutConfiguracionesInput, UsuarioUncheckedCreateWithoutConfiguracionesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutConfiguracionesInput
    upsert?: UsuarioUpsertWithoutConfiguracionesInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutConfiguracionesInput, UsuarioUpdateWithoutConfiguracionesInput>, UsuarioUncheckedUpdateWithoutConfiguracionesInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type UsuarioCreateWithoutDepartamentoInput = {
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    rol: RolCreateNestedOneWithoutUsuariosInput
    ticketsCreados?: TicketCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutDepartamentoInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticketsCreados?: TicketUncheckedCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketUncheckedCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaUncheckedCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutDepartamentoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutDepartamentoInput, UsuarioUncheckedCreateWithoutDepartamentoInput>
  }

  export type UsuarioCreateManyDepartamentoInputEnvelope = {
    data: UsuarioCreateManyDepartamentoInput | UsuarioCreateManyDepartamentoInput[]
    skipDuplicates?: boolean
  }

  export type TicketCreateWithoutDepartamentoInput = {
    numeroTicket: string
    asunto: string
    descripcion: string
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    solicitante: UsuarioCreateNestedOneWithoutTicketsCreadosInput
    asignado?: UsuarioCreateNestedOneWithoutTicketsAsignadosInput
    prioridad: PrioridadCreateNestedOneWithoutTicketsInput
    estado: EstadoTicketCreateNestedOneWithoutTicketsInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateWithoutDepartamentoInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaUncheckedCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutDepartamentoInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutDepartamentoInput, TicketUncheckedCreateWithoutDepartamentoInput>
  }

  export type TicketCreateManyDepartamentoInputEnvelope = {
    data: TicketCreateManyDepartamentoInput | TicketCreateManyDepartamentoInput[]
    skipDuplicates?: boolean
  }

  export type DerivacionTicketCreateWithoutDepartamentoOrigenInput = {
    motivo?: string | null
    createdAt?: Date | string
    ticket: TicketCreateNestedOneWithoutDerivacionesInput
    departamentoDestino: DepartamentoCreateNestedOneWithoutDerivacionesDestinoInput
    usuario: UsuarioCreateNestedOneWithoutDerivacionesInput
  }

  export type DerivacionTicketUncheckedCreateWithoutDepartamentoOrigenInput = {
    id?: number
    ticketId: number
    departamentoDestinoId: number
    motivo?: string | null
    derivadoPor: number
    createdAt?: Date | string
  }

  export type DerivacionTicketCreateOrConnectWithoutDepartamentoOrigenInput = {
    where: DerivacionTicketWhereUniqueInput
    create: XOR<DerivacionTicketCreateWithoutDepartamentoOrigenInput, DerivacionTicketUncheckedCreateWithoutDepartamentoOrigenInput>
  }

  export type DerivacionTicketCreateManyDepartamentoOrigenInputEnvelope = {
    data: DerivacionTicketCreateManyDepartamentoOrigenInput | DerivacionTicketCreateManyDepartamentoOrigenInput[]
    skipDuplicates?: boolean
  }

  export type DerivacionTicketCreateWithoutDepartamentoDestinoInput = {
    motivo?: string | null
    createdAt?: Date | string
    ticket: TicketCreateNestedOneWithoutDerivacionesInput
    departamentoOrigen: DepartamentoCreateNestedOneWithoutDerivacionesOrigenInput
    usuario: UsuarioCreateNestedOneWithoutDerivacionesInput
  }

  export type DerivacionTicketUncheckedCreateWithoutDepartamentoDestinoInput = {
    id?: number
    ticketId: number
    departamentoOrigenId: number
    motivo?: string | null
    derivadoPor: number
    createdAt?: Date | string
  }

  export type DerivacionTicketCreateOrConnectWithoutDepartamentoDestinoInput = {
    where: DerivacionTicketWhereUniqueInput
    create: XOR<DerivacionTicketCreateWithoutDepartamentoDestinoInput, DerivacionTicketUncheckedCreateWithoutDepartamentoDestinoInput>
  }

  export type DerivacionTicketCreateManyDepartamentoDestinoInputEnvelope = {
    data: DerivacionTicketCreateManyDepartamentoDestinoInput | DerivacionTicketCreateManyDepartamentoDestinoInput[]
    skipDuplicates?: boolean
  }

  export type SlaPrioridadCreateWithoutDepartamentoInput = {
    tiempoRespuestaHoras: number
    tiempoResolucionHoras: number
    createdAt?: Date | string
    prioridad: PrioridadCreateNestedOneWithoutSlasInput
  }

  export type SlaPrioridadUncheckedCreateWithoutDepartamentoInput = {
    prioridadId: number
    tiempoRespuestaHoras: number
    tiempoResolucionHoras: number
    createdAt?: Date | string
  }

  export type SlaPrioridadCreateOrConnectWithoutDepartamentoInput = {
    where: SlaPrioridadWhereUniqueInput
    create: XOR<SlaPrioridadCreateWithoutDepartamentoInput, SlaPrioridadUncheckedCreateWithoutDepartamentoInput>
  }

  export type SlaPrioridadCreateManyDepartamentoInputEnvelope = {
    data: SlaPrioridadCreateManyDepartamentoInput | SlaPrioridadCreateManyDepartamentoInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithWhereUniqueWithoutDepartamentoInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutDepartamentoInput, UsuarioUncheckedUpdateWithoutDepartamentoInput>
    create: XOR<UsuarioCreateWithoutDepartamentoInput, UsuarioUncheckedCreateWithoutDepartamentoInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutDepartamentoInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutDepartamentoInput, UsuarioUncheckedUpdateWithoutDepartamentoInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutDepartamentoInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutDepartamentoInput>
  }

  export type UsuarioScalarWhereInput = {
    AND?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    OR?: UsuarioScalarWhereInput[]
    NOT?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    id?: IntFilter<"Usuario"> | number
    primerNombre?: StringFilter<"Usuario"> | string
    segundoNombre?: StringNullableFilter<"Usuario"> | string | null
    primerApellido?: StringFilter<"Usuario"> | string
    segundoApellido?: StringFilter<"Usuario"> | string
    correo?: StringFilter<"Usuario"> | string
    hashContrasena?: StringFilter<"Usuario"> | string
    rolId?: IntFilter<"Usuario"> | number
    departamentoId?: IntFilter<"Usuario"> | number
    esInterno?: BoolFilter<"Usuario"> | boolean
    ultimoAcceso?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    createdAt?: DateTimeFilter<"Usuario"> | Date | string
    updatedAt?: DateTimeNullableFilter<"Usuario"> | Date | string | null
  }

  export type TicketUpsertWithWhereUniqueWithoutDepartamentoInput = {
    where: TicketWhereUniqueInput
    update: XOR<TicketUpdateWithoutDepartamentoInput, TicketUncheckedUpdateWithoutDepartamentoInput>
    create: XOR<TicketCreateWithoutDepartamentoInput, TicketUncheckedCreateWithoutDepartamentoInput>
  }

  export type TicketUpdateWithWhereUniqueWithoutDepartamentoInput = {
    where: TicketWhereUniqueInput
    data: XOR<TicketUpdateWithoutDepartamentoInput, TicketUncheckedUpdateWithoutDepartamentoInput>
  }

  export type TicketUpdateManyWithWhereWithoutDepartamentoInput = {
    where: TicketScalarWhereInput
    data: XOR<TicketUpdateManyMutationInput, TicketUncheckedUpdateManyWithoutDepartamentoInput>
  }

  export type TicketScalarWhereInput = {
    AND?: TicketScalarWhereInput | TicketScalarWhereInput[]
    OR?: TicketScalarWhereInput[]
    NOT?: TicketScalarWhereInput | TicketScalarWhereInput[]
    id?: IntFilter<"Ticket"> | number
    numeroTicket?: StringFilter<"Ticket"> | string
    asunto?: StringFilter<"Ticket"> | string
    descripcion?: StringFilter<"Ticket"> | string
    solicitanteId?: IntFilter<"Ticket"> | number
    asignadoA?: IntNullableFilter<"Ticket"> | number | null
    departamentoId?: IntFilter<"Ticket"> | number
    prioridadId?: IntFilter<"Ticket"> | number
    estadoId?: IntFilter<"Ticket"> | number
    fechaVencimiento?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    fechaResolucion?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    fechaCierre?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    createdAt?: DateTimeFilter<"Ticket"> | Date | string
    updatedAt?: DateTimeNullableFilter<"Ticket"> | Date | string | null
  }

  export type DerivacionTicketUpsertWithWhereUniqueWithoutDepartamentoOrigenInput = {
    where: DerivacionTicketWhereUniqueInput
    update: XOR<DerivacionTicketUpdateWithoutDepartamentoOrigenInput, DerivacionTicketUncheckedUpdateWithoutDepartamentoOrigenInput>
    create: XOR<DerivacionTicketCreateWithoutDepartamentoOrigenInput, DerivacionTicketUncheckedCreateWithoutDepartamentoOrigenInput>
  }

  export type DerivacionTicketUpdateWithWhereUniqueWithoutDepartamentoOrigenInput = {
    where: DerivacionTicketWhereUniqueInput
    data: XOR<DerivacionTicketUpdateWithoutDepartamentoOrigenInput, DerivacionTicketUncheckedUpdateWithoutDepartamentoOrigenInput>
  }

  export type DerivacionTicketUpdateManyWithWhereWithoutDepartamentoOrigenInput = {
    where: DerivacionTicketScalarWhereInput
    data: XOR<DerivacionTicketUpdateManyMutationInput, DerivacionTicketUncheckedUpdateManyWithoutDepartamentoOrigenInput>
  }

  export type DerivacionTicketScalarWhereInput = {
    AND?: DerivacionTicketScalarWhereInput | DerivacionTicketScalarWhereInput[]
    OR?: DerivacionTicketScalarWhereInput[]
    NOT?: DerivacionTicketScalarWhereInput | DerivacionTicketScalarWhereInput[]
    id?: IntFilter<"DerivacionTicket"> | number
    ticketId?: IntFilter<"DerivacionTicket"> | number
    departamentoOrigenId?: IntFilter<"DerivacionTicket"> | number
    departamentoDestinoId?: IntFilter<"DerivacionTicket"> | number
    motivo?: StringNullableFilter<"DerivacionTicket"> | string | null
    derivadoPor?: IntFilter<"DerivacionTicket"> | number
    createdAt?: DateTimeFilter<"DerivacionTicket"> | Date | string
  }

  export type DerivacionTicketUpsertWithWhereUniqueWithoutDepartamentoDestinoInput = {
    where: DerivacionTicketWhereUniqueInput
    update: XOR<DerivacionTicketUpdateWithoutDepartamentoDestinoInput, DerivacionTicketUncheckedUpdateWithoutDepartamentoDestinoInput>
    create: XOR<DerivacionTicketCreateWithoutDepartamentoDestinoInput, DerivacionTicketUncheckedCreateWithoutDepartamentoDestinoInput>
  }

  export type DerivacionTicketUpdateWithWhereUniqueWithoutDepartamentoDestinoInput = {
    where: DerivacionTicketWhereUniqueInput
    data: XOR<DerivacionTicketUpdateWithoutDepartamentoDestinoInput, DerivacionTicketUncheckedUpdateWithoutDepartamentoDestinoInput>
  }

  export type DerivacionTicketUpdateManyWithWhereWithoutDepartamentoDestinoInput = {
    where: DerivacionTicketScalarWhereInput
    data: XOR<DerivacionTicketUpdateManyMutationInput, DerivacionTicketUncheckedUpdateManyWithoutDepartamentoDestinoInput>
  }

  export type SlaPrioridadUpsertWithWhereUniqueWithoutDepartamentoInput = {
    where: SlaPrioridadWhereUniqueInput
    update: XOR<SlaPrioridadUpdateWithoutDepartamentoInput, SlaPrioridadUncheckedUpdateWithoutDepartamentoInput>
    create: XOR<SlaPrioridadCreateWithoutDepartamentoInput, SlaPrioridadUncheckedCreateWithoutDepartamentoInput>
  }

  export type SlaPrioridadUpdateWithWhereUniqueWithoutDepartamentoInput = {
    where: SlaPrioridadWhereUniqueInput
    data: XOR<SlaPrioridadUpdateWithoutDepartamentoInput, SlaPrioridadUncheckedUpdateWithoutDepartamentoInput>
  }

  export type SlaPrioridadUpdateManyWithWhereWithoutDepartamentoInput = {
    where: SlaPrioridadScalarWhereInput
    data: XOR<SlaPrioridadUpdateManyMutationInput, SlaPrioridadUncheckedUpdateManyWithoutDepartamentoInput>
  }

  export type SlaPrioridadScalarWhereInput = {
    AND?: SlaPrioridadScalarWhereInput | SlaPrioridadScalarWhereInput[]
    OR?: SlaPrioridadScalarWhereInput[]
    NOT?: SlaPrioridadScalarWhereInput | SlaPrioridadScalarWhereInput[]
    prioridadId?: IntFilter<"SlaPrioridad"> | number
    departamentoId?: IntFilter<"SlaPrioridad"> | number
    tiempoRespuestaHoras?: IntFilter<"SlaPrioridad"> | number
    tiempoResolucionHoras?: IntFilter<"SlaPrioridad"> | number
    createdAt?: DateTimeFilter<"SlaPrioridad"> | Date | string
  }

  export type UsuarioCreateWithoutRolInput = {
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    departamento: DepartamentoCreateNestedOneWithoutUsuariosInput
    ticketsCreados?: TicketCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutRolInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticketsCreados?: TicketUncheckedCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketUncheckedCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaUncheckedCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutRolInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput>
  }

  export type UsuarioCreateManyRolInputEnvelope = {
    data: UsuarioCreateManyRolInput | UsuarioCreateManyRolInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithWhereUniqueWithoutRolInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutRolInput, UsuarioUncheckedUpdateWithoutRolInput>
    create: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutRolInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutRolInput, UsuarioUncheckedUpdateWithoutRolInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutRolInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutRolInput>
  }

  export type RolCreateWithoutUsuariosInput = {
    nombre: string
    permisos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type RolUncheckedCreateWithoutUsuariosInput = {
    id?: number
    nombre: string
    permisos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type RolCreateOrConnectWithoutUsuariosInput = {
    where: RolWhereUniqueInput
    create: XOR<RolCreateWithoutUsuariosInput, RolUncheckedCreateWithoutUsuariosInput>
  }

  export type DepartamentoCreateWithoutUsuariosInput = {
    nombre: string
    createdAt?: Date | string
    tickets?: TicketCreateNestedManyWithoutDepartamentoInput
    derivacionesOrigen?: DerivacionTicketCreateNestedManyWithoutDepartamentoOrigenInput
    derivacionesDestino?: DerivacionTicketCreateNestedManyWithoutDepartamentoDestinoInput
    slaPrioridades?: SlaPrioridadCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUncheckedCreateWithoutUsuariosInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    tickets?: TicketUncheckedCreateNestedManyWithoutDepartamentoInput
    derivacionesOrigen?: DerivacionTicketUncheckedCreateNestedManyWithoutDepartamentoOrigenInput
    derivacionesDestino?: DerivacionTicketUncheckedCreateNestedManyWithoutDepartamentoDestinoInput
    slaPrioridades?: SlaPrioridadUncheckedCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoCreateOrConnectWithoutUsuariosInput = {
    where: DepartamentoWhereUniqueInput
    create: XOR<DepartamentoCreateWithoutUsuariosInput, DepartamentoUncheckedCreateWithoutUsuariosInput>
  }

  export type TicketCreateWithoutSolicitanteInput = {
    numeroTicket: string
    asunto: string
    descripcion: string
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    asignado?: UsuarioCreateNestedOneWithoutTicketsAsignadosInput
    departamento: DepartamentoCreateNestedOneWithoutTicketsInput
    prioridad: PrioridadCreateNestedOneWithoutTicketsInput
    estado: EstadoTicketCreateNestedOneWithoutTicketsInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateWithoutSolicitanteInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    asignadoA?: number | null
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaUncheckedCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutSolicitanteInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutSolicitanteInput, TicketUncheckedCreateWithoutSolicitanteInput>
  }

  export type TicketCreateManySolicitanteInputEnvelope = {
    data: TicketCreateManySolicitanteInput | TicketCreateManySolicitanteInput[]
    skipDuplicates?: boolean
  }

  export type TicketCreateWithoutAsignadoInput = {
    numeroTicket: string
    asunto: string
    descripcion: string
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    solicitante: UsuarioCreateNestedOneWithoutTicketsCreadosInput
    departamento: DepartamentoCreateNestedOneWithoutTicketsInput
    prioridad: PrioridadCreateNestedOneWithoutTicketsInput
    estado: EstadoTicketCreateNestedOneWithoutTicketsInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateWithoutAsignadoInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaUncheckedCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutAsignadoInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutAsignadoInput, TicketUncheckedCreateWithoutAsignadoInput>
  }

  export type TicketCreateManyAsignadoInputEnvelope = {
    data: TicketCreateManyAsignadoInput | TicketCreateManyAsignadoInput[]
    skipDuplicates?: boolean
  }

  export type ComentarioTicketCreateWithoutUsuarioInput = {
    comentario: string
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticket: TicketCreateNestedOneWithoutComentariosInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutComentarioInput
  }

  export type ComentarioTicketUncheckedCreateWithoutUsuarioInput = {
    id?: number
    ticketId: number
    comentario: string
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutComentarioInput
  }

  export type ComentarioTicketCreateOrConnectWithoutUsuarioInput = {
    where: ComentarioTicketWhereUniqueInput
    create: XOR<ComentarioTicketCreateWithoutUsuarioInput, ComentarioTicketUncheckedCreateWithoutUsuarioInput>
  }

  export type ComentarioTicketCreateManyUsuarioInputEnvelope = {
    data: ComentarioTicketCreateManyUsuarioInput | ComentarioTicketCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type HistorialTicketCreateWithoutUsuarioInput = {
    tipoAccion: string
    campoModificado?: string | null
    valorAnterior?: string | null
    valorNuevo?: string | null
    comentario?: string | null
    createdAt?: Date | string
    ticket: TicketCreateNestedOneWithoutHistorialInput
  }

  export type HistorialTicketUncheckedCreateWithoutUsuarioInput = {
    id?: number
    ticketId: number
    tipoAccion: string
    campoModificado?: string | null
    valorAnterior?: string | null
    valorNuevo?: string | null
    comentario?: string | null
    createdAt?: Date | string
  }

  export type HistorialTicketCreateOrConnectWithoutUsuarioInput = {
    where: HistorialTicketWhereUniqueInput
    create: XOR<HistorialTicketCreateWithoutUsuarioInput, HistorialTicketUncheckedCreateWithoutUsuarioInput>
  }

  export type HistorialTicketCreateManyUsuarioInputEnvelope = {
    data: HistorialTicketCreateManyUsuarioInput | HistorialTicketCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type ArchivoAdjuntoCreateWithoutUsuarioInput = {
    nombreOriginal: string
    nombreAlmacenado: string
    rutaArchivo: string
    tamanoArchivo: number
    tipoMime: string
    createdAt?: Date | string
    ticket: TicketCreateNestedOneWithoutArchivosInput
    comentario?: ComentarioTicketCreateNestedOneWithoutArchivosInput
  }

  export type ArchivoAdjuntoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    ticketId: number
    comentarioId?: number | null
    nombreOriginal: string
    nombreAlmacenado: string
    rutaArchivo: string
    tamanoArchivo: number
    tipoMime: string
    createdAt?: Date | string
  }

  export type ArchivoAdjuntoCreateOrConnectWithoutUsuarioInput = {
    where: ArchivoAdjuntoWhereUniqueInput
    create: XOR<ArchivoAdjuntoCreateWithoutUsuarioInput, ArchivoAdjuntoUncheckedCreateWithoutUsuarioInput>
  }

  export type ArchivoAdjuntoCreateManyUsuarioInputEnvelope = {
    data: ArchivoAdjuntoCreateManyUsuarioInput | ArchivoAdjuntoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type DerivacionTicketCreateWithoutUsuarioInput = {
    motivo?: string | null
    createdAt?: Date | string
    ticket: TicketCreateNestedOneWithoutDerivacionesInput
    departamentoOrigen: DepartamentoCreateNestedOneWithoutDerivacionesOrigenInput
    departamentoDestino: DepartamentoCreateNestedOneWithoutDerivacionesDestinoInput
  }

  export type DerivacionTicketUncheckedCreateWithoutUsuarioInput = {
    id?: number
    ticketId: number
    departamentoOrigenId: number
    departamentoDestinoId: number
    motivo?: string | null
    createdAt?: Date | string
  }

  export type DerivacionTicketCreateOrConnectWithoutUsuarioInput = {
    where: DerivacionTicketWhereUniqueInput
    create: XOR<DerivacionTicketCreateWithoutUsuarioInput, DerivacionTicketUncheckedCreateWithoutUsuarioInput>
  }

  export type DerivacionTicketCreateManyUsuarioInputEnvelope = {
    data: DerivacionTicketCreateManyUsuarioInput | DerivacionTicketCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type EncuestaCreateWithoutUsuarioInput = {
    calificacion?: number | null
    comentario?: string | null
    fechaEnvio?: Date | string
    fechaRespuesta?: Date | string | null
    ticket: TicketCreateNestedOneWithoutEncuestaInput
  }

  export type EncuestaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    ticketId: number
    calificacion?: number | null
    comentario?: string | null
    fechaEnvio?: Date | string
    fechaRespuesta?: Date | string | null
  }

  export type EncuestaCreateOrConnectWithoutUsuarioInput = {
    where: EncuestaWhereUniqueInput
    create: XOR<EncuestaCreateWithoutUsuarioInput, EncuestaUncheckedCreateWithoutUsuarioInput>
  }

  export type EncuestaCreateManyUsuarioInputEnvelope = {
    data: EncuestaCreateManyUsuarioInput | EncuestaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type NotificacionCreateWithoutUsuarioInput = {
    tipo: string
    titulo: string
    mensaje: string
    leido?: boolean
    correoEnviado?: boolean
    fechaEnvioCorreo?: Date | string | null
    createdAt?: Date | string
    ticket?: TicketCreateNestedOneWithoutNotificacionesInput
  }

  export type NotificacionUncheckedCreateWithoutUsuarioInput = {
    id?: number
    ticketId?: number | null
    tipo: string
    titulo: string
    mensaje: string
    leido?: boolean
    correoEnviado?: boolean
    fechaEnvioCorreo?: Date | string | null
    createdAt?: Date | string
  }

  export type NotificacionCreateOrConnectWithoutUsuarioInput = {
    where: NotificacionWhereUniqueInput
    create: XOR<NotificacionCreateWithoutUsuarioInput, NotificacionUncheckedCreateWithoutUsuarioInput>
  }

  export type NotificacionCreateManyUsuarioInputEnvelope = {
    data: NotificacionCreateManyUsuarioInput | NotificacionCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioEnCopiaCreateWithoutUsuarioInput = {
    agregadoPor: number
    createdAt?: Date | string
    ticket: TicketCreateNestedOneWithoutUsuariosEnCopiaInput
  }

  export type UsuarioEnCopiaUncheckedCreateWithoutUsuarioInput = {
    ticketId: number
    agregadoPor: number
    createdAt?: Date | string
  }

  export type UsuarioEnCopiaCreateOrConnectWithoutUsuarioInput = {
    where: UsuarioEnCopiaWhereUniqueInput
    create: XOR<UsuarioEnCopiaCreateWithoutUsuarioInput, UsuarioEnCopiaUncheckedCreateWithoutUsuarioInput>
  }

  export type UsuarioEnCopiaCreateManyUsuarioInputEnvelope = {
    data: UsuarioEnCopiaCreateManyUsuarioInput | UsuarioEnCopiaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type ConfiguracionSistemaCreateWithoutUsuarioInput = {
    claveConfiguracion: string
    valorConfiguracion: string
    tipoDato: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type ConfiguracionSistemaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    claveConfiguracion: string
    valorConfiguracion: string
    tipoDato: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type ConfiguracionSistemaCreateOrConnectWithoutUsuarioInput = {
    where: ConfiguracionSistemaWhereUniqueInput
    create: XOR<ConfiguracionSistemaCreateWithoutUsuarioInput, ConfiguracionSistemaUncheckedCreateWithoutUsuarioInput>
  }

  export type ConfiguracionSistemaCreateManyUsuarioInputEnvelope = {
    data: ConfiguracionSistemaCreateManyUsuarioInput | ConfiguracionSistemaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type RolUpsertWithoutUsuariosInput = {
    update: XOR<RolUpdateWithoutUsuariosInput, RolUncheckedUpdateWithoutUsuariosInput>
    create: XOR<RolCreateWithoutUsuariosInput, RolUncheckedCreateWithoutUsuariosInput>
    where?: RolWhereInput
  }

  export type RolUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: RolWhereInput
    data: XOR<RolUpdateWithoutUsuariosInput, RolUncheckedUpdateWithoutUsuariosInput>
  }

  export type RolUpdateWithoutUsuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    permisos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    permisos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepartamentoUpsertWithoutUsuariosInput = {
    update: XOR<DepartamentoUpdateWithoutUsuariosInput, DepartamentoUncheckedUpdateWithoutUsuariosInput>
    create: XOR<DepartamentoCreateWithoutUsuariosInput, DepartamentoUncheckedCreateWithoutUsuariosInput>
    where?: DepartamentoWhereInput
  }

  export type DepartamentoUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: DepartamentoWhereInput
    data: XOR<DepartamentoUpdateWithoutUsuariosInput, DepartamentoUncheckedUpdateWithoutUsuariosInput>
  }

  export type DepartamentoUpdateWithoutUsuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tickets?: TicketUpdateManyWithoutDepartamentoNestedInput
    derivacionesOrigen?: DerivacionTicketUpdateManyWithoutDepartamentoOrigenNestedInput
    derivacionesDestino?: DerivacionTicketUpdateManyWithoutDepartamentoDestinoNestedInput
    slaPrioridades?: SlaPrioridadUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tickets?: TicketUncheckedUpdateManyWithoutDepartamentoNestedInput
    derivacionesOrigen?: DerivacionTicketUncheckedUpdateManyWithoutDepartamentoOrigenNestedInput
    derivacionesDestino?: DerivacionTicketUncheckedUpdateManyWithoutDepartamentoDestinoNestedInput
    slaPrioridades?: SlaPrioridadUncheckedUpdateManyWithoutDepartamentoNestedInput
  }

  export type TicketUpsertWithWhereUniqueWithoutSolicitanteInput = {
    where: TicketWhereUniqueInput
    update: XOR<TicketUpdateWithoutSolicitanteInput, TicketUncheckedUpdateWithoutSolicitanteInput>
    create: XOR<TicketCreateWithoutSolicitanteInput, TicketUncheckedCreateWithoutSolicitanteInput>
  }

  export type TicketUpdateWithWhereUniqueWithoutSolicitanteInput = {
    where: TicketWhereUniqueInput
    data: XOR<TicketUpdateWithoutSolicitanteInput, TicketUncheckedUpdateWithoutSolicitanteInput>
  }

  export type TicketUpdateManyWithWhereWithoutSolicitanteInput = {
    where: TicketScalarWhereInput
    data: XOR<TicketUpdateManyMutationInput, TicketUncheckedUpdateManyWithoutSolicitanteInput>
  }

  export type TicketUpsertWithWhereUniqueWithoutAsignadoInput = {
    where: TicketWhereUniqueInput
    update: XOR<TicketUpdateWithoutAsignadoInput, TicketUncheckedUpdateWithoutAsignadoInput>
    create: XOR<TicketCreateWithoutAsignadoInput, TicketUncheckedCreateWithoutAsignadoInput>
  }

  export type TicketUpdateWithWhereUniqueWithoutAsignadoInput = {
    where: TicketWhereUniqueInput
    data: XOR<TicketUpdateWithoutAsignadoInput, TicketUncheckedUpdateWithoutAsignadoInput>
  }

  export type TicketUpdateManyWithWhereWithoutAsignadoInput = {
    where: TicketScalarWhereInput
    data: XOR<TicketUpdateManyMutationInput, TicketUncheckedUpdateManyWithoutAsignadoInput>
  }

  export type ComentarioTicketUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: ComentarioTicketWhereUniqueInput
    update: XOR<ComentarioTicketUpdateWithoutUsuarioInput, ComentarioTicketUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ComentarioTicketCreateWithoutUsuarioInput, ComentarioTicketUncheckedCreateWithoutUsuarioInput>
  }

  export type ComentarioTicketUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: ComentarioTicketWhereUniqueInput
    data: XOR<ComentarioTicketUpdateWithoutUsuarioInput, ComentarioTicketUncheckedUpdateWithoutUsuarioInput>
  }

  export type ComentarioTicketUpdateManyWithWhereWithoutUsuarioInput = {
    where: ComentarioTicketScalarWhereInput
    data: XOR<ComentarioTicketUpdateManyMutationInput, ComentarioTicketUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type ComentarioTicketScalarWhereInput = {
    AND?: ComentarioTicketScalarWhereInput | ComentarioTicketScalarWhereInput[]
    OR?: ComentarioTicketScalarWhereInput[]
    NOT?: ComentarioTicketScalarWhereInput | ComentarioTicketScalarWhereInput[]
    id?: IntFilter<"ComentarioTicket"> | number
    ticketId?: IntFilter<"ComentarioTicket"> | number
    usuarioId?: IntFilter<"ComentarioTicket"> | number
    comentario?: StringFilter<"ComentarioTicket"> | string
    esInterno?: BoolFilter<"ComentarioTicket"> | boolean
    esSolucion?: BoolFilter<"ComentarioTicket"> | boolean
    createdAt?: DateTimeFilter<"ComentarioTicket"> | Date | string
    updatedAt?: DateTimeNullableFilter<"ComentarioTicket"> | Date | string | null
  }

  export type HistorialTicketUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: HistorialTicketWhereUniqueInput
    update: XOR<HistorialTicketUpdateWithoutUsuarioInput, HistorialTicketUncheckedUpdateWithoutUsuarioInput>
    create: XOR<HistorialTicketCreateWithoutUsuarioInput, HistorialTicketUncheckedCreateWithoutUsuarioInput>
  }

  export type HistorialTicketUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: HistorialTicketWhereUniqueInput
    data: XOR<HistorialTicketUpdateWithoutUsuarioInput, HistorialTicketUncheckedUpdateWithoutUsuarioInput>
  }

  export type HistorialTicketUpdateManyWithWhereWithoutUsuarioInput = {
    where: HistorialTicketScalarWhereInput
    data: XOR<HistorialTicketUpdateManyMutationInput, HistorialTicketUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type HistorialTicketScalarWhereInput = {
    AND?: HistorialTicketScalarWhereInput | HistorialTicketScalarWhereInput[]
    OR?: HistorialTicketScalarWhereInput[]
    NOT?: HistorialTicketScalarWhereInput | HistorialTicketScalarWhereInput[]
    id?: IntFilter<"HistorialTicket"> | number
    ticketId?: IntFilter<"HistorialTicket"> | number
    usuarioId?: IntFilter<"HistorialTicket"> | number
    tipoAccion?: StringFilter<"HistorialTicket"> | string
    campoModificado?: StringNullableFilter<"HistorialTicket"> | string | null
    valorAnterior?: StringNullableFilter<"HistorialTicket"> | string | null
    valorNuevo?: StringNullableFilter<"HistorialTicket"> | string | null
    comentario?: StringNullableFilter<"HistorialTicket"> | string | null
    createdAt?: DateTimeFilter<"HistorialTicket"> | Date | string
  }

  export type ArchivoAdjuntoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: ArchivoAdjuntoWhereUniqueInput
    update: XOR<ArchivoAdjuntoUpdateWithoutUsuarioInput, ArchivoAdjuntoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ArchivoAdjuntoCreateWithoutUsuarioInput, ArchivoAdjuntoUncheckedCreateWithoutUsuarioInput>
  }

  export type ArchivoAdjuntoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: ArchivoAdjuntoWhereUniqueInput
    data: XOR<ArchivoAdjuntoUpdateWithoutUsuarioInput, ArchivoAdjuntoUncheckedUpdateWithoutUsuarioInput>
  }

  export type ArchivoAdjuntoUpdateManyWithWhereWithoutUsuarioInput = {
    where: ArchivoAdjuntoScalarWhereInput
    data: XOR<ArchivoAdjuntoUpdateManyMutationInput, ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type ArchivoAdjuntoScalarWhereInput = {
    AND?: ArchivoAdjuntoScalarWhereInput | ArchivoAdjuntoScalarWhereInput[]
    OR?: ArchivoAdjuntoScalarWhereInput[]
    NOT?: ArchivoAdjuntoScalarWhereInput | ArchivoAdjuntoScalarWhereInput[]
    id?: IntFilter<"ArchivoAdjunto"> | number
    ticketId?: IntFilter<"ArchivoAdjunto"> | number
    comentarioId?: IntNullableFilter<"ArchivoAdjunto"> | number | null
    nombreOriginal?: StringFilter<"ArchivoAdjunto"> | string
    nombreAlmacenado?: StringFilter<"ArchivoAdjunto"> | string
    rutaArchivo?: StringFilter<"ArchivoAdjunto"> | string
    tamanoArchivo?: IntFilter<"ArchivoAdjunto"> | number
    tipoMime?: StringFilter<"ArchivoAdjunto"> | string
    subidoPor?: IntFilter<"ArchivoAdjunto"> | number
    createdAt?: DateTimeFilter<"ArchivoAdjunto"> | Date | string
  }

  export type DerivacionTicketUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: DerivacionTicketWhereUniqueInput
    update: XOR<DerivacionTicketUpdateWithoutUsuarioInput, DerivacionTicketUncheckedUpdateWithoutUsuarioInput>
    create: XOR<DerivacionTicketCreateWithoutUsuarioInput, DerivacionTicketUncheckedCreateWithoutUsuarioInput>
  }

  export type DerivacionTicketUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: DerivacionTicketWhereUniqueInput
    data: XOR<DerivacionTicketUpdateWithoutUsuarioInput, DerivacionTicketUncheckedUpdateWithoutUsuarioInput>
  }

  export type DerivacionTicketUpdateManyWithWhereWithoutUsuarioInput = {
    where: DerivacionTicketScalarWhereInput
    data: XOR<DerivacionTicketUpdateManyMutationInput, DerivacionTicketUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type EncuestaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: EncuestaWhereUniqueInput
    update: XOR<EncuestaUpdateWithoutUsuarioInput, EncuestaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<EncuestaCreateWithoutUsuarioInput, EncuestaUncheckedCreateWithoutUsuarioInput>
  }

  export type EncuestaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: EncuestaWhereUniqueInput
    data: XOR<EncuestaUpdateWithoutUsuarioInput, EncuestaUncheckedUpdateWithoutUsuarioInput>
  }

  export type EncuestaUpdateManyWithWhereWithoutUsuarioInput = {
    where: EncuestaScalarWhereInput
    data: XOR<EncuestaUpdateManyMutationInput, EncuestaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type EncuestaScalarWhereInput = {
    AND?: EncuestaScalarWhereInput | EncuestaScalarWhereInput[]
    OR?: EncuestaScalarWhereInput[]
    NOT?: EncuestaScalarWhereInput | EncuestaScalarWhereInput[]
    id?: IntFilter<"Encuesta"> | number
    ticketId?: IntFilter<"Encuesta"> | number
    calificacion?: IntNullableFilter<"Encuesta"> | number | null
    comentario?: StringNullableFilter<"Encuesta"> | string | null
    enviadoPor?: IntNullableFilter<"Encuesta"> | number | null
    fechaEnvio?: DateTimeFilter<"Encuesta"> | Date | string
    fechaRespuesta?: DateTimeNullableFilter<"Encuesta"> | Date | string | null
  }

  export type NotificacionUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: NotificacionWhereUniqueInput
    update: XOR<NotificacionUpdateWithoutUsuarioInput, NotificacionUncheckedUpdateWithoutUsuarioInput>
    create: XOR<NotificacionCreateWithoutUsuarioInput, NotificacionUncheckedCreateWithoutUsuarioInput>
  }

  export type NotificacionUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: NotificacionWhereUniqueInput
    data: XOR<NotificacionUpdateWithoutUsuarioInput, NotificacionUncheckedUpdateWithoutUsuarioInput>
  }

  export type NotificacionUpdateManyWithWhereWithoutUsuarioInput = {
    where: NotificacionScalarWhereInput
    data: XOR<NotificacionUpdateManyMutationInput, NotificacionUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type NotificacionScalarWhereInput = {
    AND?: NotificacionScalarWhereInput | NotificacionScalarWhereInput[]
    OR?: NotificacionScalarWhereInput[]
    NOT?: NotificacionScalarWhereInput | NotificacionScalarWhereInput[]
    id?: IntFilter<"Notificacion"> | number
    usuarioId?: IntFilter<"Notificacion"> | number
    ticketId?: IntNullableFilter<"Notificacion"> | number | null
    tipo?: StringFilter<"Notificacion"> | string
    titulo?: StringFilter<"Notificacion"> | string
    mensaje?: StringFilter<"Notificacion"> | string
    leido?: BoolFilter<"Notificacion"> | boolean
    correoEnviado?: BoolFilter<"Notificacion"> | boolean
    fechaEnvioCorreo?: DateTimeNullableFilter<"Notificacion"> | Date | string | null
    createdAt?: DateTimeFilter<"Notificacion"> | Date | string
  }

  export type UsuarioEnCopiaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: UsuarioEnCopiaWhereUniqueInput
    update: XOR<UsuarioEnCopiaUpdateWithoutUsuarioInput, UsuarioEnCopiaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<UsuarioEnCopiaCreateWithoutUsuarioInput, UsuarioEnCopiaUncheckedCreateWithoutUsuarioInput>
  }

  export type UsuarioEnCopiaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: UsuarioEnCopiaWhereUniqueInput
    data: XOR<UsuarioEnCopiaUpdateWithoutUsuarioInput, UsuarioEnCopiaUncheckedUpdateWithoutUsuarioInput>
  }

  export type UsuarioEnCopiaUpdateManyWithWhereWithoutUsuarioInput = {
    where: UsuarioEnCopiaScalarWhereInput
    data: XOR<UsuarioEnCopiaUpdateManyMutationInput, UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type UsuarioEnCopiaScalarWhereInput = {
    AND?: UsuarioEnCopiaScalarWhereInput | UsuarioEnCopiaScalarWhereInput[]
    OR?: UsuarioEnCopiaScalarWhereInput[]
    NOT?: UsuarioEnCopiaScalarWhereInput | UsuarioEnCopiaScalarWhereInput[]
    ticketId?: IntFilter<"UsuarioEnCopia"> | number
    usuarioId?: IntFilter<"UsuarioEnCopia"> | number
    agregadoPor?: IntFilter<"UsuarioEnCopia"> | number
    createdAt?: DateTimeFilter<"UsuarioEnCopia"> | Date | string
  }

  export type ConfiguracionSistemaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: ConfiguracionSistemaWhereUniqueInput
    update: XOR<ConfiguracionSistemaUpdateWithoutUsuarioInput, ConfiguracionSistemaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ConfiguracionSistemaCreateWithoutUsuarioInput, ConfiguracionSistemaUncheckedCreateWithoutUsuarioInput>
  }

  export type ConfiguracionSistemaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: ConfiguracionSistemaWhereUniqueInput
    data: XOR<ConfiguracionSistemaUpdateWithoutUsuarioInput, ConfiguracionSistemaUncheckedUpdateWithoutUsuarioInput>
  }

  export type ConfiguracionSistemaUpdateManyWithWhereWithoutUsuarioInput = {
    where: ConfiguracionSistemaScalarWhereInput
    data: XOR<ConfiguracionSistemaUpdateManyMutationInput, ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type ConfiguracionSistemaScalarWhereInput = {
    AND?: ConfiguracionSistemaScalarWhereInput | ConfiguracionSistemaScalarWhereInput[]
    OR?: ConfiguracionSistemaScalarWhereInput[]
    NOT?: ConfiguracionSistemaScalarWhereInput | ConfiguracionSistemaScalarWhereInput[]
    id?: IntFilter<"ConfiguracionSistema"> | number
    claveConfiguracion?: StringFilter<"ConfiguracionSistema"> | string
    valorConfiguracion?: StringFilter<"ConfiguracionSistema"> | string
    tipoDato?: StringFilter<"ConfiguracionSistema"> | string
    actualizadoPor?: IntFilter<"ConfiguracionSistema"> | number
    createdAt?: DateTimeFilter<"ConfiguracionSistema"> | Date | string
    updatedAt?: DateTimeNullableFilter<"ConfiguracionSistema"> | Date | string | null
  }

  export type TicketCreateWithoutEstadoInput = {
    numeroTicket: string
    asunto: string
    descripcion: string
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    solicitante: UsuarioCreateNestedOneWithoutTicketsCreadosInput
    asignado?: UsuarioCreateNestedOneWithoutTicketsAsignadosInput
    departamento: DepartamentoCreateNestedOneWithoutTicketsInput
    prioridad: PrioridadCreateNestedOneWithoutTicketsInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateWithoutEstadoInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    departamentoId: number
    prioridadId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaUncheckedCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutEstadoInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutEstadoInput, TicketUncheckedCreateWithoutEstadoInput>
  }

  export type TicketCreateManyEstadoInputEnvelope = {
    data: TicketCreateManyEstadoInput | TicketCreateManyEstadoInput[]
    skipDuplicates?: boolean
  }

  export type TicketUpsertWithWhereUniqueWithoutEstadoInput = {
    where: TicketWhereUniqueInput
    update: XOR<TicketUpdateWithoutEstadoInput, TicketUncheckedUpdateWithoutEstadoInput>
    create: XOR<TicketCreateWithoutEstadoInput, TicketUncheckedCreateWithoutEstadoInput>
  }

  export type TicketUpdateWithWhereUniqueWithoutEstadoInput = {
    where: TicketWhereUniqueInput
    data: XOR<TicketUpdateWithoutEstadoInput, TicketUncheckedUpdateWithoutEstadoInput>
  }

  export type TicketUpdateManyWithWhereWithoutEstadoInput = {
    where: TicketScalarWhereInput
    data: XOR<TicketUpdateManyMutationInput, TicketUncheckedUpdateManyWithoutEstadoInput>
  }

  export type TicketCreateWithoutPrioridadInput = {
    numeroTicket: string
    asunto: string
    descripcion: string
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    solicitante: UsuarioCreateNestedOneWithoutTicketsCreadosInput
    asignado?: UsuarioCreateNestedOneWithoutTicketsAsignadosInput
    departamento: DepartamentoCreateNestedOneWithoutTicketsInput
    estado: EstadoTicketCreateNestedOneWithoutTicketsInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateWithoutPrioridadInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    departamentoId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaUncheckedCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutPrioridadInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutPrioridadInput, TicketUncheckedCreateWithoutPrioridadInput>
  }

  export type TicketCreateManyPrioridadInputEnvelope = {
    data: TicketCreateManyPrioridadInput | TicketCreateManyPrioridadInput[]
    skipDuplicates?: boolean
  }

  export type SlaPrioridadCreateWithoutPrioridadInput = {
    tiempoRespuestaHoras: number
    tiempoResolucionHoras: number
    createdAt?: Date | string
    departamento: DepartamentoCreateNestedOneWithoutSlaPrioridadesInput
  }

  export type SlaPrioridadUncheckedCreateWithoutPrioridadInput = {
    departamentoId: number
    tiempoRespuestaHoras: number
    tiempoResolucionHoras: number
    createdAt?: Date | string
  }

  export type SlaPrioridadCreateOrConnectWithoutPrioridadInput = {
    where: SlaPrioridadWhereUniqueInput
    create: XOR<SlaPrioridadCreateWithoutPrioridadInput, SlaPrioridadUncheckedCreateWithoutPrioridadInput>
  }

  export type SlaPrioridadCreateManyPrioridadInputEnvelope = {
    data: SlaPrioridadCreateManyPrioridadInput | SlaPrioridadCreateManyPrioridadInput[]
    skipDuplicates?: boolean
  }

  export type TicketUpsertWithWhereUniqueWithoutPrioridadInput = {
    where: TicketWhereUniqueInput
    update: XOR<TicketUpdateWithoutPrioridadInput, TicketUncheckedUpdateWithoutPrioridadInput>
    create: XOR<TicketCreateWithoutPrioridadInput, TicketUncheckedCreateWithoutPrioridadInput>
  }

  export type TicketUpdateWithWhereUniqueWithoutPrioridadInput = {
    where: TicketWhereUniqueInput
    data: XOR<TicketUpdateWithoutPrioridadInput, TicketUncheckedUpdateWithoutPrioridadInput>
  }

  export type TicketUpdateManyWithWhereWithoutPrioridadInput = {
    where: TicketScalarWhereInput
    data: XOR<TicketUpdateManyMutationInput, TicketUncheckedUpdateManyWithoutPrioridadInput>
  }

  export type SlaPrioridadUpsertWithWhereUniqueWithoutPrioridadInput = {
    where: SlaPrioridadWhereUniqueInput
    update: XOR<SlaPrioridadUpdateWithoutPrioridadInput, SlaPrioridadUncheckedUpdateWithoutPrioridadInput>
    create: XOR<SlaPrioridadCreateWithoutPrioridadInput, SlaPrioridadUncheckedCreateWithoutPrioridadInput>
  }

  export type SlaPrioridadUpdateWithWhereUniqueWithoutPrioridadInput = {
    where: SlaPrioridadWhereUniqueInput
    data: XOR<SlaPrioridadUpdateWithoutPrioridadInput, SlaPrioridadUncheckedUpdateWithoutPrioridadInput>
  }

  export type SlaPrioridadUpdateManyWithWhereWithoutPrioridadInput = {
    where: SlaPrioridadScalarWhereInput
    data: XOR<SlaPrioridadUpdateManyMutationInput, SlaPrioridadUncheckedUpdateManyWithoutPrioridadInput>
  }

  export type PrioridadCreateWithoutSlasInput = {
    nombre: string
    nivel: number
    createdAt?: Date | string
    tickets?: TicketCreateNestedManyWithoutPrioridadInput
  }

  export type PrioridadUncheckedCreateWithoutSlasInput = {
    id?: number
    nombre: string
    nivel: number
    createdAt?: Date | string
    tickets?: TicketUncheckedCreateNestedManyWithoutPrioridadInput
  }

  export type PrioridadCreateOrConnectWithoutSlasInput = {
    where: PrioridadWhereUniqueInput
    create: XOR<PrioridadCreateWithoutSlasInput, PrioridadUncheckedCreateWithoutSlasInput>
  }

  export type DepartamentoCreateWithoutSlaPrioridadesInput = {
    nombre: string
    createdAt?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutDepartamentoInput
    tickets?: TicketCreateNestedManyWithoutDepartamentoInput
    derivacionesOrigen?: DerivacionTicketCreateNestedManyWithoutDepartamentoOrigenInput
    derivacionesDestino?: DerivacionTicketCreateNestedManyWithoutDepartamentoDestinoInput
  }

  export type DepartamentoUncheckedCreateWithoutSlaPrioridadesInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutDepartamentoInput
    tickets?: TicketUncheckedCreateNestedManyWithoutDepartamentoInput
    derivacionesOrigen?: DerivacionTicketUncheckedCreateNestedManyWithoutDepartamentoOrigenInput
    derivacionesDestino?: DerivacionTicketUncheckedCreateNestedManyWithoutDepartamentoDestinoInput
  }

  export type DepartamentoCreateOrConnectWithoutSlaPrioridadesInput = {
    where: DepartamentoWhereUniqueInput
    create: XOR<DepartamentoCreateWithoutSlaPrioridadesInput, DepartamentoUncheckedCreateWithoutSlaPrioridadesInput>
  }

  export type PrioridadUpsertWithoutSlasInput = {
    update: XOR<PrioridadUpdateWithoutSlasInput, PrioridadUncheckedUpdateWithoutSlasInput>
    create: XOR<PrioridadCreateWithoutSlasInput, PrioridadUncheckedCreateWithoutSlasInput>
    where?: PrioridadWhereInput
  }

  export type PrioridadUpdateToOneWithWhereWithoutSlasInput = {
    where?: PrioridadWhereInput
    data: XOR<PrioridadUpdateWithoutSlasInput, PrioridadUncheckedUpdateWithoutSlasInput>
  }

  export type PrioridadUpdateWithoutSlasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tickets?: TicketUpdateManyWithoutPrioridadNestedInput
  }

  export type PrioridadUncheckedUpdateWithoutSlasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tickets?: TicketUncheckedUpdateManyWithoutPrioridadNestedInput
  }

  export type DepartamentoUpsertWithoutSlaPrioridadesInput = {
    update: XOR<DepartamentoUpdateWithoutSlaPrioridadesInput, DepartamentoUncheckedUpdateWithoutSlaPrioridadesInput>
    create: XOR<DepartamentoCreateWithoutSlaPrioridadesInput, DepartamentoUncheckedCreateWithoutSlaPrioridadesInput>
    where?: DepartamentoWhereInput
  }

  export type DepartamentoUpdateToOneWithWhereWithoutSlaPrioridadesInput = {
    where?: DepartamentoWhereInput
    data: XOR<DepartamentoUpdateWithoutSlaPrioridadesInput, DepartamentoUncheckedUpdateWithoutSlaPrioridadesInput>
  }

  export type DepartamentoUpdateWithoutSlaPrioridadesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutDepartamentoNestedInput
    tickets?: TicketUpdateManyWithoutDepartamentoNestedInput
    derivacionesOrigen?: DerivacionTicketUpdateManyWithoutDepartamentoOrigenNestedInput
    derivacionesDestino?: DerivacionTicketUpdateManyWithoutDepartamentoDestinoNestedInput
  }

  export type DepartamentoUncheckedUpdateWithoutSlaPrioridadesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutDepartamentoNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutDepartamentoNestedInput
    derivacionesOrigen?: DerivacionTicketUncheckedUpdateManyWithoutDepartamentoOrigenNestedInput
    derivacionesDestino?: DerivacionTicketUncheckedUpdateManyWithoutDepartamentoDestinoNestedInput
  }

  export type UsuarioCreateWithoutTicketsCreadosInput = {
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    rol: RolCreateNestedOneWithoutUsuariosInput
    departamento: DepartamentoCreateNestedOneWithoutUsuariosInput
    ticketsAsignados?: TicketCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutTicketsCreadosInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticketsAsignados?: TicketUncheckedCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaUncheckedCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutTicketsCreadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutTicketsCreadosInput, UsuarioUncheckedCreateWithoutTicketsCreadosInput>
  }

  export type UsuarioCreateWithoutTicketsAsignadosInput = {
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    rol: RolCreateNestedOneWithoutUsuariosInput
    departamento: DepartamentoCreateNestedOneWithoutUsuariosInput
    ticketsCreados?: TicketCreateNestedManyWithoutSolicitanteInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutTicketsAsignadosInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticketsCreados?: TicketUncheckedCreateNestedManyWithoutSolicitanteInput
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaUncheckedCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutTicketsAsignadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutTicketsAsignadosInput, UsuarioUncheckedCreateWithoutTicketsAsignadosInput>
  }

  export type DepartamentoCreateWithoutTicketsInput = {
    nombre: string
    createdAt?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutDepartamentoInput
    derivacionesOrigen?: DerivacionTicketCreateNestedManyWithoutDepartamentoOrigenInput
    derivacionesDestino?: DerivacionTicketCreateNestedManyWithoutDepartamentoDestinoInput
    slaPrioridades?: SlaPrioridadCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUncheckedCreateWithoutTicketsInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutDepartamentoInput
    derivacionesOrigen?: DerivacionTicketUncheckedCreateNestedManyWithoutDepartamentoOrigenInput
    derivacionesDestino?: DerivacionTicketUncheckedCreateNestedManyWithoutDepartamentoDestinoInput
    slaPrioridades?: SlaPrioridadUncheckedCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoCreateOrConnectWithoutTicketsInput = {
    where: DepartamentoWhereUniqueInput
    create: XOR<DepartamentoCreateWithoutTicketsInput, DepartamentoUncheckedCreateWithoutTicketsInput>
  }

  export type PrioridadCreateWithoutTicketsInput = {
    nombre: string
    nivel: number
    createdAt?: Date | string
    slas?: SlaPrioridadCreateNestedManyWithoutPrioridadInput
  }

  export type PrioridadUncheckedCreateWithoutTicketsInput = {
    id?: number
    nombre: string
    nivel: number
    createdAt?: Date | string
    slas?: SlaPrioridadUncheckedCreateNestedManyWithoutPrioridadInput
  }

  export type PrioridadCreateOrConnectWithoutTicketsInput = {
    where: PrioridadWhereUniqueInput
    create: XOR<PrioridadCreateWithoutTicketsInput, PrioridadUncheckedCreateWithoutTicketsInput>
  }

  export type EstadoTicketCreateWithoutTicketsInput = {
    nombre: string
    esEstadoFinal?: boolean
    ordenSecuencia: number
    createdAt?: Date | string
  }

  export type EstadoTicketUncheckedCreateWithoutTicketsInput = {
    id?: number
    nombre: string
    esEstadoFinal?: boolean
    ordenSecuencia: number
    createdAt?: Date | string
  }

  export type EstadoTicketCreateOrConnectWithoutTicketsInput = {
    where: EstadoTicketWhereUniqueInput
    create: XOR<EstadoTicketCreateWithoutTicketsInput, EstadoTicketUncheckedCreateWithoutTicketsInput>
  }

  export type ComentarioTicketCreateWithoutTicketInput = {
    comentario: string
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    usuario: UsuarioCreateNestedOneWithoutComentariosInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutComentarioInput
  }

  export type ComentarioTicketUncheckedCreateWithoutTicketInput = {
    id?: number
    usuarioId: number
    comentario: string
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutComentarioInput
  }

  export type ComentarioTicketCreateOrConnectWithoutTicketInput = {
    where: ComentarioTicketWhereUniqueInput
    create: XOR<ComentarioTicketCreateWithoutTicketInput, ComentarioTicketUncheckedCreateWithoutTicketInput>
  }

  export type ComentarioTicketCreateManyTicketInputEnvelope = {
    data: ComentarioTicketCreateManyTicketInput | ComentarioTicketCreateManyTicketInput[]
    skipDuplicates?: boolean
  }

  export type HistorialTicketCreateWithoutTicketInput = {
    tipoAccion: string
    campoModificado?: string | null
    valorAnterior?: string | null
    valorNuevo?: string | null
    comentario?: string | null
    createdAt?: Date | string
    usuario: UsuarioCreateNestedOneWithoutHistorialInput
  }

  export type HistorialTicketUncheckedCreateWithoutTicketInput = {
    id?: number
    usuarioId: number
    tipoAccion: string
    campoModificado?: string | null
    valorAnterior?: string | null
    valorNuevo?: string | null
    comentario?: string | null
    createdAt?: Date | string
  }

  export type HistorialTicketCreateOrConnectWithoutTicketInput = {
    where: HistorialTicketWhereUniqueInput
    create: XOR<HistorialTicketCreateWithoutTicketInput, HistorialTicketUncheckedCreateWithoutTicketInput>
  }

  export type HistorialTicketCreateManyTicketInputEnvelope = {
    data: HistorialTicketCreateManyTicketInput | HistorialTicketCreateManyTicketInput[]
    skipDuplicates?: boolean
  }

  export type ArchivoAdjuntoCreateWithoutTicketInput = {
    nombreOriginal: string
    nombreAlmacenado: string
    rutaArchivo: string
    tamanoArchivo: number
    tipoMime: string
    createdAt?: Date | string
    comentario?: ComentarioTicketCreateNestedOneWithoutArchivosInput
    usuario: UsuarioCreateNestedOneWithoutArchivosSubidosInput
  }

  export type ArchivoAdjuntoUncheckedCreateWithoutTicketInput = {
    id?: number
    comentarioId?: number | null
    nombreOriginal: string
    nombreAlmacenado: string
    rutaArchivo: string
    tamanoArchivo: number
    tipoMime: string
    subidoPor: number
    createdAt?: Date | string
  }

  export type ArchivoAdjuntoCreateOrConnectWithoutTicketInput = {
    where: ArchivoAdjuntoWhereUniqueInput
    create: XOR<ArchivoAdjuntoCreateWithoutTicketInput, ArchivoAdjuntoUncheckedCreateWithoutTicketInput>
  }

  export type ArchivoAdjuntoCreateManyTicketInputEnvelope = {
    data: ArchivoAdjuntoCreateManyTicketInput | ArchivoAdjuntoCreateManyTicketInput[]
    skipDuplicates?: boolean
  }

  export type DerivacionTicketCreateWithoutTicketInput = {
    motivo?: string | null
    createdAt?: Date | string
    departamentoOrigen: DepartamentoCreateNestedOneWithoutDerivacionesOrigenInput
    departamentoDestino: DepartamentoCreateNestedOneWithoutDerivacionesDestinoInput
    usuario: UsuarioCreateNestedOneWithoutDerivacionesInput
  }

  export type DerivacionTicketUncheckedCreateWithoutTicketInput = {
    id?: number
    departamentoOrigenId: number
    departamentoDestinoId: number
    motivo?: string | null
    derivadoPor: number
    createdAt?: Date | string
  }

  export type DerivacionTicketCreateOrConnectWithoutTicketInput = {
    where: DerivacionTicketWhereUniqueInput
    create: XOR<DerivacionTicketCreateWithoutTicketInput, DerivacionTicketUncheckedCreateWithoutTicketInput>
  }

  export type DerivacionTicketCreateManyTicketInputEnvelope = {
    data: DerivacionTicketCreateManyTicketInput | DerivacionTicketCreateManyTicketInput[]
    skipDuplicates?: boolean
  }

  export type EncuestaCreateWithoutTicketInput = {
    calificacion?: number | null
    comentario?: string | null
    fechaEnvio?: Date | string
    fechaRespuesta?: Date | string | null
    usuario?: UsuarioCreateNestedOneWithoutEncuestasInput
  }

  export type EncuestaUncheckedCreateWithoutTicketInput = {
    id?: number
    calificacion?: number | null
    comentario?: string | null
    enviadoPor?: number | null
    fechaEnvio?: Date | string
    fechaRespuesta?: Date | string | null
  }

  export type EncuestaCreateOrConnectWithoutTicketInput = {
    where: EncuestaWhereUniqueInput
    create: XOR<EncuestaCreateWithoutTicketInput, EncuestaUncheckedCreateWithoutTicketInput>
  }

  export type NotificacionCreateWithoutTicketInput = {
    tipo: string
    titulo: string
    mensaje: string
    leido?: boolean
    correoEnviado?: boolean
    fechaEnvioCorreo?: Date | string | null
    createdAt?: Date | string
    usuario: UsuarioCreateNestedOneWithoutNotificacionesInput
  }

  export type NotificacionUncheckedCreateWithoutTicketInput = {
    id?: number
    usuarioId: number
    tipo: string
    titulo: string
    mensaje: string
    leido?: boolean
    correoEnviado?: boolean
    fechaEnvioCorreo?: Date | string | null
    createdAt?: Date | string
  }

  export type NotificacionCreateOrConnectWithoutTicketInput = {
    where: NotificacionWhereUniqueInput
    create: XOR<NotificacionCreateWithoutTicketInput, NotificacionUncheckedCreateWithoutTicketInput>
  }

  export type NotificacionCreateManyTicketInputEnvelope = {
    data: NotificacionCreateManyTicketInput | NotificacionCreateManyTicketInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioEnCopiaCreateWithoutTicketInput = {
    agregadoPor: number
    createdAt?: Date | string
    usuario: UsuarioCreateNestedOneWithoutUsuariosEnCopiaInput
  }

  export type UsuarioEnCopiaUncheckedCreateWithoutTicketInput = {
    usuarioId: number
    agregadoPor: number
    createdAt?: Date | string
  }

  export type UsuarioEnCopiaCreateOrConnectWithoutTicketInput = {
    where: UsuarioEnCopiaWhereUniqueInput
    create: XOR<UsuarioEnCopiaCreateWithoutTicketInput, UsuarioEnCopiaUncheckedCreateWithoutTicketInput>
  }

  export type UsuarioEnCopiaCreateManyTicketInputEnvelope = {
    data: UsuarioEnCopiaCreateManyTicketInput | UsuarioEnCopiaCreateManyTicketInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutTicketsCreadosInput = {
    update: XOR<UsuarioUpdateWithoutTicketsCreadosInput, UsuarioUncheckedUpdateWithoutTicketsCreadosInput>
    create: XOR<UsuarioCreateWithoutTicketsCreadosInput, UsuarioUncheckedCreateWithoutTicketsCreadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutTicketsCreadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutTicketsCreadosInput, UsuarioUncheckedUpdateWithoutTicketsCreadosInput>
  }

  export type UsuarioUpdateWithoutTicketsCreadosInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutUsuariosNestedInput
    ticketsAsignados?: TicketUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutTicketsCreadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketsAsignados?: TicketUncheckedUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUncheckedUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUpsertWithoutTicketsAsignadosInput = {
    update: XOR<UsuarioUpdateWithoutTicketsAsignadosInput, UsuarioUncheckedUpdateWithoutTicketsAsignadosInput>
    create: XOR<UsuarioCreateWithoutTicketsAsignadosInput, UsuarioUncheckedCreateWithoutTicketsAsignadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutTicketsAsignadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutTicketsAsignadosInput, UsuarioUncheckedUpdateWithoutTicketsAsignadosInput>
  }

  export type UsuarioUpdateWithoutTicketsAsignadosInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutUsuariosNestedInput
    ticketsCreados?: TicketUpdateManyWithoutSolicitanteNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutTicketsAsignadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketsCreados?: TicketUncheckedUpdateManyWithoutSolicitanteNestedInput
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUncheckedUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type DepartamentoUpsertWithoutTicketsInput = {
    update: XOR<DepartamentoUpdateWithoutTicketsInput, DepartamentoUncheckedUpdateWithoutTicketsInput>
    create: XOR<DepartamentoCreateWithoutTicketsInput, DepartamentoUncheckedCreateWithoutTicketsInput>
    where?: DepartamentoWhereInput
  }

  export type DepartamentoUpdateToOneWithWhereWithoutTicketsInput = {
    where?: DepartamentoWhereInput
    data: XOR<DepartamentoUpdateWithoutTicketsInput, DepartamentoUncheckedUpdateWithoutTicketsInput>
  }

  export type DepartamentoUpdateWithoutTicketsInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutDepartamentoNestedInput
    derivacionesOrigen?: DerivacionTicketUpdateManyWithoutDepartamentoOrigenNestedInput
    derivacionesDestino?: DerivacionTicketUpdateManyWithoutDepartamentoDestinoNestedInput
    slaPrioridades?: SlaPrioridadUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateWithoutTicketsInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutDepartamentoNestedInput
    derivacionesOrigen?: DerivacionTicketUncheckedUpdateManyWithoutDepartamentoOrigenNestedInput
    derivacionesDestino?: DerivacionTicketUncheckedUpdateManyWithoutDepartamentoDestinoNestedInput
    slaPrioridades?: SlaPrioridadUncheckedUpdateManyWithoutDepartamentoNestedInput
  }

  export type PrioridadUpsertWithoutTicketsInput = {
    update: XOR<PrioridadUpdateWithoutTicketsInput, PrioridadUncheckedUpdateWithoutTicketsInput>
    create: XOR<PrioridadCreateWithoutTicketsInput, PrioridadUncheckedCreateWithoutTicketsInput>
    where?: PrioridadWhereInput
  }

  export type PrioridadUpdateToOneWithWhereWithoutTicketsInput = {
    where?: PrioridadWhereInput
    data: XOR<PrioridadUpdateWithoutTicketsInput, PrioridadUncheckedUpdateWithoutTicketsInput>
  }

  export type PrioridadUpdateWithoutTicketsInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slas?: SlaPrioridadUpdateManyWithoutPrioridadNestedInput
  }

  export type PrioridadUncheckedUpdateWithoutTicketsInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slas?: SlaPrioridadUncheckedUpdateManyWithoutPrioridadNestedInput
  }

  export type EstadoTicketUpsertWithoutTicketsInput = {
    update: XOR<EstadoTicketUpdateWithoutTicketsInput, EstadoTicketUncheckedUpdateWithoutTicketsInput>
    create: XOR<EstadoTicketCreateWithoutTicketsInput, EstadoTicketUncheckedCreateWithoutTicketsInput>
    where?: EstadoTicketWhereInput
  }

  export type EstadoTicketUpdateToOneWithWhereWithoutTicketsInput = {
    where?: EstadoTicketWhereInput
    data: XOR<EstadoTicketUpdateWithoutTicketsInput, EstadoTicketUncheckedUpdateWithoutTicketsInput>
  }

  export type EstadoTicketUpdateWithoutTicketsInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    esEstadoFinal?: BoolFieldUpdateOperationsInput | boolean
    ordenSecuencia?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EstadoTicketUncheckedUpdateWithoutTicketsInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    esEstadoFinal?: BoolFieldUpdateOperationsInput | boolean
    ordenSecuencia?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioTicketUpsertWithWhereUniqueWithoutTicketInput = {
    where: ComentarioTicketWhereUniqueInput
    update: XOR<ComentarioTicketUpdateWithoutTicketInput, ComentarioTicketUncheckedUpdateWithoutTicketInput>
    create: XOR<ComentarioTicketCreateWithoutTicketInput, ComentarioTicketUncheckedCreateWithoutTicketInput>
  }

  export type ComentarioTicketUpdateWithWhereUniqueWithoutTicketInput = {
    where: ComentarioTicketWhereUniqueInput
    data: XOR<ComentarioTicketUpdateWithoutTicketInput, ComentarioTicketUncheckedUpdateWithoutTicketInput>
  }

  export type ComentarioTicketUpdateManyWithWhereWithoutTicketInput = {
    where: ComentarioTicketScalarWhereInput
    data: XOR<ComentarioTicketUpdateManyMutationInput, ComentarioTicketUncheckedUpdateManyWithoutTicketInput>
  }

  export type HistorialTicketUpsertWithWhereUniqueWithoutTicketInput = {
    where: HistorialTicketWhereUniqueInput
    update: XOR<HistorialTicketUpdateWithoutTicketInput, HistorialTicketUncheckedUpdateWithoutTicketInput>
    create: XOR<HistorialTicketCreateWithoutTicketInput, HistorialTicketUncheckedCreateWithoutTicketInput>
  }

  export type HistorialTicketUpdateWithWhereUniqueWithoutTicketInput = {
    where: HistorialTicketWhereUniqueInput
    data: XOR<HistorialTicketUpdateWithoutTicketInput, HistorialTicketUncheckedUpdateWithoutTicketInput>
  }

  export type HistorialTicketUpdateManyWithWhereWithoutTicketInput = {
    where: HistorialTicketScalarWhereInput
    data: XOR<HistorialTicketUpdateManyMutationInput, HistorialTicketUncheckedUpdateManyWithoutTicketInput>
  }

  export type ArchivoAdjuntoUpsertWithWhereUniqueWithoutTicketInput = {
    where: ArchivoAdjuntoWhereUniqueInput
    update: XOR<ArchivoAdjuntoUpdateWithoutTicketInput, ArchivoAdjuntoUncheckedUpdateWithoutTicketInput>
    create: XOR<ArchivoAdjuntoCreateWithoutTicketInput, ArchivoAdjuntoUncheckedCreateWithoutTicketInput>
  }

  export type ArchivoAdjuntoUpdateWithWhereUniqueWithoutTicketInput = {
    where: ArchivoAdjuntoWhereUniqueInput
    data: XOR<ArchivoAdjuntoUpdateWithoutTicketInput, ArchivoAdjuntoUncheckedUpdateWithoutTicketInput>
  }

  export type ArchivoAdjuntoUpdateManyWithWhereWithoutTicketInput = {
    where: ArchivoAdjuntoScalarWhereInput
    data: XOR<ArchivoAdjuntoUpdateManyMutationInput, ArchivoAdjuntoUncheckedUpdateManyWithoutTicketInput>
  }

  export type DerivacionTicketUpsertWithWhereUniqueWithoutTicketInput = {
    where: DerivacionTicketWhereUniqueInput
    update: XOR<DerivacionTicketUpdateWithoutTicketInput, DerivacionTicketUncheckedUpdateWithoutTicketInput>
    create: XOR<DerivacionTicketCreateWithoutTicketInput, DerivacionTicketUncheckedCreateWithoutTicketInput>
  }

  export type DerivacionTicketUpdateWithWhereUniqueWithoutTicketInput = {
    where: DerivacionTicketWhereUniqueInput
    data: XOR<DerivacionTicketUpdateWithoutTicketInput, DerivacionTicketUncheckedUpdateWithoutTicketInput>
  }

  export type DerivacionTicketUpdateManyWithWhereWithoutTicketInput = {
    where: DerivacionTicketScalarWhereInput
    data: XOR<DerivacionTicketUpdateManyMutationInput, DerivacionTicketUncheckedUpdateManyWithoutTicketInput>
  }

  export type EncuestaUpsertWithoutTicketInput = {
    update: XOR<EncuestaUpdateWithoutTicketInput, EncuestaUncheckedUpdateWithoutTicketInput>
    create: XOR<EncuestaCreateWithoutTicketInput, EncuestaUncheckedCreateWithoutTicketInput>
    where?: EncuestaWhereInput
  }

  export type EncuestaUpdateToOneWithWhereWithoutTicketInput = {
    where?: EncuestaWhereInput
    data: XOR<EncuestaUpdateWithoutTicketInput, EncuestaUncheckedUpdateWithoutTicketInput>
  }

  export type EncuestaUpdateWithoutTicketInput = {
    calificacion?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario?: UsuarioUpdateOneWithoutEncuestasNestedInput
  }

  export type EncuestaUncheckedUpdateWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    calificacion?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    enviadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificacionUpsertWithWhereUniqueWithoutTicketInput = {
    where: NotificacionWhereUniqueInput
    update: XOR<NotificacionUpdateWithoutTicketInput, NotificacionUncheckedUpdateWithoutTicketInput>
    create: XOR<NotificacionCreateWithoutTicketInput, NotificacionUncheckedCreateWithoutTicketInput>
  }

  export type NotificacionUpdateWithWhereUniqueWithoutTicketInput = {
    where: NotificacionWhereUniqueInput
    data: XOR<NotificacionUpdateWithoutTicketInput, NotificacionUncheckedUpdateWithoutTicketInput>
  }

  export type NotificacionUpdateManyWithWhereWithoutTicketInput = {
    where: NotificacionScalarWhereInput
    data: XOR<NotificacionUpdateManyMutationInput, NotificacionUncheckedUpdateManyWithoutTicketInput>
  }

  export type UsuarioEnCopiaUpsertWithWhereUniqueWithoutTicketInput = {
    where: UsuarioEnCopiaWhereUniqueInput
    update: XOR<UsuarioEnCopiaUpdateWithoutTicketInput, UsuarioEnCopiaUncheckedUpdateWithoutTicketInput>
    create: XOR<UsuarioEnCopiaCreateWithoutTicketInput, UsuarioEnCopiaUncheckedCreateWithoutTicketInput>
  }

  export type UsuarioEnCopiaUpdateWithWhereUniqueWithoutTicketInput = {
    where: UsuarioEnCopiaWhereUniqueInput
    data: XOR<UsuarioEnCopiaUpdateWithoutTicketInput, UsuarioEnCopiaUncheckedUpdateWithoutTicketInput>
  }

  export type UsuarioEnCopiaUpdateManyWithWhereWithoutTicketInput = {
    where: UsuarioEnCopiaScalarWhereInput
    data: XOR<UsuarioEnCopiaUpdateManyMutationInput, UsuarioEnCopiaUncheckedUpdateManyWithoutTicketInput>
  }

  export type TicketCreateWithoutHistorialInput = {
    numeroTicket: string
    asunto: string
    descripcion: string
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    solicitante: UsuarioCreateNestedOneWithoutTicketsCreadosInput
    asignado?: UsuarioCreateNestedOneWithoutTicketsAsignadosInput
    departamento: DepartamentoCreateNestedOneWithoutTicketsInput
    prioridad: PrioridadCreateNestedOneWithoutTicketsInput
    estado: EstadoTicketCreateNestedOneWithoutTicketsInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateWithoutHistorialInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaUncheckedCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutHistorialInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutHistorialInput, TicketUncheckedCreateWithoutHistorialInput>
  }

  export type UsuarioCreateWithoutHistorialInput = {
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    rol: RolCreateNestedOneWithoutUsuariosInput
    departamento: DepartamentoCreateNestedOneWithoutUsuariosInput
    ticketsCreados?: TicketCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutHistorialInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticketsCreados?: TicketUncheckedCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketUncheckedCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaUncheckedCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutHistorialInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutHistorialInput, UsuarioUncheckedCreateWithoutHistorialInput>
  }

  export type TicketUpsertWithoutHistorialInput = {
    update: XOR<TicketUpdateWithoutHistorialInput, TicketUncheckedUpdateWithoutHistorialInput>
    create: XOR<TicketCreateWithoutHistorialInput, TicketUncheckedCreateWithoutHistorialInput>
    where?: TicketWhereInput
  }

  export type TicketUpdateToOneWithWhereWithoutHistorialInput = {
    where?: TicketWhereInput
    data: XOR<TicketUpdateWithoutHistorialInput, TicketUncheckedUpdateWithoutHistorialInput>
  }

  export type TicketUpdateWithoutHistorialInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    solicitante?: UsuarioUpdateOneRequiredWithoutTicketsCreadosNestedInput
    asignado?: UsuarioUpdateOneWithoutTicketsAsignadosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutTicketsNestedInput
    prioridad?: PrioridadUpdateOneRequiredWithoutTicketsNestedInput
    estado?: EstadoTicketUpdateOneRequiredWithoutTicketsNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateWithoutHistorialInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUncheckedUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type UsuarioUpsertWithoutHistorialInput = {
    update: XOR<UsuarioUpdateWithoutHistorialInput, UsuarioUncheckedUpdateWithoutHistorialInput>
    create: XOR<UsuarioCreateWithoutHistorialInput, UsuarioUncheckedCreateWithoutHistorialInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutHistorialInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutHistorialInput, UsuarioUncheckedUpdateWithoutHistorialInput>
  }

  export type UsuarioUpdateWithoutHistorialInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutUsuariosNestedInput
    ticketsCreados?: TicketUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutHistorialInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketsCreados?: TicketUncheckedUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUncheckedUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUncheckedUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type TicketCreateWithoutComentariosInput = {
    numeroTicket: string
    asunto: string
    descripcion: string
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    solicitante: UsuarioCreateNestedOneWithoutTicketsCreadosInput
    asignado?: UsuarioCreateNestedOneWithoutTicketsAsignadosInput
    departamento: DepartamentoCreateNestedOneWithoutTicketsInput
    prioridad: PrioridadCreateNestedOneWithoutTicketsInput
    estado: EstadoTicketCreateNestedOneWithoutTicketsInput
    historial?: HistorialTicketCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateWithoutComentariosInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaUncheckedCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutComentariosInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutComentariosInput, TicketUncheckedCreateWithoutComentariosInput>
  }

  export type UsuarioCreateWithoutComentariosInput = {
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    rol: RolCreateNestedOneWithoutUsuariosInput
    departamento: DepartamentoCreateNestedOneWithoutUsuariosInput
    ticketsCreados?: TicketCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketCreateNestedManyWithoutAsignadoInput
    historial?: HistorialTicketCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutComentariosInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticketsCreados?: TicketUncheckedCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketUncheckedCreateNestedManyWithoutAsignadoInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaUncheckedCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutComentariosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutComentariosInput, UsuarioUncheckedCreateWithoutComentariosInput>
  }

  export type ArchivoAdjuntoCreateWithoutComentarioInput = {
    nombreOriginal: string
    nombreAlmacenado: string
    rutaArchivo: string
    tamanoArchivo: number
    tipoMime: string
    createdAt?: Date | string
    ticket: TicketCreateNestedOneWithoutArchivosInput
    usuario: UsuarioCreateNestedOneWithoutArchivosSubidosInput
  }

  export type ArchivoAdjuntoUncheckedCreateWithoutComentarioInput = {
    id?: number
    ticketId: number
    nombreOriginal: string
    nombreAlmacenado: string
    rutaArchivo: string
    tamanoArchivo: number
    tipoMime: string
    subidoPor: number
    createdAt?: Date | string
  }

  export type ArchivoAdjuntoCreateOrConnectWithoutComentarioInput = {
    where: ArchivoAdjuntoWhereUniqueInput
    create: XOR<ArchivoAdjuntoCreateWithoutComentarioInput, ArchivoAdjuntoUncheckedCreateWithoutComentarioInput>
  }

  export type ArchivoAdjuntoCreateManyComentarioInputEnvelope = {
    data: ArchivoAdjuntoCreateManyComentarioInput | ArchivoAdjuntoCreateManyComentarioInput[]
    skipDuplicates?: boolean
  }

  export type TicketUpsertWithoutComentariosInput = {
    update: XOR<TicketUpdateWithoutComentariosInput, TicketUncheckedUpdateWithoutComentariosInput>
    create: XOR<TicketCreateWithoutComentariosInput, TicketUncheckedCreateWithoutComentariosInput>
    where?: TicketWhereInput
  }

  export type TicketUpdateToOneWithWhereWithoutComentariosInput = {
    where?: TicketWhereInput
    data: XOR<TicketUpdateWithoutComentariosInput, TicketUncheckedUpdateWithoutComentariosInput>
  }

  export type TicketUpdateWithoutComentariosInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    solicitante?: UsuarioUpdateOneRequiredWithoutTicketsCreadosNestedInput
    asignado?: UsuarioUpdateOneWithoutTicketsAsignadosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutTicketsNestedInput
    prioridad?: PrioridadUpdateOneRequiredWithoutTicketsNestedInput
    estado?: EstadoTicketUpdateOneRequiredWithoutTicketsNestedInput
    historial?: HistorialTicketUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateWithoutComentariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    historial?: HistorialTicketUncheckedUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUncheckedUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type UsuarioUpsertWithoutComentariosInput = {
    update: XOR<UsuarioUpdateWithoutComentariosInput, UsuarioUncheckedUpdateWithoutComentariosInput>
    create: XOR<UsuarioCreateWithoutComentariosInput, UsuarioUncheckedCreateWithoutComentariosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutComentariosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutComentariosInput, UsuarioUncheckedUpdateWithoutComentariosInput>
  }

  export type UsuarioUpdateWithoutComentariosInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutUsuariosNestedInput
    ticketsCreados?: TicketUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUpdateManyWithoutAsignadoNestedInput
    historial?: HistorialTicketUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutComentariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketsCreados?: TicketUncheckedUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUncheckedUpdateManyWithoutAsignadoNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUncheckedUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ArchivoAdjuntoUpsertWithWhereUniqueWithoutComentarioInput = {
    where: ArchivoAdjuntoWhereUniqueInput
    update: XOR<ArchivoAdjuntoUpdateWithoutComentarioInput, ArchivoAdjuntoUncheckedUpdateWithoutComentarioInput>
    create: XOR<ArchivoAdjuntoCreateWithoutComentarioInput, ArchivoAdjuntoUncheckedCreateWithoutComentarioInput>
  }

  export type ArchivoAdjuntoUpdateWithWhereUniqueWithoutComentarioInput = {
    where: ArchivoAdjuntoWhereUniqueInput
    data: XOR<ArchivoAdjuntoUpdateWithoutComentarioInput, ArchivoAdjuntoUncheckedUpdateWithoutComentarioInput>
  }

  export type ArchivoAdjuntoUpdateManyWithWhereWithoutComentarioInput = {
    where: ArchivoAdjuntoScalarWhereInput
    data: XOR<ArchivoAdjuntoUpdateManyMutationInput, ArchivoAdjuntoUncheckedUpdateManyWithoutComentarioInput>
  }

  export type TicketCreateWithoutArchivosInput = {
    numeroTicket: string
    asunto: string
    descripcion: string
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    solicitante: UsuarioCreateNestedOneWithoutTicketsCreadosInput
    asignado?: UsuarioCreateNestedOneWithoutTicketsAsignadosInput
    departamento: DepartamentoCreateNestedOneWithoutTicketsInput
    prioridad: PrioridadCreateNestedOneWithoutTicketsInput
    estado: EstadoTicketCreateNestedOneWithoutTicketsInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateWithoutArchivosInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaUncheckedCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutArchivosInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutArchivosInput, TicketUncheckedCreateWithoutArchivosInput>
  }

  export type ComentarioTicketCreateWithoutArchivosInput = {
    comentario: string
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticket: TicketCreateNestedOneWithoutComentariosInput
    usuario: UsuarioCreateNestedOneWithoutComentariosInput
  }

  export type ComentarioTicketUncheckedCreateWithoutArchivosInput = {
    id?: number
    ticketId: number
    usuarioId: number
    comentario: string
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type ComentarioTicketCreateOrConnectWithoutArchivosInput = {
    where: ComentarioTicketWhereUniqueInput
    create: XOR<ComentarioTicketCreateWithoutArchivosInput, ComentarioTicketUncheckedCreateWithoutArchivosInput>
  }

  export type UsuarioCreateWithoutArchivosSubidosInput = {
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    rol: RolCreateNestedOneWithoutUsuariosInput
    departamento: DepartamentoCreateNestedOneWithoutUsuariosInput
    ticketsCreados?: TicketCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutArchivosSubidosInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticketsCreados?: TicketUncheckedCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketUncheckedCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaUncheckedCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutArchivosSubidosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutArchivosSubidosInput, UsuarioUncheckedCreateWithoutArchivosSubidosInput>
  }

  export type TicketUpsertWithoutArchivosInput = {
    update: XOR<TicketUpdateWithoutArchivosInput, TicketUncheckedUpdateWithoutArchivosInput>
    create: XOR<TicketCreateWithoutArchivosInput, TicketUncheckedCreateWithoutArchivosInput>
    where?: TicketWhereInput
  }

  export type TicketUpdateToOneWithWhereWithoutArchivosInput = {
    where?: TicketWhereInput
    data: XOR<TicketUpdateWithoutArchivosInput, TicketUncheckedUpdateWithoutArchivosInput>
  }

  export type TicketUpdateWithoutArchivosInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    solicitante?: UsuarioUpdateOneRequiredWithoutTicketsCreadosNestedInput
    asignado?: UsuarioUpdateOneWithoutTicketsAsignadosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutTicketsNestedInput
    prioridad?: PrioridadUpdateOneRequiredWithoutTicketsNestedInput
    estado?: EstadoTicketUpdateOneRequiredWithoutTicketsNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateWithoutArchivosInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUncheckedUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type ComentarioTicketUpsertWithoutArchivosInput = {
    update: XOR<ComentarioTicketUpdateWithoutArchivosInput, ComentarioTicketUncheckedUpdateWithoutArchivosInput>
    create: XOR<ComentarioTicketCreateWithoutArchivosInput, ComentarioTicketUncheckedCreateWithoutArchivosInput>
    where?: ComentarioTicketWhereInput
  }

  export type ComentarioTicketUpdateToOneWithWhereWithoutArchivosInput = {
    where?: ComentarioTicketWhereInput
    data: XOR<ComentarioTicketUpdateWithoutArchivosInput, ComentarioTicketUncheckedUpdateWithoutArchivosInput>
  }

  export type ComentarioTicketUpdateWithoutArchivosInput = {
    comentario?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    esSolucion?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticket?: TicketUpdateOneRequiredWithoutComentariosNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutComentariosNestedInput
  }

  export type ComentarioTicketUncheckedUpdateWithoutArchivosInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    comentario?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    esSolucion?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUpsertWithoutArchivosSubidosInput = {
    update: XOR<UsuarioUpdateWithoutArchivosSubidosInput, UsuarioUncheckedUpdateWithoutArchivosSubidosInput>
    create: XOR<UsuarioCreateWithoutArchivosSubidosInput, UsuarioUncheckedCreateWithoutArchivosSubidosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutArchivosSubidosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutArchivosSubidosInput, UsuarioUncheckedUpdateWithoutArchivosSubidosInput>
  }

  export type UsuarioUpdateWithoutArchivosSubidosInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutUsuariosNestedInput
    ticketsCreados?: TicketUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutArchivosSubidosInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketsCreados?: TicketUncheckedUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUncheckedUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUncheckedUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type TicketCreateWithoutDerivacionesInput = {
    numeroTicket: string
    asunto: string
    descripcion: string
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    solicitante: UsuarioCreateNestedOneWithoutTicketsCreadosInput
    asignado?: UsuarioCreateNestedOneWithoutTicketsAsignadosInput
    departamento: DepartamentoCreateNestedOneWithoutTicketsInput
    prioridad: PrioridadCreateNestedOneWithoutTicketsInput
    estado: EstadoTicketCreateNestedOneWithoutTicketsInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateWithoutDerivacionesInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaUncheckedCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutDerivacionesInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutDerivacionesInput, TicketUncheckedCreateWithoutDerivacionesInput>
  }

  export type DepartamentoCreateWithoutDerivacionesOrigenInput = {
    nombre: string
    createdAt?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutDepartamentoInput
    tickets?: TicketCreateNestedManyWithoutDepartamentoInput
    derivacionesDestino?: DerivacionTicketCreateNestedManyWithoutDepartamentoDestinoInput
    slaPrioridades?: SlaPrioridadCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUncheckedCreateWithoutDerivacionesOrigenInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutDepartamentoInput
    tickets?: TicketUncheckedCreateNestedManyWithoutDepartamentoInput
    derivacionesDestino?: DerivacionTicketUncheckedCreateNestedManyWithoutDepartamentoDestinoInput
    slaPrioridades?: SlaPrioridadUncheckedCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoCreateOrConnectWithoutDerivacionesOrigenInput = {
    where: DepartamentoWhereUniqueInput
    create: XOR<DepartamentoCreateWithoutDerivacionesOrigenInput, DepartamentoUncheckedCreateWithoutDerivacionesOrigenInput>
  }

  export type DepartamentoCreateWithoutDerivacionesDestinoInput = {
    nombre: string
    createdAt?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutDepartamentoInput
    tickets?: TicketCreateNestedManyWithoutDepartamentoInput
    derivacionesOrigen?: DerivacionTicketCreateNestedManyWithoutDepartamentoOrigenInput
    slaPrioridades?: SlaPrioridadCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUncheckedCreateWithoutDerivacionesDestinoInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutDepartamentoInput
    tickets?: TicketUncheckedCreateNestedManyWithoutDepartamentoInput
    derivacionesOrigen?: DerivacionTicketUncheckedCreateNestedManyWithoutDepartamentoOrigenInput
    slaPrioridades?: SlaPrioridadUncheckedCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoCreateOrConnectWithoutDerivacionesDestinoInput = {
    where: DepartamentoWhereUniqueInput
    create: XOR<DepartamentoCreateWithoutDerivacionesDestinoInput, DepartamentoUncheckedCreateWithoutDerivacionesDestinoInput>
  }

  export type UsuarioCreateWithoutDerivacionesInput = {
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    rol: RolCreateNestedOneWithoutUsuariosInput
    departamento: DepartamentoCreateNestedOneWithoutUsuariosInput
    ticketsCreados?: TicketCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutDerivacionesInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticketsCreados?: TicketUncheckedCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketUncheckedCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaUncheckedCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutDerivacionesInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutDerivacionesInput, UsuarioUncheckedCreateWithoutDerivacionesInput>
  }

  export type TicketUpsertWithoutDerivacionesInput = {
    update: XOR<TicketUpdateWithoutDerivacionesInput, TicketUncheckedUpdateWithoutDerivacionesInput>
    create: XOR<TicketCreateWithoutDerivacionesInput, TicketUncheckedCreateWithoutDerivacionesInput>
    where?: TicketWhereInput
  }

  export type TicketUpdateToOneWithWhereWithoutDerivacionesInput = {
    where?: TicketWhereInput
    data: XOR<TicketUpdateWithoutDerivacionesInput, TicketUncheckedUpdateWithoutDerivacionesInput>
  }

  export type TicketUpdateWithoutDerivacionesInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    solicitante?: UsuarioUpdateOneRequiredWithoutTicketsCreadosNestedInput
    asignado?: UsuarioUpdateOneWithoutTicketsAsignadosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutTicketsNestedInput
    prioridad?: PrioridadUpdateOneRequiredWithoutTicketsNestedInput
    estado?: EstadoTicketUpdateOneRequiredWithoutTicketsNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateWithoutDerivacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUncheckedUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type DepartamentoUpsertWithoutDerivacionesOrigenInput = {
    update: XOR<DepartamentoUpdateWithoutDerivacionesOrigenInput, DepartamentoUncheckedUpdateWithoutDerivacionesOrigenInput>
    create: XOR<DepartamentoCreateWithoutDerivacionesOrigenInput, DepartamentoUncheckedCreateWithoutDerivacionesOrigenInput>
    where?: DepartamentoWhereInput
  }

  export type DepartamentoUpdateToOneWithWhereWithoutDerivacionesOrigenInput = {
    where?: DepartamentoWhereInput
    data: XOR<DepartamentoUpdateWithoutDerivacionesOrigenInput, DepartamentoUncheckedUpdateWithoutDerivacionesOrigenInput>
  }

  export type DepartamentoUpdateWithoutDerivacionesOrigenInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutDepartamentoNestedInput
    tickets?: TicketUpdateManyWithoutDepartamentoNestedInput
    derivacionesDestino?: DerivacionTicketUpdateManyWithoutDepartamentoDestinoNestedInput
    slaPrioridades?: SlaPrioridadUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateWithoutDerivacionesOrigenInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutDepartamentoNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutDepartamentoNestedInput
    derivacionesDestino?: DerivacionTicketUncheckedUpdateManyWithoutDepartamentoDestinoNestedInput
    slaPrioridades?: SlaPrioridadUncheckedUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUpsertWithoutDerivacionesDestinoInput = {
    update: XOR<DepartamentoUpdateWithoutDerivacionesDestinoInput, DepartamentoUncheckedUpdateWithoutDerivacionesDestinoInput>
    create: XOR<DepartamentoCreateWithoutDerivacionesDestinoInput, DepartamentoUncheckedCreateWithoutDerivacionesDestinoInput>
    where?: DepartamentoWhereInput
  }

  export type DepartamentoUpdateToOneWithWhereWithoutDerivacionesDestinoInput = {
    where?: DepartamentoWhereInput
    data: XOR<DepartamentoUpdateWithoutDerivacionesDestinoInput, DepartamentoUncheckedUpdateWithoutDerivacionesDestinoInput>
  }

  export type DepartamentoUpdateWithoutDerivacionesDestinoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutDepartamentoNestedInput
    tickets?: TicketUpdateManyWithoutDepartamentoNestedInput
    derivacionesOrigen?: DerivacionTicketUpdateManyWithoutDepartamentoOrigenNestedInput
    slaPrioridades?: SlaPrioridadUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateWithoutDerivacionesDestinoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutDepartamentoNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutDepartamentoNestedInput
    derivacionesOrigen?: DerivacionTicketUncheckedUpdateManyWithoutDepartamentoOrigenNestedInput
    slaPrioridades?: SlaPrioridadUncheckedUpdateManyWithoutDepartamentoNestedInput
  }

  export type UsuarioUpsertWithoutDerivacionesInput = {
    update: XOR<UsuarioUpdateWithoutDerivacionesInput, UsuarioUncheckedUpdateWithoutDerivacionesInput>
    create: XOR<UsuarioCreateWithoutDerivacionesInput, UsuarioUncheckedCreateWithoutDerivacionesInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutDerivacionesInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutDerivacionesInput, UsuarioUncheckedUpdateWithoutDerivacionesInput>
  }

  export type UsuarioUpdateWithoutDerivacionesInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutUsuariosNestedInput
    ticketsCreados?: TicketUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutDerivacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketsCreados?: TicketUncheckedUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUncheckedUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUncheckedUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type TicketCreateWithoutEncuestaInput = {
    numeroTicket: string
    asunto: string
    descripcion: string
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    solicitante: UsuarioCreateNestedOneWithoutTicketsCreadosInput
    asignado?: UsuarioCreateNestedOneWithoutTicketsAsignadosInput
    departamento: DepartamentoCreateNestedOneWithoutTicketsInput
    prioridad: PrioridadCreateNestedOneWithoutTicketsInput
    estado: EstadoTicketCreateNestedOneWithoutTicketsInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutTicketInput
    notificaciones?: NotificacionCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateWithoutEncuestaInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutTicketInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutEncuestaInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutEncuestaInput, TicketUncheckedCreateWithoutEncuestaInput>
  }

  export type UsuarioCreateWithoutEncuestasInput = {
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    rol: RolCreateNestedOneWithoutUsuariosInput
    departamento: DepartamentoCreateNestedOneWithoutUsuariosInput
    ticketsCreados?: TicketCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutEncuestasInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticketsCreados?: TicketUncheckedCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketUncheckedCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutEncuestasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEncuestasInput, UsuarioUncheckedCreateWithoutEncuestasInput>
  }

  export type TicketUpsertWithoutEncuestaInput = {
    update: XOR<TicketUpdateWithoutEncuestaInput, TicketUncheckedUpdateWithoutEncuestaInput>
    create: XOR<TicketCreateWithoutEncuestaInput, TicketUncheckedCreateWithoutEncuestaInput>
    where?: TicketWhereInput
  }

  export type TicketUpdateToOneWithWhereWithoutEncuestaInput = {
    where?: TicketWhereInput
    data: XOR<TicketUpdateWithoutEncuestaInput, TicketUncheckedUpdateWithoutEncuestaInput>
  }

  export type TicketUpdateWithoutEncuestaInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    solicitante?: UsuarioUpdateOneRequiredWithoutTicketsCreadosNestedInput
    asignado?: UsuarioUpdateOneWithoutTicketsAsignadosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutTicketsNestedInput
    prioridad?: PrioridadUpdateOneRequiredWithoutTicketsNestedInput
    estado?: EstadoTicketUpdateOneRequiredWithoutTicketsNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutTicketNestedInput
    notificaciones?: NotificacionUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateWithoutEncuestaInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutTicketNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type UsuarioUpsertWithoutEncuestasInput = {
    update: XOR<UsuarioUpdateWithoutEncuestasInput, UsuarioUncheckedUpdateWithoutEncuestasInput>
    create: XOR<UsuarioCreateWithoutEncuestasInput, UsuarioUncheckedCreateWithoutEncuestasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutEncuestasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutEncuestasInput, UsuarioUncheckedUpdateWithoutEncuestasInput>
  }

  export type UsuarioUpdateWithoutEncuestasInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutUsuariosNestedInput
    ticketsCreados?: TicketUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEncuestasInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketsCreados?: TicketUncheckedUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUncheckedUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateWithoutNotificacionesInput = {
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    rol: RolCreateNestedOneWithoutUsuariosInput
    departamento: DepartamentoCreateNestedOneWithoutUsuariosInput
    ticketsCreados?: TicketCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutNotificacionesInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticketsCreados?: TicketUncheckedCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketUncheckedCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaUncheckedCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutNotificacionesInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutNotificacionesInput, UsuarioUncheckedCreateWithoutNotificacionesInput>
  }

  export type TicketCreateWithoutNotificacionesInput = {
    numeroTicket: string
    asunto: string
    descripcion: string
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    solicitante: UsuarioCreateNestedOneWithoutTicketsCreadosInput
    asignado?: UsuarioCreateNestedOneWithoutTicketsAsignadosInput
    departamento: DepartamentoCreateNestedOneWithoutTicketsInput
    prioridad: PrioridadCreateNestedOneWithoutTicketsInput
    estado: EstadoTicketCreateNestedOneWithoutTicketsInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaCreateNestedOneWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateWithoutNotificacionesInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaUncheckedCreateNestedOneWithoutTicketInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutNotificacionesInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutNotificacionesInput, TicketUncheckedCreateWithoutNotificacionesInput>
  }

  export type UsuarioUpsertWithoutNotificacionesInput = {
    update: XOR<UsuarioUpdateWithoutNotificacionesInput, UsuarioUncheckedUpdateWithoutNotificacionesInput>
    create: XOR<UsuarioCreateWithoutNotificacionesInput, UsuarioUncheckedCreateWithoutNotificacionesInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutNotificacionesInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutNotificacionesInput, UsuarioUncheckedUpdateWithoutNotificacionesInput>
  }

  export type UsuarioUpdateWithoutNotificacionesInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutUsuariosNestedInput
    ticketsCreados?: TicketUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutNotificacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketsCreados?: TicketUncheckedUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUncheckedUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUncheckedUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type TicketUpsertWithoutNotificacionesInput = {
    update: XOR<TicketUpdateWithoutNotificacionesInput, TicketUncheckedUpdateWithoutNotificacionesInput>
    create: XOR<TicketCreateWithoutNotificacionesInput, TicketUncheckedCreateWithoutNotificacionesInput>
    where?: TicketWhereInput
  }

  export type TicketUpdateToOneWithWhereWithoutNotificacionesInput = {
    where?: TicketWhereInput
    data: XOR<TicketUpdateWithoutNotificacionesInput, TicketUncheckedUpdateWithoutNotificacionesInput>
  }

  export type TicketUpdateWithoutNotificacionesInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    solicitante?: UsuarioUpdateOneRequiredWithoutTicketsCreadosNestedInput
    asignado?: UsuarioUpdateOneWithoutTicketsAsignadosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutTicketsNestedInput
    prioridad?: PrioridadUpdateOneRequiredWithoutTicketsNestedInput
    estado?: EstadoTicketUpdateOneRequiredWithoutTicketsNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUpdateOneWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateWithoutNotificacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUncheckedUpdateOneWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketCreateWithoutUsuariosEnCopiaInput = {
    numeroTicket: string
    asunto: string
    descripcion: string
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    solicitante: UsuarioCreateNestedOneWithoutTicketsCreadosInput
    asignado?: UsuarioCreateNestedOneWithoutTicketsAsignadosInput
    departamento: DepartamentoCreateNestedOneWithoutTicketsInput
    prioridad: PrioridadCreateNestedOneWithoutTicketsInput
    estado: EstadoTicketCreateNestedOneWithoutTicketsInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateWithoutUsuariosEnCopiaInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutTicketInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutTicketInput
    archivos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutTicketInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutTicketInput
    encuesta?: EncuestaUncheckedCreateNestedOneWithoutTicketInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutUsuariosEnCopiaInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutUsuariosEnCopiaInput, TicketUncheckedCreateWithoutUsuariosEnCopiaInput>
  }

  export type UsuarioCreateWithoutUsuariosEnCopiaInput = {
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    rol: RolCreateNestedOneWithoutUsuariosInput
    departamento: DepartamentoCreateNestedOneWithoutUsuariosInput
    ticketsCreados?: TicketCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutUsuariosEnCopiaInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticketsCreados?: TicketUncheckedCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketUncheckedCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaUncheckedCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    configuraciones?: ConfiguracionSistemaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutUsuariosEnCopiaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutUsuariosEnCopiaInput, UsuarioUncheckedCreateWithoutUsuariosEnCopiaInput>
  }

  export type TicketUpsertWithoutUsuariosEnCopiaInput = {
    update: XOR<TicketUpdateWithoutUsuariosEnCopiaInput, TicketUncheckedUpdateWithoutUsuariosEnCopiaInput>
    create: XOR<TicketCreateWithoutUsuariosEnCopiaInput, TicketUncheckedCreateWithoutUsuariosEnCopiaInput>
    where?: TicketWhereInput
  }

  export type TicketUpdateToOneWithWhereWithoutUsuariosEnCopiaInput = {
    where?: TicketWhereInput
    data: XOR<TicketUpdateWithoutUsuariosEnCopiaInput, TicketUncheckedUpdateWithoutUsuariosEnCopiaInput>
  }

  export type TicketUpdateWithoutUsuariosEnCopiaInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    solicitante?: UsuarioUpdateOneRequiredWithoutTicketsCreadosNestedInput
    asignado?: UsuarioUpdateOneWithoutTicketsAsignadosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutTicketsNestedInput
    prioridad?: PrioridadUpdateOneRequiredWithoutTicketsNestedInput
    estado?: EstadoTicketUpdateOneRequiredWithoutTicketsNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateWithoutUsuariosEnCopiaInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUncheckedUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type UsuarioUpsertWithoutUsuariosEnCopiaInput = {
    update: XOR<UsuarioUpdateWithoutUsuariosEnCopiaInput, UsuarioUncheckedUpdateWithoutUsuariosEnCopiaInput>
    create: XOR<UsuarioCreateWithoutUsuariosEnCopiaInput, UsuarioUncheckedCreateWithoutUsuariosEnCopiaInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutUsuariosEnCopiaInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutUsuariosEnCopiaInput, UsuarioUncheckedUpdateWithoutUsuariosEnCopiaInput>
  }

  export type UsuarioUpdateWithoutUsuariosEnCopiaInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutUsuariosNestedInput
    ticketsCreados?: TicketUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutUsuariosEnCopiaInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketsCreados?: TicketUncheckedUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUncheckedUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUncheckedUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateWithoutConfiguracionesInput = {
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    rol: RolCreateNestedOneWithoutUsuariosInput
    departamento: DepartamentoCreateNestedOneWithoutUsuariosInput
    ticketsCreados?: TicketCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutConfiguracionesInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    ticketsCreados?: TicketUncheckedCreateNestedManyWithoutSolicitanteInput
    ticketsAsignados?: TicketUncheckedCreateNestedManyWithoutAsignadoInput
    comentarios?: ComentarioTicketUncheckedCreateNestedManyWithoutUsuarioInput
    historial?: HistorialTicketUncheckedCreateNestedManyWithoutUsuarioInput
    archivosSubidos?: ArchivoAdjuntoUncheckedCreateNestedManyWithoutUsuarioInput
    derivaciones?: DerivacionTicketUncheckedCreateNestedManyWithoutUsuarioInput
    encuestas?: EncuestaUncheckedCreateNestedManyWithoutUsuarioInput
    notificaciones?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutConfiguracionesInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutConfiguracionesInput, UsuarioUncheckedCreateWithoutConfiguracionesInput>
  }

  export type UsuarioUpsertWithoutConfiguracionesInput = {
    update: XOR<UsuarioUpdateWithoutConfiguracionesInput, UsuarioUncheckedUpdateWithoutConfiguracionesInput>
    create: XOR<UsuarioCreateWithoutConfiguracionesInput, UsuarioUncheckedCreateWithoutConfiguracionesInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutConfiguracionesInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutConfiguracionesInput, UsuarioUncheckedUpdateWithoutConfiguracionesInput>
  }

  export type UsuarioUpdateWithoutConfiguracionesInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutUsuariosNestedInput
    ticketsCreados?: TicketUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutConfiguracionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketsCreados?: TicketUncheckedUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUncheckedUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUncheckedUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyDepartamentoInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    rolId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type TicketCreateManyDepartamentoInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type DerivacionTicketCreateManyDepartamentoOrigenInput = {
    id?: number
    ticketId: number
    departamentoDestinoId: number
    motivo?: string | null
    derivadoPor: number
    createdAt?: Date | string
  }

  export type DerivacionTicketCreateManyDepartamentoDestinoInput = {
    id?: number
    ticketId: number
    departamentoOrigenId: number
    motivo?: string | null
    derivadoPor: number
    createdAt?: Date | string
  }

  export type SlaPrioridadCreateManyDepartamentoInput = {
    prioridadId: number
    tiempoRespuestaHoras: number
    tiempoResolucionHoras: number
    createdAt?: Date | string
  }

  export type UsuarioUpdateWithoutDepartamentoInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    ticketsCreados?: TicketUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutDepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketsCreados?: TicketUncheckedUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUncheckedUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUncheckedUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutDepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketUpdateWithoutDepartamentoInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    solicitante?: UsuarioUpdateOneRequiredWithoutTicketsCreadosNestedInput
    asignado?: UsuarioUpdateOneWithoutTicketsAsignadosNestedInput
    prioridad?: PrioridadUpdateOneRequiredWithoutTicketsNestedInput
    estado?: EstadoTicketUpdateOneRequiredWithoutTicketsNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateWithoutDepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUncheckedUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateManyWithoutDepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DerivacionTicketUpdateWithoutDepartamentoOrigenInput = {
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket?: TicketUpdateOneRequiredWithoutDerivacionesNestedInput
    departamentoDestino?: DepartamentoUpdateOneRequiredWithoutDerivacionesDestinoNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutDerivacionesNestedInput
  }

  export type DerivacionTicketUncheckedUpdateWithoutDepartamentoOrigenInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    departamentoDestinoId?: IntFieldUpdateOperationsInput | number
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    derivadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DerivacionTicketUncheckedUpdateManyWithoutDepartamentoOrigenInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    departamentoDestinoId?: IntFieldUpdateOperationsInput | number
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    derivadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DerivacionTicketUpdateWithoutDepartamentoDestinoInput = {
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket?: TicketUpdateOneRequiredWithoutDerivacionesNestedInput
    departamentoOrigen?: DepartamentoUpdateOneRequiredWithoutDerivacionesOrigenNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutDerivacionesNestedInput
  }

  export type DerivacionTicketUncheckedUpdateWithoutDepartamentoDestinoInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    departamentoOrigenId?: IntFieldUpdateOperationsInput | number
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    derivadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DerivacionTicketUncheckedUpdateManyWithoutDepartamentoDestinoInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    departamentoOrigenId?: IntFieldUpdateOperationsInput | number
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    derivadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SlaPrioridadUpdateWithoutDepartamentoInput = {
    tiempoRespuestaHoras?: IntFieldUpdateOperationsInput | number
    tiempoResolucionHoras?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    prioridad?: PrioridadUpdateOneRequiredWithoutSlasNestedInput
  }

  export type SlaPrioridadUncheckedUpdateWithoutDepartamentoInput = {
    prioridadId?: IntFieldUpdateOperationsInput | number
    tiempoRespuestaHoras?: IntFieldUpdateOperationsInput | number
    tiempoResolucionHoras?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SlaPrioridadUncheckedUpdateManyWithoutDepartamentoInput = {
    prioridadId?: IntFieldUpdateOperationsInput | number
    tiempoRespuestaHoras?: IntFieldUpdateOperationsInput | number
    tiempoResolucionHoras?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioCreateManyRolInput = {
    id?: number
    primerNombre: string
    segundoNombre?: string | null
    primerApellido: string
    segundoApellido: string
    correo: string
    hashContrasena: string
    departamentoId: number
    esInterno?: boolean
    ultimoAcceso?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type UsuarioUpdateWithoutRolInput = {
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    departamento?: DepartamentoUpdateOneRequiredWithoutUsuariosNestedInput
    ticketsCreados?: TicketUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutRolInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketsCreados?: TicketUncheckedUpdateManyWithoutSolicitanteNestedInput
    ticketsAsignados?: TicketUncheckedUpdateManyWithoutAsignadoNestedInput
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    archivosSubidos?: ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutUsuarioNestedInput
    encuestas?: EncuestaUncheckedUpdateManyWithoutUsuarioNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioNestedInput
    configuraciones?: ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutRolInput = {
    id?: IntFieldUpdateOperationsInput | number
    primerNombre?: StringFieldUpdateOperationsInput | string
    segundoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    primerApellido?: StringFieldUpdateOperationsInput | string
    segundoApellido?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    hashContrasena?: StringFieldUpdateOperationsInput | string
    departamentoId?: IntFieldUpdateOperationsInput | number
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    ultimoAcceso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketCreateManySolicitanteInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    asignadoA?: number | null
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type TicketCreateManyAsignadoInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    departamentoId: number
    prioridadId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type ComentarioTicketCreateManyUsuarioInput = {
    id?: number
    ticketId: number
    comentario: string
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type HistorialTicketCreateManyUsuarioInput = {
    id?: number
    ticketId: number
    tipoAccion: string
    campoModificado?: string | null
    valorAnterior?: string | null
    valorNuevo?: string | null
    comentario?: string | null
    createdAt?: Date | string
  }

  export type ArchivoAdjuntoCreateManyUsuarioInput = {
    id?: number
    ticketId: number
    comentarioId?: number | null
    nombreOriginal: string
    nombreAlmacenado: string
    rutaArchivo: string
    tamanoArchivo: number
    tipoMime: string
    createdAt?: Date | string
  }

  export type DerivacionTicketCreateManyUsuarioInput = {
    id?: number
    ticketId: number
    departamentoOrigenId: number
    departamentoDestinoId: number
    motivo?: string | null
    createdAt?: Date | string
  }

  export type EncuestaCreateManyUsuarioInput = {
    id?: number
    ticketId: number
    calificacion?: number | null
    comentario?: string | null
    fechaEnvio?: Date | string
    fechaRespuesta?: Date | string | null
  }

  export type NotificacionCreateManyUsuarioInput = {
    id?: number
    ticketId?: number | null
    tipo: string
    titulo: string
    mensaje: string
    leido?: boolean
    correoEnviado?: boolean
    fechaEnvioCorreo?: Date | string | null
    createdAt?: Date | string
  }

  export type UsuarioEnCopiaCreateManyUsuarioInput = {
    ticketId: number
    agregadoPor: number
    createdAt?: Date | string
  }

  export type ConfiguracionSistemaCreateManyUsuarioInput = {
    id?: number
    claveConfiguracion: string
    valorConfiguracion: string
    tipoDato: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type TicketUpdateWithoutSolicitanteInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    asignado?: UsuarioUpdateOneWithoutTicketsAsignadosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutTicketsNestedInput
    prioridad?: PrioridadUpdateOneRequiredWithoutTicketsNestedInput
    estado?: EstadoTicketUpdateOneRequiredWithoutTicketsNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateWithoutSolicitanteInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUncheckedUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateManyWithoutSolicitanteInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketUpdateWithoutAsignadoInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    solicitante?: UsuarioUpdateOneRequiredWithoutTicketsCreadosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutTicketsNestedInput
    prioridad?: PrioridadUpdateOneRequiredWithoutTicketsNestedInput
    estado?: EstadoTicketUpdateOneRequiredWithoutTicketsNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateWithoutAsignadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUncheckedUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateManyWithoutAsignadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ComentarioTicketUpdateWithoutUsuarioInput = {
    comentario?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    esSolucion?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticket?: TicketUpdateOneRequiredWithoutComentariosNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutComentarioNestedInput
  }

  export type ComentarioTicketUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    comentario?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    esSolucion?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutComentarioNestedInput
  }

  export type ComentarioTicketUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    comentario?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    esSolucion?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HistorialTicketUpdateWithoutUsuarioInput = {
    tipoAccion?: StringFieldUpdateOperationsInput | string
    campoModificado?: NullableStringFieldUpdateOperationsInput | string | null
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket?: TicketUpdateOneRequiredWithoutHistorialNestedInput
  }

  export type HistorialTicketUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    tipoAccion?: StringFieldUpdateOperationsInput | string
    campoModificado?: NullableStringFieldUpdateOperationsInput | string | null
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialTicketUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    tipoAccion?: StringFieldUpdateOperationsInput | string
    campoModificado?: NullableStringFieldUpdateOperationsInput | string | null
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArchivoAdjuntoUpdateWithoutUsuarioInput = {
    nombreOriginal?: StringFieldUpdateOperationsInput | string
    nombreAlmacenado?: StringFieldUpdateOperationsInput | string
    rutaArchivo?: StringFieldUpdateOperationsInput | string
    tamanoArchivo?: IntFieldUpdateOperationsInput | number
    tipoMime?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket?: TicketUpdateOneRequiredWithoutArchivosNestedInput
    comentario?: ComentarioTicketUpdateOneWithoutArchivosNestedInput
  }

  export type ArchivoAdjuntoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    comentarioId?: NullableIntFieldUpdateOperationsInput | number | null
    nombreOriginal?: StringFieldUpdateOperationsInput | string
    nombreAlmacenado?: StringFieldUpdateOperationsInput | string
    rutaArchivo?: StringFieldUpdateOperationsInput | string
    tamanoArchivo?: IntFieldUpdateOperationsInput | number
    tipoMime?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArchivoAdjuntoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    comentarioId?: NullableIntFieldUpdateOperationsInput | number | null
    nombreOriginal?: StringFieldUpdateOperationsInput | string
    nombreAlmacenado?: StringFieldUpdateOperationsInput | string
    rutaArchivo?: StringFieldUpdateOperationsInput | string
    tamanoArchivo?: IntFieldUpdateOperationsInput | number
    tipoMime?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DerivacionTicketUpdateWithoutUsuarioInput = {
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket?: TicketUpdateOneRequiredWithoutDerivacionesNestedInput
    departamentoOrigen?: DepartamentoUpdateOneRequiredWithoutDerivacionesOrigenNestedInput
    departamentoDestino?: DepartamentoUpdateOneRequiredWithoutDerivacionesDestinoNestedInput
  }

  export type DerivacionTicketUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    departamentoOrigenId?: IntFieldUpdateOperationsInput | number
    departamentoDestinoId?: IntFieldUpdateOperationsInput | number
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DerivacionTicketUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    departamentoOrigenId?: IntFieldUpdateOperationsInput | number
    departamentoDestinoId?: IntFieldUpdateOperationsInput | number
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EncuestaUpdateWithoutUsuarioInput = {
    calificacion?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticket?: TicketUpdateOneRequiredWithoutEncuestaNestedInput
  }

  export type EncuestaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    calificacion?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EncuestaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    calificacion?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificacionUpdateWithoutUsuarioInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: StringFieldUpdateOperationsInput | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    correoEnviado?: BoolFieldUpdateOperationsInput | boolean
    fechaEnvioCorreo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket?: TicketUpdateOneWithoutNotificacionesNestedInput
  }

  export type NotificacionUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: StringFieldUpdateOperationsInput | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    correoEnviado?: BoolFieldUpdateOperationsInput | boolean
    fechaEnvioCorreo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: StringFieldUpdateOperationsInput | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    correoEnviado?: BoolFieldUpdateOperationsInput | boolean
    fechaEnvioCorreo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioEnCopiaUpdateWithoutUsuarioInput = {
    agregadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket?: TicketUpdateOneRequiredWithoutUsuariosEnCopiaNestedInput
  }

  export type UsuarioEnCopiaUncheckedUpdateWithoutUsuarioInput = {
    ticketId?: IntFieldUpdateOperationsInput | number
    agregadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioEnCopiaUncheckedUpdateManyWithoutUsuarioInput = {
    ticketId?: IntFieldUpdateOperationsInput | number
    agregadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracionSistemaUpdateWithoutUsuarioInput = {
    claveConfiguracion?: StringFieldUpdateOperationsInput | string
    valorConfiguracion?: StringFieldUpdateOperationsInput | string
    tipoDato?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ConfiguracionSistemaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    claveConfiguracion?: StringFieldUpdateOperationsInput | string
    valorConfiguracion?: StringFieldUpdateOperationsInput | string
    tipoDato?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ConfiguracionSistemaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    claveConfiguracion?: StringFieldUpdateOperationsInput | string
    valorConfiguracion?: StringFieldUpdateOperationsInput | string
    tipoDato?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketCreateManyEstadoInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    departamentoId: number
    prioridadId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type TicketUpdateWithoutEstadoInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    solicitante?: UsuarioUpdateOneRequiredWithoutTicketsCreadosNestedInput
    asignado?: UsuarioUpdateOneWithoutTicketsAsignadosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutTicketsNestedInput
    prioridad?: PrioridadUpdateOneRequiredWithoutTicketsNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateWithoutEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUncheckedUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateManyWithoutEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    prioridadId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketCreateManyPrioridadInput = {
    id?: number
    numeroTicket: string
    asunto: string
    descripcion: string
    solicitanteId: number
    asignadoA?: number | null
    departamentoId: number
    estadoId: number
    fechaVencimiento?: Date | string | null
    fechaResolucion?: Date | string | null
    fechaCierre?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type SlaPrioridadCreateManyPrioridadInput = {
    departamentoId: number
    tiempoRespuestaHoras: number
    tiempoResolucionHoras: number
    createdAt?: Date | string
  }

  export type TicketUpdateWithoutPrioridadInput = {
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    solicitante?: UsuarioUpdateOneRequiredWithoutTicketsCreadosNestedInput
    asignado?: UsuarioUpdateOneWithoutTicketsAsignadosNestedInput
    departamento?: DepartamentoUpdateOneRequiredWithoutTicketsNestedInput
    estado?: EstadoTicketUpdateOneRequiredWithoutTicketsNestedInput
    comentarios?: ComentarioTicketUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateWithoutPrioridadInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: ComentarioTicketUncheckedUpdateManyWithoutTicketNestedInput
    historial?: HistorialTicketUncheckedUpdateManyWithoutTicketNestedInput
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutTicketNestedInput
    derivaciones?: DerivacionTicketUncheckedUpdateManyWithoutTicketNestedInput
    encuesta?: EncuestaUncheckedUpdateOneWithoutTicketNestedInput
    notificaciones?: NotificacionUncheckedUpdateManyWithoutTicketNestedInput
    usuariosEnCopia?: UsuarioEnCopiaUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateManyWithoutPrioridadInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroTicket?: StringFieldUpdateOperationsInput | string
    asunto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    solicitanteId?: IntFieldUpdateOperationsInput | number
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaResolucion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SlaPrioridadUpdateWithoutPrioridadInput = {
    tiempoRespuestaHoras?: IntFieldUpdateOperationsInput | number
    tiempoResolucionHoras?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departamento?: DepartamentoUpdateOneRequiredWithoutSlaPrioridadesNestedInput
  }

  export type SlaPrioridadUncheckedUpdateWithoutPrioridadInput = {
    departamentoId?: IntFieldUpdateOperationsInput | number
    tiempoRespuestaHoras?: IntFieldUpdateOperationsInput | number
    tiempoResolucionHoras?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SlaPrioridadUncheckedUpdateManyWithoutPrioridadInput = {
    departamentoId?: IntFieldUpdateOperationsInput | number
    tiempoRespuestaHoras?: IntFieldUpdateOperationsInput | number
    tiempoResolucionHoras?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioTicketCreateManyTicketInput = {
    id?: number
    usuarioId: number
    comentario: string
    esInterno?: boolean
    esSolucion?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type HistorialTicketCreateManyTicketInput = {
    id?: number
    usuarioId: number
    tipoAccion: string
    campoModificado?: string | null
    valorAnterior?: string | null
    valorNuevo?: string | null
    comentario?: string | null
    createdAt?: Date | string
  }

  export type ArchivoAdjuntoCreateManyTicketInput = {
    id?: number
    comentarioId?: number | null
    nombreOriginal: string
    nombreAlmacenado: string
    rutaArchivo: string
    tamanoArchivo: number
    tipoMime: string
    subidoPor: number
    createdAt?: Date | string
  }

  export type DerivacionTicketCreateManyTicketInput = {
    id?: number
    departamentoOrigenId: number
    departamentoDestinoId: number
    motivo?: string | null
    derivadoPor: number
    createdAt?: Date | string
  }

  export type NotificacionCreateManyTicketInput = {
    id?: number
    usuarioId: number
    tipo: string
    titulo: string
    mensaje: string
    leido?: boolean
    correoEnviado?: boolean
    fechaEnvioCorreo?: Date | string | null
    createdAt?: Date | string
  }

  export type UsuarioEnCopiaCreateManyTicketInput = {
    usuarioId: number
    agregadoPor: number
    createdAt?: Date | string
  }

  export type ComentarioTicketUpdateWithoutTicketInput = {
    comentario?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    esSolucion?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario?: UsuarioUpdateOneRequiredWithoutComentariosNestedInput
    archivos?: ArchivoAdjuntoUpdateManyWithoutComentarioNestedInput
  }

  export type ComentarioTicketUncheckedUpdateWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    comentario?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    esSolucion?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivos?: ArchivoAdjuntoUncheckedUpdateManyWithoutComentarioNestedInput
  }

  export type ComentarioTicketUncheckedUpdateManyWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    comentario?: StringFieldUpdateOperationsInput | string
    esInterno?: BoolFieldUpdateOperationsInput | boolean
    esSolucion?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HistorialTicketUpdateWithoutTicketInput = {
    tipoAccion?: StringFieldUpdateOperationsInput | string
    campoModificado?: NullableStringFieldUpdateOperationsInput | string | null
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutHistorialNestedInput
  }

  export type HistorialTicketUncheckedUpdateWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    tipoAccion?: StringFieldUpdateOperationsInput | string
    campoModificado?: NullableStringFieldUpdateOperationsInput | string | null
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialTicketUncheckedUpdateManyWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    tipoAccion?: StringFieldUpdateOperationsInput | string
    campoModificado?: NullableStringFieldUpdateOperationsInput | string | null
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArchivoAdjuntoUpdateWithoutTicketInput = {
    nombreOriginal?: StringFieldUpdateOperationsInput | string
    nombreAlmacenado?: StringFieldUpdateOperationsInput | string
    rutaArchivo?: StringFieldUpdateOperationsInput | string
    tamanoArchivo?: IntFieldUpdateOperationsInput | number
    tipoMime?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: ComentarioTicketUpdateOneWithoutArchivosNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutArchivosSubidosNestedInput
  }

  export type ArchivoAdjuntoUncheckedUpdateWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    comentarioId?: NullableIntFieldUpdateOperationsInput | number | null
    nombreOriginal?: StringFieldUpdateOperationsInput | string
    nombreAlmacenado?: StringFieldUpdateOperationsInput | string
    rutaArchivo?: StringFieldUpdateOperationsInput | string
    tamanoArchivo?: IntFieldUpdateOperationsInput | number
    tipoMime?: StringFieldUpdateOperationsInput | string
    subidoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArchivoAdjuntoUncheckedUpdateManyWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    comentarioId?: NullableIntFieldUpdateOperationsInput | number | null
    nombreOriginal?: StringFieldUpdateOperationsInput | string
    nombreAlmacenado?: StringFieldUpdateOperationsInput | string
    rutaArchivo?: StringFieldUpdateOperationsInput | string
    tamanoArchivo?: IntFieldUpdateOperationsInput | number
    tipoMime?: StringFieldUpdateOperationsInput | string
    subidoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DerivacionTicketUpdateWithoutTicketInput = {
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departamentoOrigen?: DepartamentoUpdateOneRequiredWithoutDerivacionesOrigenNestedInput
    departamentoDestino?: DepartamentoUpdateOneRequiredWithoutDerivacionesDestinoNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutDerivacionesNestedInput
  }

  export type DerivacionTicketUncheckedUpdateWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    departamentoOrigenId?: IntFieldUpdateOperationsInput | number
    departamentoDestinoId?: IntFieldUpdateOperationsInput | number
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    derivadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DerivacionTicketUncheckedUpdateManyWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    departamentoOrigenId?: IntFieldUpdateOperationsInput | number
    departamentoDestinoId?: IntFieldUpdateOperationsInput | number
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    derivadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionUpdateWithoutTicketInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: StringFieldUpdateOperationsInput | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    correoEnviado?: BoolFieldUpdateOperationsInput | boolean
    fechaEnvioCorreo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutNotificacionesNestedInput
  }

  export type NotificacionUncheckedUpdateWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: StringFieldUpdateOperationsInput | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    correoEnviado?: BoolFieldUpdateOperationsInput | boolean
    fechaEnvioCorreo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionUncheckedUpdateManyWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: StringFieldUpdateOperationsInput | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    correoEnviado?: BoolFieldUpdateOperationsInput | boolean
    fechaEnvioCorreo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioEnCopiaUpdateWithoutTicketInput = {
    agregadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutUsuariosEnCopiaNestedInput
  }

  export type UsuarioEnCopiaUncheckedUpdateWithoutTicketInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    agregadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioEnCopiaUncheckedUpdateManyWithoutTicketInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    agregadoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArchivoAdjuntoCreateManyComentarioInput = {
    id?: number
    ticketId: number
    nombreOriginal: string
    nombreAlmacenado: string
    rutaArchivo: string
    tamanoArchivo: number
    tipoMime: string
    subidoPor: number
    createdAt?: Date | string
  }

  export type ArchivoAdjuntoUpdateWithoutComentarioInput = {
    nombreOriginal?: StringFieldUpdateOperationsInput | string
    nombreAlmacenado?: StringFieldUpdateOperationsInput | string
    rutaArchivo?: StringFieldUpdateOperationsInput | string
    tamanoArchivo?: IntFieldUpdateOperationsInput | number
    tipoMime?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket?: TicketUpdateOneRequiredWithoutArchivosNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutArchivosSubidosNestedInput
  }

  export type ArchivoAdjuntoUncheckedUpdateWithoutComentarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    nombreOriginal?: StringFieldUpdateOperationsInput | string
    nombreAlmacenado?: StringFieldUpdateOperationsInput | string
    rutaArchivo?: StringFieldUpdateOperationsInput | string
    tamanoArchivo?: IntFieldUpdateOperationsInput | number
    tipoMime?: StringFieldUpdateOperationsInput | string
    subidoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArchivoAdjuntoUncheckedUpdateManyWithoutComentarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ticketId?: IntFieldUpdateOperationsInput | number
    nombreOriginal?: StringFieldUpdateOperationsInput | string
    nombreAlmacenado?: StringFieldUpdateOperationsInput | string
    rutaArchivo?: StringFieldUpdateOperationsInput | string
    tamanoArchivo?: IntFieldUpdateOperationsInput | number
    tipoMime?: StringFieldUpdateOperationsInput | string
    subidoPor?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}