
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.DepartamentoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  createdAt: 'createdAt'
};

exports.Prisma.RolScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  permisos: 'permisos',
  createdAt: 'createdAt'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  primerNombre: 'primerNombre',
  segundoNombre: 'segundoNombre',
  primerApellido: 'primerApellido',
  segundoApellido: 'segundoApellido',
  correo: 'correo',
  hashContrasena: 'hashContrasena',
  rolId: 'rolId',
  departamentoId: 'departamentoId',
  esInterno: 'esInterno',
  ultimoAcceso: 'ultimoAcceso',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EstadoTicketScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  esEstadoFinal: 'esEstadoFinal',
  ordenSecuencia: 'ordenSecuencia',
  createdAt: 'createdAt'
};

exports.Prisma.PrioridadScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  nivel: 'nivel',
  createdAt: 'createdAt'
};

exports.Prisma.SlaPrioridadScalarFieldEnum = {
  prioridadId: 'prioridadId',
  departamentoId: 'departamentoId',
  tiempoRespuestaHoras: 'tiempoRespuestaHoras',
  tiempoResolucionHoras: 'tiempoResolucionHoras',
  createdAt: 'createdAt'
};

exports.Prisma.TicketScalarFieldEnum = {
  id: 'id',
  numeroTicket: 'numeroTicket',
  asunto: 'asunto',
  descripcion: 'descripcion',
  solicitanteId: 'solicitanteId',
  asignadoA: 'asignadoA',
  departamentoId: 'departamentoId',
  prioridadId: 'prioridadId',
  estadoId: 'estadoId',
  fechaVencimiento: 'fechaVencimiento',
  fechaResolucion: 'fechaResolucion',
  fechaCierre: 'fechaCierre',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HistorialTicketScalarFieldEnum = {
  id: 'id',
  ticketId: 'ticketId',
  usuarioId: 'usuarioId',
  tipoAccion: 'tipoAccion',
  campoModificado: 'campoModificado',
  valorAnterior: 'valorAnterior',
  valorNuevo: 'valorNuevo',
  comentario: 'comentario',
  createdAt: 'createdAt'
};

exports.Prisma.ComentarioTicketScalarFieldEnum = {
  id: 'id',
  ticketId: 'ticketId',
  usuarioId: 'usuarioId',
  comentario: 'comentario',
  esInterno: 'esInterno',
  esSolucion: 'esSolucion',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ArchivoAdjuntoScalarFieldEnum = {
  id: 'id',
  ticketId: 'ticketId',
  comentarioId: 'comentarioId',
  nombreOriginal: 'nombreOriginal',
  nombreAlmacenado: 'nombreAlmacenado',
  rutaArchivo: 'rutaArchivo',
  tamanoArchivo: 'tamanoArchivo',
  tipoMime: 'tipoMime',
  subidoPor: 'subidoPor',
  createdAt: 'createdAt'
};

exports.Prisma.DerivacionTicketScalarFieldEnum = {
  id: 'id',
  ticketId: 'ticketId',
  departamentoOrigenId: 'departamentoOrigenId',
  departamentoDestinoId: 'departamentoDestinoId',
  motivo: 'motivo',
  derivadoPor: 'derivadoPor',
  createdAt: 'createdAt'
};

exports.Prisma.EncuestaScalarFieldEnum = {
  id: 'id',
  ticketId: 'ticketId',
  calificacion: 'calificacion',
  comentario: 'comentario',
  enviadoPor: 'enviadoPor',
  fechaEnvio: 'fechaEnvio',
  fechaRespuesta: 'fechaRespuesta'
};

exports.Prisma.NotificacionScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  ticketId: 'ticketId',
  tipo: 'tipo',
  titulo: 'titulo',
  mensaje: 'mensaje',
  leido: 'leido',
  correoEnviado: 'correoEnviado',
  fechaEnvioCorreo: 'fechaEnvioCorreo',
  createdAt: 'createdAt'
};

exports.Prisma.UsuarioEnCopiaScalarFieldEnum = {
  ticketId: 'ticketId',
  usuarioId: 'usuarioId',
  agregadoPor: 'agregadoPor',
  createdAt: 'createdAt'
};

exports.Prisma.ConfiguracionSistemaScalarFieldEnum = {
  id: 'id',
  claveConfiguracion: 'claveConfiguracion',
  valorConfiguracion: 'valorConfiguracion',
  tipoDato: 'tipoDato',
  actualizadoPor: 'actualizadoPor',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PasswordResetTokenScalarFieldEnum = {
  id: 'id',
  email: 'email',
  token: 'token',
  expiresAt: 'expiresAt',
  used: 'used',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Departamento: 'Departamento',
  Rol: 'Rol',
  Usuario: 'Usuario',
  EstadoTicket: 'EstadoTicket',
  Prioridad: 'Prioridad',
  SlaPrioridad: 'SlaPrioridad',
  Ticket: 'Ticket',
  HistorialTicket: 'HistorialTicket',
  ComentarioTicket: 'ComentarioTicket',
  ArchivoAdjunto: 'ArchivoAdjunto',
  DerivacionTicket: 'DerivacionTicket',
  Encuesta: 'Encuesta',
  Notificacion: 'Notificacion',
  UsuarioEnCopia: 'UsuarioEnCopia',
  ConfiguracionSistema: 'ConfiguracionSistema',
  PasswordResetToken: 'PasswordResetToken'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
